syntax = "proto3";
package claros.common.core;

import "claros_content.proto";

option csharp_namespace ="Claros.Common.Core";

// Common response object for all HTTP methods
// GET         
// would have content defined, errors should be null
//
// POST/PATCH 
// if there was an error in validation, or exception, the errors would be populated
// if the POST was successful, the created object would be returned
// 
// DELETE
// if there is an error procesing the delete, the errors would be populated
message ApiResponse {

    repeated ApiError errors = 1;

    // Allow for clients to receive a list of unrelated data in a single call
    repeated ClarosContent contents = 2;

    // Standard object for receiving a single protobuf    
    ClarosContent content = 3;
    
}


message ApiError {
    // Since this object will be used by the facade as well as the api controller
    // this allows us to set the status code at the facde level, essentially
    // passing it through to the controller
    // Example: 400 for an error
    uint32 statusCode = 1;

    // Custom error code that maps to an enum
    // Example: ERR-100
    string code = 2;   

    // detailed message describing the error
    // Example: This object didn't validate properly
    string detail = 3;  

    // allow error to have clarosContent
    ClarosContent content = 4;
}