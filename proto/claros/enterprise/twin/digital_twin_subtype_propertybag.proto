syntax = "proto3";
package claros.enterprise.twin;
 
import "proto/claros/enterprise/twin/digital_twin.proto";

option csharp_namespace = "Claros.Enterprise.Twin";
 
enum EnumElements {
    ELEMENTS_UNKNOWN = 0;
    ELEMENTS_TEXTBOX = 1;                   //Element for HTML input fields
    ELEMENTS_DATE = 2;                      //Element for DatePicker
    ELEMENTS_DROPDOWN = 3;                  //Element for HTML Select
    ELEMENTS_LIST = 4;                      //Element for List
    ELEMENTS_OPTION = 5;                    //Element for HTML Option
    ELEMENTS_FORM = 6;                      //Element for HTML Form Control
    ELEMENTS_MEASUREMENT_DEFINITION = 7;    //Element for MeasurementDefintion
}
 
message Validator {
    bool required = 1;    //Specifies required Attribute
    int32 minLength = 2;  //Mimimum Length for input field
    int32 maxLength = 3;  //Maximum Length for input field
}
 
message Attribute {
    // Definition is namespace ex, claros.enterprise.twin-v1.0.map
    string definition = 1;
 
    //JSON attribute name
    string key = 2;
 
    // Internationalization key
    string i18nKey = 3;
 
    // Angular form Elements
    EnumElements uiElement = 4;
 
    // Optional: validation  criteria if validation for UI element need to happen
    optional Validator validator = 5;
 
    // Optional: if the UI element is needs pre-defined options
    optional map<string,string> options = 6;
}
 
message MeasurementDefintion {
    // The parameter related to the measurement as a GUID
    string parameterGuid = 1;
 
    // The unit related to the measurement as a GUID
    string unitGuid = 2;
 
    // Potentially, Precision could be used in the future measurement definition
    // Precision
    // Potentially, Analysis Method could be used in the future measurement definition
    // Analysis Method
}
 
message PropertyBagCollection {
    repeated Attribute attributes = 1;
    repeated MeasurementDefintion measurementDefintions = 2;
    repeated DigitalTwin suggestedChildDigitalTwins = 3;
}
 
message PropertyBagCollections {
    repeated PropertyBagCollection  items  = 1;
}