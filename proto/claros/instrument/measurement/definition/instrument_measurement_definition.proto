syntax = "proto3";
package claros.instrument.measurement;

import "clarosdatetime.proto";
import "milliamp_binding.proto";
import "scsensor_binding.proto";
import "limit.proto";
 
// This defines a set of data that is collected from an instrument

message InstrumentMeasurementDefinition {
    string instrumentMeasurementId = 1;                 // This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
    string name = 2;                                    // The name of the collection of instrument measurmenets.  There is a good chance this correlates to the parameter name.
    string fusionId = 3;                                // The FusionId of the instrument that the data is being collected
    string locationId = 4;                              // Optional: The location where the data is being collected
    uint32 parameterId = 5;                             // Required: The parameter related to the instrument measurments being collected
    uint32 displayUnitId = 6;                           // The default display unit that the data will be rendered
    bool isVisible = 7;                                 // Soft delete of the Instrument Measurment Collection

    oneof binding {                                     // How the data is bound from the incoming instrument
        SCSensorBinding scSensorBinding = 8;            // For SC Instruments, how the SC Instrument is identified
        MilliAmpBinding milliAmpBinding = 9;            // For 4-20 mA input, how the inputs are mapped to instrument measurments
    }

    repeated claros.common.core.Limit limits = 10;      // A collection of limits associated to the instrument measurements

    // Record Audit Fields
    string createdById = 11;
    claros.common.core.ClarosDateTime createdOn = 12;
    string modifiedById = 13;
    claros.common.core.ClarosDateTime modifiedOn = 14;
}