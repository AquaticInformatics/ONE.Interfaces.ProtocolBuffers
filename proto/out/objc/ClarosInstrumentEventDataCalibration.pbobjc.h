// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_event_data_calibration.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class EventDataCalibrationStandard;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ClarosInstrumentEventDataCalibrationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ClarosInstrumentEventDataCalibrationRoot : GPBRootObject
@end

#pragma mark - EventDataCalibration

typedef GPB_ENUM(EventDataCalibration_FieldNumber) {
  EventDataCalibration_FieldNumber_Id_p = 1,
  EventDataCalibration_FieldNumber_UserId = 2,
  EventDataCalibration_FieldNumber_Time = 3,
  EventDataCalibration_FieldNumber_Status = 4,
  EventDataCalibration_FieldNumber_OffsetUnits = 5,
  EventDataCalibration_FieldNumber_SlopeUnits = 6,
  EventDataCalibration_FieldNumber_Slope = 7,
  EventDataCalibration_FieldNumber_SlopeAux = 8,
  EventDataCalibration_FieldNumber_Offset = 9,
  EventDataCalibration_FieldNumber_R2 = 10,
  EventDataCalibration_FieldNumber_CalibrationStandardsArray = 11,
};

@interface EventDataCalibration : GPBMessage

/** unique identifier of the calibration.  Could be a hash. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** User who performed the calibration */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** Calibration Time */
@property(nonatomic, readwrite) uint64_t time;

/** Status enumeration specific to the device */
@property(nonatomic, readwrite) uint32_t status;

/** Unit for the calibration */
@property(nonatomic, readwrite) uint32_t offsetUnits;

/** Unit for the slope */
@property(nonatomic, readwrite) uint32_t slopeUnits;

/** Slope of the Calibration */
@property(nonatomic, readwrite) float slope;

/** Auxiliary way of displaying slope.  Used by pH to give the percent of the nominal slope */
@property(nonatomic, readwrite) float slopeAux;

/** offset of the calibration curve */
@property(nonatomic, readwrite) float offset;

/** r-squared of the calibration curve */
@property(nonatomic, readwrite) float r2;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EventDataCalibrationStandard*> *calibrationStandardsArray;
/** The number of items in @c calibrationStandardsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger calibrationStandardsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
