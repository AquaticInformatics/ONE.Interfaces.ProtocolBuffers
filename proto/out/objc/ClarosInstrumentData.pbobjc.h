// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_data.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DateTime;
@class InstrumentEvent;
@class InstrumentMeasurement;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ClarosInstrumentDataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ClarosInstrumentDataRoot : GPBRootObject
@end

#pragma mark - InstrumentData

typedef GPB_ENUM(InstrumentData_FieldNumber) {
  InstrumentData_FieldNumber_TenantId = 1,
  InstrumentData_FieldNumber_FusionId = 2,
  InstrumentData_FieldNumber_Events = 3,
  InstrumentData_FieldNumber_MeasurementsArray = 4,
  InstrumentData_FieldNumber_Settings = 5,
  InstrumentData_FieldNumber_States = 6,
  InstrumentData_FieldNumber_InstrumentDataDateTime = 7,
};

@interface InstrumentData : GPBMessage

/** In header */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fusionId;

@property(nonatomic, readwrite, strong, null_resettable) InstrumentEvent *events;
/** Test to see if @c events has been set. */
@property(nonatomic, readwrite) BOOL hasEvents;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InstrumentMeasurement*> *measurementsArray;
/** The number of items in @c measurementsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger measurementsArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *settings;
/** The number of items in @c settings without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger settings_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *states;
/** The number of items in @c states without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger states_Count;

/** this is optionally set if all children share the same time */
@property(nonatomic, readwrite, strong, null_resettable) DateTime *instrumentDataDateTime;
/** Test to see if @c instrumentDataDateTime has been set. */
@property(nonatomic, readwrite) BOOL hasInstrumentDataDateTime;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
