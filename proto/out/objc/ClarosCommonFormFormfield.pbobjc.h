// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_form_formfield.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Cell;
@class InstrumentData;
GPB_ENUM_FWD_DECLARE(FormDataEntryType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ClarosCommonFormFormfieldRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ClarosCommonFormFormfieldRoot : GPBRootObject
@end

#pragma mark - FormField

typedef GPB_ENUM(FormField_FieldNumber) {
  FormField_FieldNumber_Guid = 1,
  FormField_FieldNumber_FormFieldDefinitionId = 2,
  FormField_FieldNumber_FormDataEntryType = 3,
  FormField_FieldNumber_IsDataEntryTypeLocked = 4,
  FormField_FieldNumber_Name = 5,
  FormField_FieldNumber_Cell = 6,
  FormField_FieldNumber_InstrumentDataArray = 7,
};

typedef GPB_ENUM(FormField_FormFieldData_OneOfCase) {
  FormField_FormFieldData_OneOfCase_GPBUnsetOneOfCase = 0,
  FormField_FormFieldData_OneOfCase_Cell = 6,
};

@interface FormField : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *guid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *formFieldDefinitionId;

@property(nonatomic, readwrite) enum FormDataEntryType formDataEntryType;

@property(nonatomic, readwrite) BOOL isDataEntryTypeLocked;

@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@property(nonatomic, readonly) FormField_FormFieldData_OneOfCase formFieldDataOneOfCase;

/** AdHocFormField adHocFormField */
@property(nonatomic, readwrite, strong, null_resettable) Cell *cell;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<InstrumentData*> *instrumentDataArray;
/** The number of items in @c instrumentDataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger instrumentDataArray_Count;

@end

/**
 * Fetches the raw value of a @c FormField's @c formDataEntryType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t FormField_FormDataEntryType_RawValue(FormField *message);
/**
 * Sets the raw value of an @c FormField's @c formDataEntryType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetFormField_FormDataEntryType_RawValue(FormField *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'formFieldData'.
 **/
void FormField_ClearFormFieldDataOneOfCase(FormField *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
