// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_operations_spreadsheet_worksheet_column.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ComputationBinding;
@class InstrumentMeasurementBinding;
@class Limit;
@class ReportableQualifierDefinition;
GPB_ENUM_FWD_DECLARE(DataSourceType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ClarosOperationsSpreadsheetWorksheetColumnRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ClarosOperationsSpreadsheetWorksheetColumnRoot : GPBRootObject
@end

#pragma mark - Column

typedef GPB_ENUM(Column_FieldNumber) {
  Column_FieldNumber_ColumnNumber = 1,
  Column_FieldNumber_Name = 2,
  Column_FieldNumber_Description_p = 3,
  Column_FieldNumber_ParameterId = 4,
  Column_FieldNumber_DisplayUnitId = 5,
  Column_FieldNumber_LocationId = 6,
  Column_FieldNumber_IsActive = 7,
  Column_FieldNumber_LimitsArray = 8,
  Column_FieldNumber_DataSourceType = 9,
  Column_FieldNumber_InstrumentMeasurementBinding = 10,
  Column_FieldNumber_ComputationBinding = 11,
  Column_FieldNumber_ReportableQualiferDefinitionArray = 12,
};

typedef GPB_ENUM(Column_Binding_OneOfCase) {
  Column_Binding_OneOfCase_GPBUnsetOneOfCase = 0,
  Column_Binding_OneOfCase_InstrumentMeasurementBinding = 10,
  Column_Binding_OneOfCase_ComputationBinding = 11,
};

@interface Column : GPBMessage

/** The number of the column */
@property(nonatomic, readwrite) uint32_t columnNumber;

/** The name of the column */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** The description of the column */
@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

/** The parameter associated with the column */
@property(nonatomic, readwrite) uint32_t parameterId;

/** The default unit to display the column */
@property(nonatomic, readwrite) uint32_t displayUnitId;

/** The location associated to the data in the column */
@property(nonatomic, readwrite, copy, null_resettable) NSString *locationId;

/** Soft Delete of the column */
@property(nonatomic, readwrite) BOOL isActive;

/** Collection of limits related to the column */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Limit*> *limitsArray;
/** The number of items in @c limitsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger limitsArray_Count;

/** The expected place where the data will be received into the column */
@property(nonatomic, readwrite) enum DataSourceType dataSourceType;

@property(nonatomic, readonly) Column_Binding_OneOfCase bindingOneOfCase;

/** Column comes from aggregated instrument measurments */
@property(nonatomic, readwrite, strong, null_resettable) InstrumentMeasurementBinding *instrumentMeasurementBinding;

/** Column comes as a result of a computation */
@property(nonatomic, readwrite, strong, null_resettable) ComputationBinding *computationBinding;

/** This determines how qualifers are interpreted for this column */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ReportableQualifierDefinition*> *reportableQualiferDefinitionArray;
/** The number of items in @c reportableQualiferDefinitionArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger reportableQualiferDefinitionArray_Count;

@end

/**
 * Fetches the raw value of a @c Column's @c dataSourceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Column_DataSourceType_RawValue(Column *message);
/**
 * Sets the raw value of an @c Column's @c dataSourceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetColumn_DataSourceType_RawValue(Column *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'binding'.
 **/
void Column_ClearBindingOneOfCase(Column *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
