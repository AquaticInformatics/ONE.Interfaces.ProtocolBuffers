// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_configuration_configuration.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class DateTime;
@class Privileges;
GPB_ENUM_FWD_DECLARE(EntityType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ClarosCommonConfigurationConfigurationRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ClarosCommonConfigurationConfigurationRoot : GPBRootObject
@end

#pragma mark - Configuration

typedef GPB_ENUM(Configuration_FieldNumber) {
  Configuration_FieldNumber_Id_p = 1,
  Configuration_FieldNumber_CreatedById = 2,
  Configuration_FieldNumber_CreatedOn = 3,
  Configuration_FieldNumber_ModifiedById = 4,
  Configuration_FieldNumber_ModifiedOn = 5,
  Configuration_FieldNumber_ConfigurationData = 6,
  Configuration_FieldNumber_EntityTypeId = 7,
  Configuration_FieldNumber_FilterById = 8,
  Configuration_FieldNumber_TenantId = 9,
  Configuration_FieldNumber_OwnerId = 10,
  Configuration_FieldNumber_Public_p = 11,
  Configuration_FieldNumber_Version = 12,
  Configuration_FieldNumber_PrivilegesArray = 13,
};

@interface Configuration : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *createdById;

@property(nonatomic, readwrite, strong, null_resettable) DateTime *createdOn;
/** Test to see if @c createdOn has been set. */
@property(nonatomic, readwrite) BOOL hasCreatedOn;

@property(nonatomic, readwrite, copy, null_resettable) NSString *modifiedById;

@property(nonatomic, readwrite, strong, null_resettable) DateTime *modifiedOn;
/** Test to see if @c modifiedOn has been set. */
@property(nonatomic, readwrite) BOOL hasModifiedOn;

@property(nonatomic, readwrite, copy, null_resettable) NSString *configurationData;

@property(nonatomic, readwrite) enum EntityType entityTypeId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *filterById;

@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *ownerId;

@property(nonatomic, readwrite) BOOL public_p;

@property(nonatomic, readwrite) uint32_t version;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Privileges*> *privilegesArray;
/** The number of items in @c privilegesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger privilegesArray_Count;

@end

/**
 * Fetches the raw value of a @c Configuration's @c entityTypeId property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Configuration_EntityTypeId_RawValue(Configuration *message);
/**
 * Sets the raw value of an @c Configuration's @c entityTypeId property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetConfiguration_EntityTypeId_RawValue(Configuration *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
