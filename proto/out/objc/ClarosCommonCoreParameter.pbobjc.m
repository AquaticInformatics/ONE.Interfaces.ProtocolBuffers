// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_core_parameter.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "ClarosCommonCoreParameter.pbobjc.h"
#import "ClarosCommonCoreClarosdatetime.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ClarosCommonCoreParameterRoot

@implementation ClarosCommonCoreParameterRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - ClarosCommonCoreParameterRoot_FileDescriptor

static GPBFileDescriptor *ClarosCommonCoreParameterRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"claros.common.core"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Parameter

@implementation Parameter

@dynamic id_p;
@dynamic intId;
@dynamic i18NKey;
@dynamic parameterTypeId;
@dynamic quantityTypeId;
@dynamic description_p;
@dynamic tenantId;
@dynamic createdById;
@dynamic hasCreatedOn, createdOn;
@dynamic modifiedById;
@dynamic hasModifiedOn, modifiedOn;

typedef struct Parameter__storage_ {
  uint32_t _has_storage_[1];
  uint32_t intId;
  NSString *id_p;
  NSString *i18NKey;
  NSString *parameterTypeId;
  NSString *quantityTypeId;
  NSString *description_p;
  NSString *tenantId;
  NSString *createdById;
  ClarosDateTime *createdOn;
  NSString *modifiedById;
  ClarosDateTime *modifiedOn;
} Parameter__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_Id_p,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Parameter__storage_, id_p),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "intId",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_IntId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Parameter__storage_, intId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "i18NKey",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_I18NKey,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Parameter__storage_, i18NKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "parameterTypeId",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_ParameterTypeId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Parameter__storage_, parameterTypeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "quantityTypeId",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_QuantityTypeId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Parameter__storage_, quantityTypeId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "description_p",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_Description_p,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Parameter__storage_, description_p),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "tenantId",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_TenantId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Parameter__storage_, tenantId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createdById",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_CreatedById,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Parameter__storage_, createdById),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "createdOn",
        .dataTypeSpecific.className = GPBStringifySymbol(ClarosDateTime),
        .number = Parameter_FieldNumber_CreatedOn,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(Parameter__storage_, createdOn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "modifiedById",
        .dataTypeSpecific.className = NULL,
        .number = Parameter_FieldNumber_ModifiedById,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(Parameter__storage_, modifiedById),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "modifiedOn",
        .dataTypeSpecific.className = GPBStringifySymbol(ClarosDateTime),
        .number = Parameter_FieldNumber_ModifiedOn,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(Parameter__storage_, modifiedOn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Parameter class]
                                     rootClass:[ClarosCommonCoreParameterRoot class]
                                          file:ClarosCommonCoreParameterRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Parameter__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001\000Id\000\002E\000\003\003$\000\004\017\000\005\016\000\007\010\000\010\013\000\t\t\000\n\014\000\013\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
