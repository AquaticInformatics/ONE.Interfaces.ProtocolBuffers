// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_operations_spreadsheet_worksheet_celldata.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AuditEvent;
@class CellDataBinding;
@class ReportableQualifier;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ClarosOperationsSpreadsheetWorksheetCelldataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ClarosOperationsSpreadsheetWorksheetCelldataRoot : GPBRootObject
@end

#pragma mark - CellData

typedef GPB_ENUM(CellData_FieldNumber) {
  CellData_FieldNumber_Value = 1,
  CellData_FieldNumber_StringValue = 2,
  CellData_FieldNumber_IsLocked = 3,
  CellData_FieldNumber_UnitId = 4,
  CellData_FieldNumber_Justification = 5,
  CellData_FieldNumber_ReportableQualifier = 6,
  CellData_FieldNumber_CellDataBindingsArray = 7,
  CellData_FieldNumber_AuditEvent = 99,
};

@interface CellData : GPBMessage

/** The value that was entered by the user as a number */
@property(nonatomic, readwrite) double value;

/** The value represented as a string */
@property(nonatomic, readwrite, copy, null_resettable) NSString *stringValue;

/** Whether the cell has been locked to prevent unautorized update of just this cell */
@property(nonatomic, readwrite) BOOL isLocked;

/** The unit that relates to the value */
@property(nonatomic, readwrite) uint32_t unitId;

/** Textual note to explain why the data was changed */
@property(nonatomic, readwrite, copy, null_resettable) NSString *justification;

/** If the data was entered as a qualified value, the qualified properties */
@property(nonatomic, readwrite, strong, null_resettable) ReportableQualifier *reportableQualifier;
/** Test to see if @c reportableQualifier has been set. */
@property(nonatomic, readwrite) BOOL hasReportableQualifier;

/** Where the data came from that went into the cell */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CellDataBinding*> *cellDataBindingsArray;
/** The number of items in @c cellDataBindingsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger cellDataBindingsArray_Count;

/** Audit information for this cell entry */
@property(nonatomic, readwrite, strong, null_resettable) AuditEvent *auditEvent;
/** Test to see if @c auditEvent has been set. */
@property(nonatomic, readwrite) BOOL hasAuditEvent;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
