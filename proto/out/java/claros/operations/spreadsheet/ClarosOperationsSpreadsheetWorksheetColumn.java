// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_operations_spreadsheet_worksheet_column.proto

package claros.operations.spreadsheet;

public final class ClarosOperationsSpreadsheetWorksheetColumn {
  private ClarosOperationsSpreadsheetWorksheetColumn() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ColumnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.operations.spreadsheet.Column)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The number of the column
     * </pre>
     *
     * <code>uint32 columnNumber = 1;</code>
     */
    int getColumnNumber();

    /**
     * <pre>
     * The name of the column
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the column
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The description of the column
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * The description of the column
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * The parameter associated with the column
     * </pre>
     *
     * <code>uint32 parameterId = 4;</code>
     */
    int getParameterId();

    /**
     * <pre>
     * The default unit to display the column
     * </pre>
     *
     * <code>uint32 displayUnitId = 5;</code>
     */
    int getDisplayUnitId();

    /**
     * <pre>
     * The location associated to the data in the column
     * </pre>
     *
     * <code>string locationId = 6;</code>
     */
    java.lang.String getLocationId();
    /**
     * <pre>
     * The location associated to the data in the column
     * </pre>
     *
     * <code>string locationId = 6;</code>
     */
    com.google.protobuf.ByteString
        getLocationIdBytes();

    /**
     * <pre>
     * Soft Delete of the column
     * </pre>
     *
     * <code>bool isActive = 7;</code>
     */
    boolean getIsActive();

    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    java.util.List<claros.common.core.ClarosCommonCoreLimit.Limit> 
        getLimitsList();
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    claros.common.core.ClarosCommonCoreLimit.Limit getLimits(int index);
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    int getLimitsCount();
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    java.util.List<? extends claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder> 
        getLimitsOrBuilderList();
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder getLimitsOrBuilder(
        int index);

    /**
     * <pre>
     * The expected place where the data will be received into the column
     * </pre>
     *
     * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
     */
    int getDataSourceTypeValue();
    /**
     * <pre>
     * The expected place where the data will be received into the column
     * </pre>
     *
     * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
     */
    claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType getDataSourceType();

    /**
     * <pre>
     * Column comes from aggregated instrument measurments
     * </pre>
     *
     * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
     */
    boolean hasInstrumentMeasurementBinding();
    /**
     * <pre>
     * Column comes from aggregated instrument measurments
     * </pre>
     *
     * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
     */
    claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding getInstrumentMeasurementBinding();
    /**
     * <pre>
     * Column comes from aggregated instrument measurments
     * </pre>
     *
     * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
     */
    claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBindingOrBuilder getInstrumentMeasurementBindingOrBuilder();

    /**
     * <pre>
     * Column comes as a result of a computation
     * </pre>
     *
     * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
     */
    boolean hasComputationBinding();
    /**
     * <pre>
     * Column comes as a result of a computation
     * </pre>
     *
     * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
     */
    claros.common.computation.ClarosCommonComputationBinding.ComputationBinding getComputationBinding();
    /**
     * <pre>
     * Column comes as a result of a computation
     * </pre>
     *
     * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
     */
    claros.common.computation.ClarosCommonComputationBinding.ComputationBindingOrBuilder getComputationBindingOrBuilder();

    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    java.util.List<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition> 
        getReportableQualiferDefinitionList();
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition getReportableQualiferDefinition(int index);
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    int getReportableQualiferDefinitionCount();
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    java.util.List<? extends claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder> 
        getReportableQualiferDefinitionOrBuilderList();
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder getReportableQualiferDefinitionOrBuilder(
        int index);

    public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.BindingCase getBindingCase();
  }
  /**
   * Protobuf type {@code claros.operations.spreadsheet.Column}
   */
  public  static final class Column extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.operations.spreadsheet.Column)
      ColumnOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Column.newBuilder() to construct.
    private Column(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Column() {
      name_ = "";
      description_ = "";
      locationId_ = "";
      limits_ = java.util.Collections.emptyList();
      dataSourceType_ = 0;
      reportableQualiferDefinition_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Column(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              columnNumber_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 32: {

              parameterId_ = input.readUInt32();
              break;
            }
            case 40: {

              displayUnitId_ = input.readUInt32();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              locationId_ = s;
              break;
            }
            case 56: {

              isActive_ = input.readBool();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                limits_ = new java.util.ArrayList<claros.common.core.ClarosCommonCoreLimit.Limit>();
                mutable_bitField0_ |= 0x00000080;
              }
              limits_.add(
                  input.readMessage(claros.common.core.ClarosCommonCoreLimit.Limit.parser(), extensionRegistry));
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              dataSourceType_ = rawValue;
              break;
            }
            case 82: {
              claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.Builder subBuilder = null;
              if (bindingCase_ == 10) {
                subBuilder = ((claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_).toBuilder();
              }
              binding_ =
                  input.readMessage(claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_);
                binding_ = subBuilder.buildPartial();
              }
              bindingCase_ = 10;
              break;
            }
            case 90: {
              claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.Builder subBuilder = null;
              if (bindingCase_ == 11) {
                subBuilder = ((claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_).toBuilder();
              }
              binding_ =
                  input.readMessage(claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_);
                binding_ = subBuilder.buildPartial();
              }
              bindingCase_ = 11;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                reportableQualiferDefinition_ = new java.util.ArrayList<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition>();
                mutable_bitField0_ |= 0x00000800;
              }
              reportableQualiferDefinition_.add(
                  input.readMessage(claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          limits_ = java.util.Collections.unmodifiableList(limits_);
        }
        if (((mutable_bitField0_ & 0x00000800) != 0)) {
          reportableQualiferDefinition_ = java.util.Collections.unmodifiableList(reportableQualiferDefinition_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.internal_static_claros_operations_spreadsheet_Column_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.internal_static_claros_operations_spreadsheet_Column_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.class, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.Builder.class);
    }

    private int bitField0_;
    private int bindingCase_ = 0;
    private java.lang.Object binding_;
    public enum BindingCase
        implements com.google.protobuf.Internal.EnumLite {
      INSTRUMENTMEASUREMENTBINDING(10),
      COMPUTATIONBINDING(11),
      BINDING_NOT_SET(0);
      private final int value;
      private BindingCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static BindingCase valueOf(int value) {
        return forNumber(value);
      }

      public static BindingCase forNumber(int value) {
        switch (value) {
          case 10: return INSTRUMENTMEASUREMENTBINDING;
          case 11: return COMPUTATIONBINDING;
          case 0: return BINDING_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public BindingCase
    getBindingCase() {
      return BindingCase.forNumber(
          bindingCase_);
    }

    public static final int COLUMNNUMBER_FIELD_NUMBER = 1;
    private int columnNumber_;
    /**
     * <pre>
     * The number of the column
     * </pre>
     *
     * <code>uint32 columnNumber = 1;</code>
     */
    public int getColumnNumber() {
      return columnNumber_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The name of the column
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the column
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * The description of the column
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The description of the column
     * </pre>
     *
     * <code>string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAMETERID_FIELD_NUMBER = 4;
    private int parameterId_;
    /**
     * <pre>
     * The parameter associated with the column
     * </pre>
     *
     * <code>uint32 parameterId = 4;</code>
     */
    public int getParameterId() {
      return parameterId_;
    }

    public static final int DISPLAYUNITID_FIELD_NUMBER = 5;
    private int displayUnitId_;
    /**
     * <pre>
     * The default unit to display the column
     * </pre>
     *
     * <code>uint32 displayUnitId = 5;</code>
     */
    public int getDisplayUnitId() {
      return displayUnitId_;
    }

    public static final int LOCATIONID_FIELD_NUMBER = 6;
    private volatile java.lang.Object locationId_;
    /**
     * <pre>
     * The location associated to the data in the column
     * </pre>
     *
     * <code>string locationId = 6;</code>
     */
    public java.lang.String getLocationId() {
      java.lang.Object ref = locationId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        locationId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The location associated to the data in the column
     * </pre>
     *
     * <code>string locationId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getLocationIdBytes() {
      java.lang.Object ref = locationId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        locationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISACTIVE_FIELD_NUMBER = 7;
    private boolean isActive_;
    /**
     * <pre>
     * Soft Delete of the column
     * </pre>
     *
     * <code>bool isActive = 7;</code>
     */
    public boolean getIsActive() {
      return isActive_;
    }

    public static final int LIMITS_FIELD_NUMBER = 8;
    private java.util.List<claros.common.core.ClarosCommonCoreLimit.Limit> limits_;
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    public java.util.List<claros.common.core.ClarosCommonCoreLimit.Limit> getLimitsList() {
      return limits_;
    }
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    public java.util.List<? extends claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder> 
        getLimitsOrBuilderList() {
      return limits_;
    }
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    public int getLimitsCount() {
      return limits_.size();
    }
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    public claros.common.core.ClarosCommonCoreLimit.Limit getLimits(int index) {
      return limits_.get(index);
    }
    /**
     * <pre>
     * Collection of limits related to the column
     * </pre>
     *
     * <code>repeated .claros.common.core.Limit limits = 8;</code>
     */
    public claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder getLimitsOrBuilder(
        int index) {
      return limits_.get(index);
    }

    public static final int DATASOURCETYPE_FIELD_NUMBER = 9;
    private int dataSourceType_;
    /**
     * <pre>
     * The expected place where the data will be received into the column
     * </pre>
     *
     * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
     */
    public int getDataSourceTypeValue() {
      return dataSourceType_;
    }
    /**
     * <pre>
     * The expected place where the data will be received into the column
     * </pre>
     *
     * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
     */
    public claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType getDataSourceType() {
      @SuppressWarnings("deprecation")
      claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType result = claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType.valueOf(dataSourceType_);
      return result == null ? claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType.UNRECOGNIZED : result;
    }

    public static final int INSTRUMENTMEASUREMENTBINDING_FIELD_NUMBER = 10;
    /**
     * <pre>
     * Column comes from aggregated instrument measurments
     * </pre>
     *
     * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
     */
    public boolean hasInstrumentMeasurementBinding() {
      return bindingCase_ == 10;
    }
    /**
     * <pre>
     * Column comes from aggregated instrument measurments
     * </pre>
     *
     * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
     */
    public claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding getInstrumentMeasurementBinding() {
      if (bindingCase_ == 10) {
         return (claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_;
      }
      return claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.getDefaultInstance();
    }
    /**
     * <pre>
     * Column comes from aggregated instrument measurments
     * </pre>
     *
     * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
     */
    public claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBindingOrBuilder getInstrumentMeasurementBindingOrBuilder() {
      if (bindingCase_ == 10) {
         return (claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_;
      }
      return claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.getDefaultInstance();
    }

    public static final int COMPUTATIONBINDING_FIELD_NUMBER = 11;
    /**
     * <pre>
     * Column comes as a result of a computation
     * </pre>
     *
     * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
     */
    public boolean hasComputationBinding() {
      return bindingCase_ == 11;
    }
    /**
     * <pre>
     * Column comes as a result of a computation
     * </pre>
     *
     * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
     */
    public claros.common.computation.ClarosCommonComputationBinding.ComputationBinding getComputationBinding() {
      if (bindingCase_ == 11) {
         return (claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_;
      }
      return claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.getDefaultInstance();
    }
    /**
     * <pre>
     * Column comes as a result of a computation
     * </pre>
     *
     * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
     */
    public claros.common.computation.ClarosCommonComputationBinding.ComputationBindingOrBuilder getComputationBindingOrBuilder() {
      if (bindingCase_ == 11) {
         return (claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_;
      }
      return claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.getDefaultInstance();
    }

    public static final int REPORTABLEQUALIFERDEFINITION_FIELD_NUMBER = 12;
    private java.util.List<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition> reportableQualiferDefinition_;
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    public java.util.List<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition> getReportableQualiferDefinitionList() {
      return reportableQualiferDefinition_;
    }
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    public java.util.List<? extends claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder> 
        getReportableQualiferDefinitionOrBuilderList() {
      return reportableQualiferDefinition_;
    }
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    public int getReportableQualiferDefinitionCount() {
      return reportableQualiferDefinition_.size();
    }
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    public claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition getReportableQualiferDefinition(int index) {
      return reportableQualiferDefinition_.get(index);
    }
    /**
     * <pre>
     * This determines how qualifers are interpreted for this column
     * </pre>
     *
     * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
     */
    public claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder getReportableQualiferDefinitionOrBuilder(
        int index) {
      return reportableQualiferDefinition_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (columnNumber_ != 0) {
        output.writeUInt32(1, columnNumber_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
      }
      if (parameterId_ != 0) {
        output.writeUInt32(4, parameterId_);
      }
      if (displayUnitId_ != 0) {
        output.writeUInt32(5, displayUnitId_);
      }
      if (!getLocationIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, locationId_);
      }
      if (isActive_ != false) {
        output.writeBool(7, isActive_);
      }
      for (int i = 0; i < limits_.size(); i++) {
        output.writeMessage(8, limits_.get(i));
      }
      if (dataSourceType_ != claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType.DATASOURCE_UNKNOWN.getNumber()) {
        output.writeEnum(9, dataSourceType_);
      }
      if (bindingCase_ == 10) {
        output.writeMessage(10, (claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_);
      }
      if (bindingCase_ == 11) {
        output.writeMessage(11, (claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_);
      }
      for (int i = 0; i < reportableQualiferDefinition_.size(); i++) {
        output.writeMessage(12, reportableQualiferDefinition_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (columnNumber_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, columnNumber_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
      }
      if (parameterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, parameterId_);
      }
      if (displayUnitId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, displayUnitId_);
      }
      if (!getLocationIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, locationId_);
      }
      if (isActive_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isActive_);
      }
      for (int i = 0; i < limits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, limits_.get(i));
      }
      if (dataSourceType_ != claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType.DATASOURCE_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, dataSourceType_);
      }
      if (bindingCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_);
      }
      if (bindingCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_);
      }
      for (int i = 0; i < reportableQualiferDefinition_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, reportableQualiferDefinition_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column)) {
        return super.equals(obj);
      }
      claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column other = (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column) obj;

      if (getColumnNumber()
          != other.getColumnNumber()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (getParameterId()
          != other.getParameterId()) return false;
      if (getDisplayUnitId()
          != other.getDisplayUnitId()) return false;
      if (!getLocationId()
          .equals(other.getLocationId())) return false;
      if (getIsActive()
          != other.getIsActive()) return false;
      if (!getLimitsList()
          .equals(other.getLimitsList())) return false;
      if (dataSourceType_ != other.dataSourceType_) return false;
      if (!getReportableQualiferDefinitionList()
          .equals(other.getReportableQualiferDefinitionList())) return false;
      if (!getBindingCase().equals(other.getBindingCase())) return false;
      switch (bindingCase_) {
        case 10:
          if (!getInstrumentMeasurementBinding()
              .equals(other.getInstrumentMeasurementBinding())) return false;
          break;
        case 11:
          if (!getComputationBinding()
              .equals(other.getComputationBinding())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COLUMNNUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getColumnNumber();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + PARAMETERID_FIELD_NUMBER;
      hash = (53 * hash) + getParameterId();
      hash = (37 * hash) + DISPLAYUNITID_FIELD_NUMBER;
      hash = (53 * hash) + getDisplayUnitId();
      hash = (37 * hash) + LOCATIONID_FIELD_NUMBER;
      hash = (53 * hash) + getLocationId().hashCode();
      hash = (37 * hash) + ISACTIVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsActive());
      if (getLimitsCount() > 0) {
        hash = (37 * hash) + LIMITS_FIELD_NUMBER;
        hash = (53 * hash) + getLimitsList().hashCode();
      }
      hash = (37 * hash) + DATASOURCETYPE_FIELD_NUMBER;
      hash = (53 * hash) + dataSourceType_;
      if (getReportableQualiferDefinitionCount() > 0) {
        hash = (37 * hash) + REPORTABLEQUALIFERDEFINITION_FIELD_NUMBER;
        hash = (53 * hash) + getReportableQualiferDefinitionList().hashCode();
      }
      switch (bindingCase_) {
        case 10:
          hash = (37 * hash) + INSTRUMENTMEASUREMENTBINDING_FIELD_NUMBER;
          hash = (53 * hash) + getInstrumentMeasurementBinding().hashCode();
          break;
        case 11:
          hash = (37 * hash) + COMPUTATIONBINDING_FIELD_NUMBER;
          hash = (53 * hash) + getComputationBinding().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.operations.spreadsheet.Column}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.operations.spreadsheet.Column)
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.ColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.internal_static_claros_operations_spreadsheet_Column_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.internal_static_claros_operations_spreadsheet_Column_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.class, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.Builder.class);
      }

      // Construct using claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLimitsFieldBuilder();
          getReportableQualiferDefinitionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        columnNumber_ = 0;

        name_ = "";

        description_ = "";

        parameterId_ = 0;

        displayUnitId_ = 0;

        locationId_ = "";

        isActive_ = false;

        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          limitsBuilder_.clear();
        }
        dataSourceType_ = 0;

        if (reportableQualiferDefinitionBuilder_ == null) {
          reportableQualiferDefinition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          reportableQualiferDefinitionBuilder_.clear();
        }
        bindingCase_ = 0;
        binding_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.internal_static_claros_operations_spreadsheet_Column_descriptor;
      }

      @java.lang.Override
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column getDefaultInstanceForType() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.getDefaultInstance();
      }

      @java.lang.Override
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column build() {
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column buildPartial() {
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column result = new claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.columnNumber_ = columnNumber_;
        result.name_ = name_;
        result.description_ = description_;
        result.parameterId_ = parameterId_;
        result.displayUnitId_ = displayUnitId_;
        result.locationId_ = locationId_;
        result.isActive_ = isActive_;
        if (limitsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            limits_ = java.util.Collections.unmodifiableList(limits_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.limits_ = limits_;
        } else {
          result.limits_ = limitsBuilder_.build();
        }
        result.dataSourceType_ = dataSourceType_;
        if (bindingCase_ == 10) {
          if (instrumentMeasurementBindingBuilder_ == null) {
            result.binding_ = binding_;
          } else {
            result.binding_ = instrumentMeasurementBindingBuilder_.build();
          }
        }
        if (bindingCase_ == 11) {
          if (computationBindingBuilder_ == null) {
            result.binding_ = binding_;
          } else {
            result.binding_ = computationBindingBuilder_.build();
          }
        }
        if (reportableQualiferDefinitionBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0)) {
            reportableQualiferDefinition_ = java.util.Collections.unmodifiableList(reportableQualiferDefinition_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.reportableQualiferDefinition_ = reportableQualiferDefinition_;
        } else {
          result.reportableQualiferDefinition_ = reportableQualiferDefinitionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        result.bindingCase_ = bindingCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column) {
          return mergeFrom((claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column other) {
        if (other == claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column.getDefaultInstance()) return this;
        if (other.getColumnNumber() != 0) {
          setColumnNumber(other.getColumnNumber());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (other.getParameterId() != 0) {
          setParameterId(other.getParameterId());
        }
        if (other.getDisplayUnitId() != 0) {
          setDisplayUnitId(other.getDisplayUnitId());
        }
        if (!other.getLocationId().isEmpty()) {
          locationId_ = other.locationId_;
          onChanged();
        }
        if (other.getIsActive() != false) {
          setIsActive(other.getIsActive());
        }
        if (limitsBuilder_ == null) {
          if (!other.limits_.isEmpty()) {
            if (limits_.isEmpty()) {
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureLimitsIsMutable();
              limits_.addAll(other.limits_);
            }
            onChanged();
          }
        } else {
          if (!other.limits_.isEmpty()) {
            if (limitsBuilder_.isEmpty()) {
              limitsBuilder_.dispose();
              limitsBuilder_ = null;
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000080);
              limitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLimitsFieldBuilder() : null;
            } else {
              limitsBuilder_.addAllMessages(other.limits_);
            }
          }
        }
        if (other.dataSourceType_ != 0) {
          setDataSourceTypeValue(other.getDataSourceTypeValue());
        }
        if (reportableQualiferDefinitionBuilder_ == null) {
          if (!other.reportableQualiferDefinition_.isEmpty()) {
            if (reportableQualiferDefinition_.isEmpty()) {
              reportableQualiferDefinition_ = other.reportableQualiferDefinition_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureReportableQualiferDefinitionIsMutable();
              reportableQualiferDefinition_.addAll(other.reportableQualiferDefinition_);
            }
            onChanged();
          }
        } else {
          if (!other.reportableQualiferDefinition_.isEmpty()) {
            if (reportableQualiferDefinitionBuilder_.isEmpty()) {
              reportableQualiferDefinitionBuilder_.dispose();
              reportableQualiferDefinitionBuilder_ = null;
              reportableQualiferDefinition_ = other.reportableQualiferDefinition_;
              bitField0_ = (bitField0_ & ~0x00000800);
              reportableQualiferDefinitionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getReportableQualiferDefinitionFieldBuilder() : null;
            } else {
              reportableQualiferDefinitionBuilder_.addAllMessages(other.reportableQualiferDefinition_);
            }
          }
        }
        switch (other.getBindingCase()) {
          case INSTRUMENTMEASUREMENTBINDING: {
            mergeInstrumentMeasurementBinding(other.getInstrumentMeasurementBinding());
            break;
          }
          case COMPUTATIONBINDING: {
            mergeComputationBinding(other.getComputationBinding());
            break;
          }
          case BINDING_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bindingCase_ = 0;
      private java.lang.Object binding_;
      public BindingCase
          getBindingCase() {
        return BindingCase.forNumber(
            bindingCase_);
      }

      public Builder clearBinding() {
        bindingCase_ = 0;
        binding_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int columnNumber_ ;
      /**
       * <pre>
       * The number of the column
       * </pre>
       *
       * <code>uint32 columnNumber = 1;</code>
       */
      public int getColumnNumber() {
        return columnNumber_;
      }
      /**
       * <pre>
       * The number of the column
       * </pre>
       *
       * <code>uint32 columnNumber = 1;</code>
       */
      public Builder setColumnNumber(int value) {
        
        columnNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of the column
       * </pre>
       *
       * <code>uint32 columnNumber = 1;</code>
       */
      public Builder clearColumnNumber() {
        
        columnNumber_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the column
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the column
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the column
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the column
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the column
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * The description of the column
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The description of the column
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The description of the column
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the column
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The description of the column
       * </pre>
       *
       * <code>string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private int parameterId_ ;
      /**
       * <pre>
       * The parameter associated with the column
       * </pre>
       *
       * <code>uint32 parameterId = 4;</code>
       */
      public int getParameterId() {
        return parameterId_;
      }
      /**
       * <pre>
       * The parameter associated with the column
       * </pre>
       *
       * <code>uint32 parameterId = 4;</code>
       */
      public Builder setParameterId(int value) {
        
        parameterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The parameter associated with the column
       * </pre>
       *
       * <code>uint32 parameterId = 4;</code>
       */
      public Builder clearParameterId() {
        
        parameterId_ = 0;
        onChanged();
        return this;
      }

      private int displayUnitId_ ;
      /**
       * <pre>
       * The default unit to display the column
       * </pre>
       *
       * <code>uint32 displayUnitId = 5;</code>
       */
      public int getDisplayUnitId() {
        return displayUnitId_;
      }
      /**
       * <pre>
       * The default unit to display the column
       * </pre>
       *
       * <code>uint32 displayUnitId = 5;</code>
       */
      public Builder setDisplayUnitId(int value) {
        
        displayUnitId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The default unit to display the column
       * </pre>
       *
       * <code>uint32 displayUnitId = 5;</code>
       */
      public Builder clearDisplayUnitId() {
        
        displayUnitId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object locationId_ = "";
      /**
       * <pre>
       * The location associated to the data in the column
       * </pre>
       *
       * <code>string locationId = 6;</code>
       */
      public java.lang.String getLocationId() {
        java.lang.Object ref = locationId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          locationId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The location associated to the data in the column
       * </pre>
       *
       * <code>string locationId = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLocationIdBytes() {
        java.lang.Object ref = locationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          locationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The location associated to the data in the column
       * </pre>
       *
       * <code>string locationId = 6;</code>
       */
      public Builder setLocationId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        locationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location associated to the data in the column
       * </pre>
       *
       * <code>string locationId = 6;</code>
       */
      public Builder clearLocationId() {
        
        locationId_ = getDefaultInstance().getLocationId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location associated to the data in the column
       * </pre>
       *
       * <code>string locationId = 6;</code>
       */
      public Builder setLocationIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        locationId_ = value;
        onChanged();
        return this;
      }

      private boolean isActive_ ;
      /**
       * <pre>
       * Soft Delete of the column
       * </pre>
       *
       * <code>bool isActive = 7;</code>
       */
      public boolean getIsActive() {
        return isActive_;
      }
      /**
       * <pre>
       * Soft Delete of the column
       * </pre>
       *
       * <code>bool isActive = 7;</code>
       */
      public Builder setIsActive(boolean value) {
        
        isActive_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Soft Delete of the column
       * </pre>
       *
       * <code>bool isActive = 7;</code>
       */
      public Builder clearIsActive() {
        
        isActive_ = false;
        onChanged();
        return this;
      }

      private java.util.List<claros.common.core.ClarosCommonCoreLimit.Limit> limits_ =
        java.util.Collections.emptyList();
      private void ensureLimitsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          limits_ = new java.util.ArrayList<claros.common.core.ClarosCommonCoreLimit.Limit>(limits_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.common.core.ClarosCommonCoreLimit.Limit, claros.common.core.ClarosCommonCoreLimit.Limit.Builder, claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder> limitsBuilder_;

      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public java.util.List<claros.common.core.ClarosCommonCoreLimit.Limit> getLimitsList() {
        if (limitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(limits_);
        } else {
          return limitsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public int getLimitsCount() {
        if (limitsBuilder_ == null) {
          return limits_.size();
        } else {
          return limitsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public claros.common.core.ClarosCommonCoreLimit.Limit getLimits(int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);
        } else {
          return limitsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder setLimits(
          int index, claros.common.core.ClarosCommonCoreLimit.Limit value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.set(index, value);
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder setLimits(
          int index, claros.common.core.ClarosCommonCoreLimit.Limit.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.set(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder addLimits(claros.common.core.ClarosCommonCoreLimit.Limit value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder addLimits(
          int index, claros.common.core.ClarosCommonCoreLimit.Limit value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(index, value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder addLimits(
          claros.common.core.ClarosCommonCoreLimit.Limit.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder addLimits(
          int index, claros.common.core.ClarosCommonCoreLimit.Limit.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder addAllLimits(
          java.lang.Iterable<? extends claros.common.core.ClarosCommonCoreLimit.Limit> values) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, limits_);
          onChanged();
        } else {
          limitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder clearLimits() {
        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          limitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public Builder removeLimits(int index) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.remove(index);
          onChanged();
        } else {
          limitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public claros.common.core.ClarosCommonCoreLimit.Limit.Builder getLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder getLimitsOrBuilder(
          int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);  } else {
          return limitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public java.util.List<? extends claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder> 
           getLimitsOrBuilderList() {
        if (limitsBuilder_ != null) {
          return limitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(limits_);
        }
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public claros.common.core.ClarosCommonCoreLimit.Limit.Builder addLimitsBuilder() {
        return getLimitsFieldBuilder().addBuilder(
            claros.common.core.ClarosCommonCoreLimit.Limit.getDefaultInstance());
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public claros.common.core.ClarosCommonCoreLimit.Limit.Builder addLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().addBuilder(
            index, claros.common.core.ClarosCommonCoreLimit.Limit.getDefaultInstance());
      }
      /**
       * <pre>
       * Collection of limits related to the column
       * </pre>
       *
       * <code>repeated .claros.common.core.Limit limits = 8;</code>
       */
      public java.util.List<claros.common.core.ClarosCommonCoreLimit.Limit.Builder> 
           getLimitsBuilderList() {
        return getLimitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.common.core.ClarosCommonCoreLimit.Limit, claros.common.core.ClarosCommonCoreLimit.Limit.Builder, claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder> 
          getLimitsFieldBuilder() {
        if (limitsBuilder_ == null) {
          limitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.common.core.ClarosCommonCoreLimit.Limit, claros.common.core.ClarosCommonCoreLimit.Limit.Builder, claros.common.core.ClarosCommonCoreLimit.LimitOrBuilder>(
                  limits_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          limits_ = null;
        }
        return limitsBuilder_;
      }

      private int dataSourceType_ = 0;
      /**
       * <pre>
       * The expected place where the data will be received into the column
       * </pre>
       *
       * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
       */
      public int getDataSourceTypeValue() {
        return dataSourceType_;
      }
      /**
       * <pre>
       * The expected place where the data will be received into the column
       * </pre>
       *
       * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
       */
      public Builder setDataSourceTypeValue(int value) {
        dataSourceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The expected place where the data will be received into the column
       * </pre>
       *
       * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
       */
      public claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType getDataSourceType() {
        @SuppressWarnings("deprecation")
        claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType result = claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType.valueOf(dataSourceType_);
        return result == null ? claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The expected place where the data will be received into the column
       * </pre>
       *
       * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
       */
      public Builder setDataSourceType(claros.common.core.ClarosCommonCoreDatasourceType.DataSourceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dataSourceType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The expected place where the data will be received into the column
       * </pre>
       *
       * <code>.claros.common.core.DataSourceType dataSourceType = 9;</code>
       */
      public Builder clearDataSourceType() {
        
        dataSourceType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding, claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.Builder, claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBindingOrBuilder> instrumentMeasurementBindingBuilder_;
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public boolean hasInstrumentMeasurementBinding() {
        return bindingCase_ == 10;
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding getInstrumentMeasurementBinding() {
        if (instrumentMeasurementBindingBuilder_ == null) {
          if (bindingCase_ == 10) {
            return (claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_;
          }
          return claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.getDefaultInstance();
        } else {
          if (bindingCase_ == 10) {
            return instrumentMeasurementBindingBuilder_.getMessage();
          }
          return claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public Builder setInstrumentMeasurementBinding(claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding value) {
        if (instrumentMeasurementBindingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          binding_ = value;
          onChanged();
        } else {
          instrumentMeasurementBindingBuilder_.setMessage(value);
        }
        bindingCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public Builder setInstrumentMeasurementBinding(
          claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.Builder builderForValue) {
        if (instrumentMeasurementBindingBuilder_ == null) {
          binding_ = builderForValue.build();
          onChanged();
        } else {
          instrumentMeasurementBindingBuilder_.setMessage(builderForValue.build());
        }
        bindingCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public Builder mergeInstrumentMeasurementBinding(claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding value) {
        if (instrumentMeasurementBindingBuilder_ == null) {
          if (bindingCase_ == 10 &&
              binding_ != claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.getDefaultInstance()) {
            binding_ = claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.newBuilder((claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_)
                .mergeFrom(value).buildPartial();
          } else {
            binding_ = value;
          }
          onChanged();
        } else {
          if (bindingCase_ == 10) {
            instrumentMeasurementBindingBuilder_.mergeFrom(value);
          }
          instrumentMeasurementBindingBuilder_.setMessage(value);
        }
        bindingCase_ = 10;
        return this;
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public Builder clearInstrumentMeasurementBinding() {
        if (instrumentMeasurementBindingBuilder_ == null) {
          if (bindingCase_ == 10) {
            bindingCase_ = 0;
            binding_ = null;
            onChanged();
          }
        } else {
          if (bindingCase_ == 10) {
            bindingCase_ = 0;
            binding_ = null;
          }
          instrumentMeasurementBindingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.Builder getInstrumentMeasurementBindingBuilder() {
        return getInstrumentMeasurementBindingFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      public claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBindingOrBuilder getInstrumentMeasurementBindingOrBuilder() {
        if ((bindingCase_ == 10) && (instrumentMeasurementBindingBuilder_ != null)) {
          return instrumentMeasurementBindingBuilder_.getMessageOrBuilder();
        } else {
          if (bindingCase_ == 10) {
            return (claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_;
          }
          return claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Column comes from aggregated instrument measurments
       * </pre>
       *
       * <code>.claros.instrument.measurement.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding, claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.Builder, claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBindingOrBuilder> 
          getInstrumentMeasurementBindingFieldBuilder() {
        if (instrumentMeasurementBindingBuilder_ == null) {
          if (!(bindingCase_ == 10)) {
            binding_ = claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.getDefaultInstance();
          }
          instrumentMeasurementBindingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding, claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding.Builder, claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBindingOrBuilder>(
                  (claros.instrument.measurement.ClarosInstrumentMeasurementBinding.InstrumentMeasurementBinding) binding_,
                  getParentForChildren(),
                  isClean());
          binding_ = null;
        }
        bindingCase_ = 10;
        onChanged();;
        return instrumentMeasurementBindingBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.computation.ClarosCommonComputationBinding.ComputationBinding, claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.Builder, claros.common.computation.ClarosCommonComputationBinding.ComputationBindingOrBuilder> computationBindingBuilder_;
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public boolean hasComputationBinding() {
        return bindingCase_ == 11;
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public claros.common.computation.ClarosCommonComputationBinding.ComputationBinding getComputationBinding() {
        if (computationBindingBuilder_ == null) {
          if (bindingCase_ == 11) {
            return (claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_;
          }
          return claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.getDefaultInstance();
        } else {
          if (bindingCase_ == 11) {
            return computationBindingBuilder_.getMessage();
          }
          return claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public Builder setComputationBinding(claros.common.computation.ClarosCommonComputationBinding.ComputationBinding value) {
        if (computationBindingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          binding_ = value;
          onChanged();
        } else {
          computationBindingBuilder_.setMessage(value);
        }
        bindingCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public Builder setComputationBinding(
          claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.Builder builderForValue) {
        if (computationBindingBuilder_ == null) {
          binding_ = builderForValue.build();
          onChanged();
        } else {
          computationBindingBuilder_.setMessage(builderForValue.build());
        }
        bindingCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public Builder mergeComputationBinding(claros.common.computation.ClarosCommonComputationBinding.ComputationBinding value) {
        if (computationBindingBuilder_ == null) {
          if (bindingCase_ == 11 &&
              binding_ != claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.getDefaultInstance()) {
            binding_ = claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.newBuilder((claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_)
                .mergeFrom(value).buildPartial();
          } else {
            binding_ = value;
          }
          onChanged();
        } else {
          if (bindingCase_ == 11) {
            computationBindingBuilder_.mergeFrom(value);
          }
          computationBindingBuilder_.setMessage(value);
        }
        bindingCase_ = 11;
        return this;
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public Builder clearComputationBinding() {
        if (computationBindingBuilder_ == null) {
          if (bindingCase_ == 11) {
            bindingCase_ = 0;
            binding_ = null;
            onChanged();
          }
        } else {
          if (bindingCase_ == 11) {
            bindingCase_ = 0;
            binding_ = null;
          }
          computationBindingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.Builder getComputationBindingBuilder() {
        return getComputationBindingFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      public claros.common.computation.ClarosCommonComputationBinding.ComputationBindingOrBuilder getComputationBindingOrBuilder() {
        if ((bindingCase_ == 11) && (computationBindingBuilder_ != null)) {
          return computationBindingBuilder_.getMessageOrBuilder();
        } else {
          if (bindingCase_ == 11) {
            return (claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_;
          }
          return claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Column comes as a result of a computation
       * </pre>
       *
       * <code>.claros.common.computation.ComputationBinding computationBinding = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.computation.ClarosCommonComputationBinding.ComputationBinding, claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.Builder, claros.common.computation.ClarosCommonComputationBinding.ComputationBindingOrBuilder> 
          getComputationBindingFieldBuilder() {
        if (computationBindingBuilder_ == null) {
          if (!(bindingCase_ == 11)) {
            binding_ = claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.getDefaultInstance();
          }
          computationBindingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.computation.ClarosCommonComputationBinding.ComputationBinding, claros.common.computation.ClarosCommonComputationBinding.ComputationBinding.Builder, claros.common.computation.ClarosCommonComputationBinding.ComputationBindingOrBuilder>(
                  (claros.common.computation.ClarosCommonComputationBinding.ComputationBinding) binding_,
                  getParentForChildren(),
                  isClean());
          binding_ = null;
        }
        bindingCase_ = 11;
        onChanged();;
        return computationBindingBuilder_;
      }

      private java.util.List<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition> reportableQualiferDefinition_ =
        java.util.Collections.emptyList();
      private void ensureReportableQualiferDefinitionIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          reportableQualiferDefinition_ = new java.util.ArrayList<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition>(reportableQualiferDefinition_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder> reportableQualiferDefinitionBuilder_;

      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public java.util.List<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition> getReportableQualiferDefinitionList() {
        if (reportableQualiferDefinitionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reportableQualiferDefinition_);
        } else {
          return reportableQualiferDefinitionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public int getReportableQualiferDefinitionCount() {
        if (reportableQualiferDefinitionBuilder_ == null) {
          return reportableQualiferDefinition_.size();
        } else {
          return reportableQualiferDefinitionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition getReportableQualiferDefinition(int index) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          return reportableQualiferDefinition_.get(index);
        } else {
          return reportableQualiferDefinitionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder setReportableQualiferDefinition(
          int index, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition value) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportableQualiferDefinitionIsMutable();
          reportableQualiferDefinition_.set(index, value);
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder setReportableQualiferDefinition(
          int index, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder builderForValue) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          ensureReportableQualiferDefinitionIsMutable();
          reportableQualiferDefinition_.set(index, builderForValue.build());
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder addReportableQualiferDefinition(claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition value) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportableQualiferDefinitionIsMutable();
          reportableQualiferDefinition_.add(value);
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder addReportableQualiferDefinition(
          int index, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition value) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReportableQualiferDefinitionIsMutable();
          reportableQualiferDefinition_.add(index, value);
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder addReportableQualiferDefinition(
          claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder builderForValue) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          ensureReportableQualiferDefinitionIsMutable();
          reportableQualiferDefinition_.add(builderForValue.build());
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder addReportableQualiferDefinition(
          int index, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder builderForValue) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          ensureReportableQualiferDefinitionIsMutable();
          reportableQualiferDefinition_.add(index, builderForValue.build());
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder addAllReportableQualiferDefinition(
          java.lang.Iterable<? extends claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition> values) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          ensureReportableQualiferDefinitionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, reportableQualiferDefinition_);
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder clearReportableQualiferDefinition() {
        if (reportableQualiferDefinitionBuilder_ == null) {
          reportableQualiferDefinition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public Builder removeReportableQualiferDefinition(int index) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          ensureReportableQualiferDefinitionIsMutable();
          reportableQualiferDefinition_.remove(index);
          onChanged();
        } else {
          reportableQualiferDefinitionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder getReportableQualiferDefinitionBuilder(
          int index) {
        return getReportableQualiferDefinitionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder getReportableQualiferDefinitionOrBuilder(
          int index) {
        if (reportableQualiferDefinitionBuilder_ == null) {
          return reportableQualiferDefinition_.get(index);  } else {
          return reportableQualiferDefinitionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public java.util.List<? extends claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder> 
           getReportableQualiferDefinitionOrBuilderList() {
        if (reportableQualiferDefinitionBuilder_ != null) {
          return reportableQualiferDefinitionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reportableQualiferDefinition_);
        }
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder addReportableQualiferDefinitionBuilder() {
        return getReportableQualiferDefinitionFieldBuilder().addBuilder(
            claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.getDefaultInstance());
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder addReportableQualiferDefinitionBuilder(
          int index) {
        return getReportableQualiferDefinitionFieldBuilder().addBuilder(
            index, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.getDefaultInstance());
      }
      /**
       * <pre>
       * This determines how qualifers are interpreted for this column
       * </pre>
       *
       * <code>repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;</code>
       */
      public java.util.List<claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder> 
           getReportableQualiferDefinitionBuilderList() {
        return getReportableQualiferDefinitionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder> 
          getReportableQualiferDefinitionFieldBuilder() {
        if (reportableQualiferDefinitionBuilder_ == null) {
          reportableQualiferDefinitionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinition.Builder, claros.common.core.ClarosCommonCoreReportablequalifierdefinition.ReportableQualifierDefinitionOrBuilder>(
                  reportableQualiferDefinition_,
                  ((bitField0_ & 0x00000800) != 0),
                  getParentForChildren(),
                  isClean());
          reportableQualiferDefinition_ = null;
        }
        return reportableQualiferDefinitionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.operations.spreadsheet.Column)
    }

    // @@protoc_insertion_point(class_scope:claros.operations.spreadsheet.Column)
    private static final claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column();
    }

    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Column>
        PARSER = new com.google.protobuf.AbstractParser<Column>() {
      @java.lang.Override
      public Column parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Column(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Column> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Column> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetColumn.Column getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_operations_spreadsheet_Column_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_operations_spreadsheet_Column_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4claros_operations_spreadsheet_workshee" +
      "t_column.proto\022\035claros.operations.spread" +
      "sheet\032(claros_common_core_datasource_typ" +
      "e.proto\032\036claros_common_core_limit.proto\032" +
      "+claros_instrument_measurement_binding.p" +
      "roto\032\'claros_common_computation_binding." +
      "proto\0326claros_common_core_reportablequal" +
      "ifierdefinition.proto\"\220\004\n\006Column\022\024\n\014colu" +
      "mnNumber\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\023\n\013descript" +
      "ion\030\003 \001(\t\022\023\n\013parameterId\030\004 \001(\r\022\025\n\rdispla" +
      "yUnitId\030\005 \001(\r\022\022\n\nlocationId\030\006 \001(\t\022\020\n\010isA" +
      "ctive\030\007 \001(\010\022)\n\006limits\030\010 \003(\0132\031.claros.com" +
      "mon.core.Limit\022:\n\016dataSourceType\030\t \001(\0162\"" +
      ".claros.common.core.DataSourceType\022c\n\034in" +
      "strumentMeasurementBinding\030\n \001(\0132;.claro" +
      "s.instrument.measurement.InstrumentMeasu" +
      "rementBindingH\000\022K\n\022computationBinding\030\013 " +
      "\001(\0132-.claros.common.computation.Computat" +
      "ionBindingH\000\022W\n\034reportableQualiferDefini" +
      "tion\030\014 \003(\01321.claros.common.core.Reportab" +
      "leQualifierDefinitionB\t\n\007bindingb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.common.core.ClarosCommonCoreDatasourceType.getDescriptor(),
          claros.common.core.ClarosCommonCoreLimit.getDescriptor(),
          claros.instrument.measurement.ClarosInstrumentMeasurementBinding.getDescriptor(),
          claros.common.computation.ClarosCommonComputationBinding.getDescriptor(),
          claros.common.core.ClarosCommonCoreReportablequalifierdefinition.getDescriptor(),
        }, assigner);
    internal_static_claros_operations_spreadsheet_Column_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_operations_spreadsheet_Column_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_operations_spreadsheet_Column_descriptor,
        new java.lang.String[] { "ColumnNumber", "Name", "Description", "ParameterId", "DisplayUnitId", "LocationId", "IsActive", "Limits", "DataSourceType", "InstrumentMeasurementBinding", "ComputationBinding", "ReportableQualiferDefinition", "Binding", });
    claros.common.core.ClarosCommonCoreDatasourceType.getDescriptor();
    claros.common.core.ClarosCommonCoreLimit.getDescriptor();
    claros.instrument.measurement.ClarosInstrumentMeasurementBinding.getDescriptor();
    claros.common.computation.ClarosCommonComputationBinding.getDescriptor();
    claros.common.core.ClarosCommonCoreReportablequalifierdefinition.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
