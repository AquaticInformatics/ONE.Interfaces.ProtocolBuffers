// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_operations_spreadsheet_worksheet_cell.proto

package claros.operations.spreadsheet;

public final class ClarosOperationsSpreadsheetWorksheetCell {
  private ClarosOperationsSpreadsheetWorksheetCell() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CellOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.operations.spreadsheet.Cell)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 columnId = 1;</code>
     */
    int getColumnId();

    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    java.util.List<claros.common.core.ClarosCommonCoreNote.Note> 
        getNotesList();
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    claros.common.core.ClarosCommonCoreNote.Note getNotes(int index);
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    int getNotesCount();
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    java.util.List<? extends claros.common.core.ClarosCommonCoreNote.NoteOrBuilder> 
        getNotesOrBuilderList();
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    claros.common.core.ClarosCommonCoreNote.NoteOrBuilder getNotesOrBuilder(
        int index);

    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    java.util.List<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData> 
        getCellDataList();
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData getCellData(int index);
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    int getCellDataCount();
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    java.util.List<? extends claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder> 
        getCellDataOrBuilderList();
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder getCellDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code claros.operations.spreadsheet.Cell}
   */
  public  static final class Cell extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.operations.spreadsheet.Cell)
      CellOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Cell.newBuilder() to construct.
    private Cell(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Cell() {
      notes_ = java.util.Collections.emptyList();
      cellData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Cell(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              columnId_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                notes_ = new java.util.ArrayList<claros.common.core.ClarosCommonCoreNote.Note>();
                mutable_bitField0_ |= 0x00000002;
              }
              notes_.add(
                  input.readMessage(claros.common.core.ClarosCommonCoreNote.Note.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                cellData_ = new java.util.ArrayList<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData>();
                mutable_bitField0_ |= 0x00000004;
              }
              cellData_.add(
                  input.readMessage(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          notes_ = java.util.Collections.unmodifiableList(notes_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          cellData_ = java.util.Collections.unmodifiableList(cellData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.internal_static_claros_operations_spreadsheet_Cell_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.internal_static_claros_operations_spreadsheet_Cell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.class, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder.class);
    }

    private int bitField0_;
    public static final int COLUMNID_FIELD_NUMBER = 1;
    private int columnId_;
    /**
     * <code>uint32 columnId = 1;</code>
     */
    public int getColumnId() {
      return columnId_;
    }

    public static final int NOTES_FIELD_NUMBER = 2;
    private java.util.List<claros.common.core.ClarosCommonCoreNote.Note> notes_;
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    public java.util.List<claros.common.core.ClarosCommonCoreNote.Note> getNotesList() {
      return notes_;
    }
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    public java.util.List<? extends claros.common.core.ClarosCommonCoreNote.NoteOrBuilder> 
        getNotesOrBuilderList() {
      return notes_;
    }
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    public int getNotesCount() {
      return notes_.size();
    }
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    public claros.common.core.ClarosCommonCoreNote.Note getNotes(int index) {
      return notes_.get(index);
    }
    /**
     * <code>repeated .claros.common.core.Note notes = 2;</code>
     */
    public claros.common.core.ClarosCommonCoreNote.NoteOrBuilder getNotesOrBuilder(
        int index) {
      return notes_.get(index);
    }

    public static final int CELLDATA_FIELD_NUMBER = 3;
    private java.util.List<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData> cellData_;
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    public java.util.List<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData> getCellDataList() {
      return cellData_;
    }
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    public java.util.List<? extends claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder> 
        getCellDataOrBuilderList() {
      return cellData_;
    }
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    public int getCellDataCount() {
      return cellData_.size();
    }
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData getCellData(int index) {
      return cellData_.get(index);
    }
    /**
     * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
     */
    public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder getCellDataOrBuilder(
        int index) {
      return cellData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (columnId_ != 0) {
        output.writeUInt32(1, columnId_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        output.writeMessage(2, notes_.get(i));
      }
      for (int i = 0; i < cellData_.size(); i++) {
        output.writeMessage(3, cellData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (columnId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, columnId_);
      }
      for (int i = 0; i < notes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, notes_.get(i));
      }
      for (int i = 0; i < cellData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, cellData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell)) {
        return super.equals(obj);
      }
      claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell other = (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) obj;

      if (getColumnId()
          != other.getColumnId()) return false;
      if (!getNotesList()
          .equals(other.getNotesList())) return false;
      if (!getCellDataList()
          .equals(other.getCellDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COLUMNID_FIELD_NUMBER;
      hash = (53 * hash) + getColumnId();
      if (getNotesCount() > 0) {
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotesList().hashCode();
      }
      if (getCellDataCount() > 0) {
        hash = (37 * hash) + CELLDATA_FIELD_NUMBER;
        hash = (53 * hash) + getCellDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.operations.spreadsheet.Cell}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.operations.spreadsheet.Cell)
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.CellOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.internal_static_claros_operations_spreadsheet_Cell_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.internal_static_claros_operations_spreadsheet_Cell_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.class, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder.class);
      }

      // Construct using claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNotesFieldBuilder();
          getCellDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        columnId_ = 0;

        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          notesBuilder_.clear();
        }
        if (cellDataBuilder_ == null) {
          cellData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          cellDataBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.internal_static_claros_operations_spreadsheet_Cell_descriptor;
      }

      @java.lang.Override
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell getDefaultInstanceForType() {
        return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance();
      }

      @java.lang.Override
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell build() {
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell buildPartial() {
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell result = new claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.columnId_ = columnId_;
        if (notesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            notes_ = java.util.Collections.unmodifiableList(notes_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.notes_ = notes_;
        } else {
          result.notes_ = notesBuilder_.build();
        }
        if (cellDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            cellData_ = java.util.Collections.unmodifiableList(cellData_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.cellData_ = cellData_;
        } else {
          result.cellData_ = cellDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) {
          return mergeFrom((claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell other) {
        if (other == claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance()) return this;
        if (other.getColumnId() != 0) {
          setColumnId(other.getColumnId());
        }
        if (notesBuilder_ == null) {
          if (!other.notes_.isEmpty()) {
            if (notes_.isEmpty()) {
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureNotesIsMutable();
              notes_.addAll(other.notes_);
            }
            onChanged();
          }
        } else {
          if (!other.notes_.isEmpty()) {
            if (notesBuilder_.isEmpty()) {
              notesBuilder_.dispose();
              notesBuilder_ = null;
              notes_ = other.notes_;
              bitField0_ = (bitField0_ & ~0x00000002);
              notesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNotesFieldBuilder() : null;
            } else {
              notesBuilder_.addAllMessages(other.notes_);
            }
          }
        }
        if (cellDataBuilder_ == null) {
          if (!other.cellData_.isEmpty()) {
            if (cellData_.isEmpty()) {
              cellData_ = other.cellData_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCellDataIsMutable();
              cellData_.addAll(other.cellData_);
            }
            onChanged();
          }
        } else {
          if (!other.cellData_.isEmpty()) {
            if (cellDataBuilder_.isEmpty()) {
              cellDataBuilder_.dispose();
              cellDataBuilder_ = null;
              cellData_ = other.cellData_;
              bitField0_ = (bitField0_ & ~0x00000004);
              cellDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCellDataFieldBuilder() : null;
            } else {
              cellDataBuilder_.addAllMessages(other.cellData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int columnId_ ;
      /**
       * <code>uint32 columnId = 1;</code>
       */
      public int getColumnId() {
        return columnId_;
      }
      /**
       * <code>uint32 columnId = 1;</code>
       */
      public Builder setColumnId(int value) {
        
        columnId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 columnId = 1;</code>
       */
      public Builder clearColumnId() {
        
        columnId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<claros.common.core.ClarosCommonCoreNote.Note> notes_ =
        java.util.Collections.emptyList();
      private void ensureNotesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          notes_ = new java.util.ArrayList<claros.common.core.ClarosCommonCoreNote.Note>(notes_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.common.core.ClarosCommonCoreNote.Note, claros.common.core.ClarosCommonCoreNote.Note.Builder, claros.common.core.ClarosCommonCoreNote.NoteOrBuilder> notesBuilder_;

      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public java.util.List<claros.common.core.ClarosCommonCoreNote.Note> getNotesList() {
        if (notesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(notes_);
        } else {
          return notesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public int getNotesCount() {
        if (notesBuilder_ == null) {
          return notes_.size();
        } else {
          return notesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreNote.Note getNotes(int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);
        } else {
          return notesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder setNotes(
          int index, claros.common.core.ClarosCommonCoreNote.Note value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.set(index, value);
          onChanged();
        } else {
          notesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder setNotes(
          int index, claros.common.core.ClarosCommonCoreNote.Note.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.set(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder addNotes(claros.common.core.ClarosCommonCoreNote.Note value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(value);
          onChanged();
        } else {
          notesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder addNotes(
          int index, claros.common.core.ClarosCommonCoreNote.Note value) {
        if (notesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNotesIsMutable();
          notes_.add(index, value);
          onChanged();
        } else {
          notesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder addNotes(
          claros.common.core.ClarosCommonCoreNote.Note.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder addNotes(
          int index, claros.common.core.ClarosCommonCoreNote.Note.Builder builderForValue) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.add(index, builderForValue.build());
          onChanged();
        } else {
          notesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder addAllNotes(
          java.lang.Iterable<? extends claros.common.core.ClarosCommonCoreNote.Note> values) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, notes_);
          onChanged();
        } else {
          notesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder clearNotes() {
        if (notesBuilder_ == null) {
          notes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          notesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public Builder removeNotes(int index) {
        if (notesBuilder_ == null) {
          ensureNotesIsMutable();
          notes_.remove(index);
          onChanged();
        } else {
          notesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreNote.Note.Builder getNotesBuilder(
          int index) {
        return getNotesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreNote.NoteOrBuilder getNotesOrBuilder(
          int index) {
        if (notesBuilder_ == null) {
          return notes_.get(index);  } else {
          return notesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public java.util.List<? extends claros.common.core.ClarosCommonCoreNote.NoteOrBuilder> 
           getNotesOrBuilderList() {
        if (notesBuilder_ != null) {
          return notesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(notes_);
        }
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreNote.Note.Builder addNotesBuilder() {
        return getNotesFieldBuilder().addBuilder(
            claros.common.core.ClarosCommonCoreNote.Note.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreNote.Note.Builder addNotesBuilder(
          int index) {
        return getNotesFieldBuilder().addBuilder(
            index, claros.common.core.ClarosCommonCoreNote.Note.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.common.core.Note notes = 2;</code>
       */
      public java.util.List<claros.common.core.ClarosCommonCoreNote.Note.Builder> 
           getNotesBuilderList() {
        return getNotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.common.core.ClarosCommonCoreNote.Note, claros.common.core.ClarosCommonCoreNote.Note.Builder, claros.common.core.ClarosCommonCoreNote.NoteOrBuilder> 
          getNotesFieldBuilder() {
        if (notesBuilder_ == null) {
          notesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.common.core.ClarosCommonCoreNote.Note, claros.common.core.ClarosCommonCoreNote.Note.Builder, claros.common.core.ClarosCommonCoreNote.NoteOrBuilder>(
                  notes_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          notes_ = null;
        }
        return notesBuilder_;
      }

      private java.util.List<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData> cellData_ =
        java.util.Collections.emptyList();
      private void ensureCellDataIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          cellData_ = new java.util.ArrayList<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData>(cellData_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder> cellDataBuilder_;

      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public java.util.List<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData> getCellDataList() {
        if (cellDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cellData_);
        } else {
          return cellDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public int getCellDataCount() {
        if (cellDataBuilder_ == null) {
          return cellData_.size();
        } else {
          return cellDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData getCellData(int index) {
        if (cellDataBuilder_ == null) {
          return cellData_.get(index);
        } else {
          return cellDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder setCellData(
          int index, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData value) {
        if (cellDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellDataIsMutable();
          cellData_.set(index, value);
          onChanged();
        } else {
          cellDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder setCellData(
          int index, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder builderForValue) {
        if (cellDataBuilder_ == null) {
          ensureCellDataIsMutable();
          cellData_.set(index, builderForValue.build());
          onChanged();
        } else {
          cellDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder addCellData(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData value) {
        if (cellDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellDataIsMutable();
          cellData_.add(value);
          onChanged();
        } else {
          cellDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder addCellData(
          int index, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData value) {
        if (cellDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellDataIsMutable();
          cellData_.add(index, value);
          onChanged();
        } else {
          cellDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder addCellData(
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder builderForValue) {
        if (cellDataBuilder_ == null) {
          ensureCellDataIsMutable();
          cellData_.add(builderForValue.build());
          onChanged();
        } else {
          cellDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder addCellData(
          int index, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder builderForValue) {
        if (cellDataBuilder_ == null) {
          ensureCellDataIsMutable();
          cellData_.add(index, builderForValue.build());
          onChanged();
        } else {
          cellDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder addAllCellData(
          java.lang.Iterable<? extends claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData> values) {
        if (cellDataBuilder_ == null) {
          ensureCellDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cellData_);
          onChanged();
        } else {
          cellDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder clearCellData() {
        if (cellDataBuilder_ == null) {
          cellData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          cellDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public Builder removeCellData(int index) {
        if (cellDataBuilder_ == null) {
          ensureCellDataIsMutable();
          cellData_.remove(index);
          onChanged();
        } else {
          cellDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder getCellDataBuilder(
          int index) {
        return getCellDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder getCellDataOrBuilder(
          int index) {
        if (cellDataBuilder_ == null) {
          return cellData_.get(index);  } else {
          return cellDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public java.util.List<? extends claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder> 
           getCellDataOrBuilderList() {
        if (cellDataBuilder_ != null) {
          return cellDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cellData_);
        }
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder addCellDataBuilder() {
        return getCellDataFieldBuilder().addBuilder(
            claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder addCellDataBuilder(
          int index) {
        return getCellDataFieldBuilder().addBuilder(
            index, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.operations.spreadsheet.CellData cellData = 3;</code>
       */
      public java.util.List<claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder> 
           getCellDataBuilderList() {
        return getCellDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder> 
          getCellDataFieldBuilder() {
        if (cellDataBuilder_ == null) {
          cellDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellData.Builder, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.CellDataOrBuilder>(
                  cellData_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          cellData_ = null;
        }
        return cellDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.operations.spreadsheet.Cell)
    }

    // @@protoc_insertion_point(class_scope:claros.operations.spreadsheet.Cell)
    private static final claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell();
    }

    public static claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Cell>
        PARSER = new com.google.protobuf.AbstractParser<Cell>() {
      @java.lang.Override
      public Cell parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Cell(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Cell> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Cell> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_operations_spreadsheet_Cell_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_operations_spreadsheet_Cell_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2claros_operations_spreadsheet_workshee" +
      "t_cell.proto\022\035claros.operations.spreadsh" +
      "eet\032\035claros_common_core_note.proto\0326clar" +
      "os_operations_spreadsheet_worksheet_cell" +
      "data.proto\"|\n\004Cell\022\020\n\010columnId\030\001 \001(\r\022\'\n\005" +
      "notes\030\002 \003(\0132\030.claros.common.core.Note\0229\n" +
      "\010cellData\030\003 \003(\0132\'.claros.operations.spre" +
      "adsheet.CellDatab\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.common.core.ClarosCommonCoreNote.getDescriptor(),
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.getDescriptor(),
        }, assigner);
    internal_static_claros_operations_spreadsheet_Cell_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_operations_spreadsheet_Cell_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_operations_spreadsheet_Cell_descriptor,
        new java.lang.String[] { "ColumnId", "Notes", "CellData", });
    claros.common.core.ClarosCommonCoreNote.getDescriptor();
    claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCelldata.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
