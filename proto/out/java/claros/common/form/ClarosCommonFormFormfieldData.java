// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_form_formfield_data.proto

package claros.common.form;

public final class ClarosCommonFormFormfieldData {
  private ClarosCommonFormFormfieldData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FormFieldDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.common.form.FormFieldData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
     */
    boolean hasCell();
    /**
     * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
     */
    claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell getCell();
    /**
     * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
     */
    claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.CellOrBuilder getCellOrBuilder();

    /**
     * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
     */
    boolean hasInstrumentData();
    /**
     * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
     */
    claros.instrument.ClarosInstrumentData.InstrumentData getInstrumentData();
    /**
     * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
     */
    claros.instrument.ClarosInstrumentData.InstrumentDataOrBuilder getInstrumentDataOrBuilder();

    /**
     * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
     */
    boolean hasAuditEvent();
    /**
     * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
     */
    claros.common.core.ClarosCommonCoreAuditevent.AuditEvent getAuditEvent();
    /**
     * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
     */
    claros.common.core.ClarosCommonCoreAuditevent.AuditEventOrBuilder getAuditEventOrBuilder();

    public claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.FieldDataBindingCase getFieldDataBindingCase();
  }
  /**
   * Protobuf type {@code claros.common.form.FormFieldData}
   */
  public  static final class FormFieldData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.common.form.FormFieldData)
      FormFieldDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FormFieldData.newBuilder() to construct.
    private FormFieldData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FormFieldData() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FormFieldData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder subBuilder = null;
              if (fieldDataBindingCase_ == 1) {
                subBuilder = ((claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_).toBuilder();
              }
              fieldDataBinding_ =
                  input.readMessage(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_);
                fieldDataBinding_ = subBuilder.buildPartial();
              }
              fieldDataBindingCase_ = 1;
              break;
            }
            case 18: {
              claros.instrument.ClarosInstrumentData.InstrumentData.Builder subBuilder = null;
              if (instrumentData_ != null) {
                subBuilder = instrumentData_.toBuilder();
              }
              instrumentData_ = input.readMessage(claros.instrument.ClarosInstrumentData.InstrumentData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(instrumentData_);
                instrumentData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 794: {
              claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.Builder subBuilder = null;
              if (auditEvent_ != null) {
                subBuilder = auditEvent_.toBuilder();
              }
              auditEvent_ = input.readMessage(claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(auditEvent_);
                auditEvent_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.common.form.ClarosCommonFormFormfieldData.internal_static_claros_common_form_FormFieldData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.common.form.ClarosCommonFormFormfieldData.internal_static_claros_common_form_FormFieldData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.class, claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.Builder.class);
    }

    private int fieldDataBindingCase_ = 0;
    private java.lang.Object fieldDataBinding_;
    public enum FieldDataBindingCase
        implements com.google.protobuf.Internal.EnumLite {
      CELL(1),
      FIELDDATABINDING_NOT_SET(0);
      private final int value;
      private FieldDataBindingCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FieldDataBindingCase valueOf(int value) {
        return forNumber(value);
      }

      public static FieldDataBindingCase forNumber(int value) {
        switch (value) {
          case 1: return CELL;
          case 0: return FIELDDATABINDING_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FieldDataBindingCase
    getFieldDataBindingCase() {
      return FieldDataBindingCase.forNumber(
          fieldDataBindingCase_);
    }

    public static final int CELL_FIELD_NUMBER = 1;
    /**
     * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
     */
    public boolean hasCell() {
      return fieldDataBindingCase_ == 1;
    }
    /**
     * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
     */
    public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell getCell() {
      if (fieldDataBindingCase_ == 1) {
         return (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_;
      }
      return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance();
    }
    /**
     * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
     */
    public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.CellOrBuilder getCellOrBuilder() {
      if (fieldDataBindingCase_ == 1) {
         return (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_;
      }
      return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance();
    }

    public static final int INSTRUMENTDATA_FIELD_NUMBER = 2;
    private claros.instrument.ClarosInstrumentData.InstrumentData instrumentData_;
    /**
     * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
     */
    public boolean hasInstrumentData() {
      return instrumentData_ != null;
    }
    /**
     * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
     */
    public claros.instrument.ClarosInstrumentData.InstrumentData getInstrumentData() {
      return instrumentData_ == null ? claros.instrument.ClarosInstrumentData.InstrumentData.getDefaultInstance() : instrumentData_;
    }
    /**
     * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
     */
    public claros.instrument.ClarosInstrumentData.InstrumentDataOrBuilder getInstrumentDataOrBuilder() {
      return getInstrumentData();
    }

    public static final int AUDITEVENT_FIELD_NUMBER = 99;
    private claros.common.core.ClarosCommonCoreAuditevent.AuditEvent auditEvent_;
    /**
     * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
     */
    public boolean hasAuditEvent() {
      return auditEvent_ != null;
    }
    /**
     * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
     */
    public claros.common.core.ClarosCommonCoreAuditevent.AuditEvent getAuditEvent() {
      return auditEvent_ == null ? claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.getDefaultInstance() : auditEvent_;
    }
    /**
     * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
     */
    public claros.common.core.ClarosCommonCoreAuditevent.AuditEventOrBuilder getAuditEventOrBuilder() {
      return getAuditEvent();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fieldDataBindingCase_ == 1) {
        output.writeMessage(1, (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_);
      }
      if (instrumentData_ != null) {
        output.writeMessage(2, getInstrumentData());
      }
      if (auditEvent_ != null) {
        output.writeMessage(99, getAuditEvent());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fieldDataBindingCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_);
      }
      if (instrumentData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getInstrumentData());
      }
      if (auditEvent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(99, getAuditEvent());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.common.form.ClarosCommonFormFormfieldData.FormFieldData)) {
        return super.equals(obj);
      }
      claros.common.form.ClarosCommonFormFormfieldData.FormFieldData other = (claros.common.form.ClarosCommonFormFormfieldData.FormFieldData) obj;

      if (hasInstrumentData() != other.hasInstrumentData()) return false;
      if (hasInstrumentData()) {
        if (!getInstrumentData()
            .equals(other.getInstrumentData())) return false;
      }
      if (hasAuditEvent() != other.hasAuditEvent()) return false;
      if (hasAuditEvent()) {
        if (!getAuditEvent()
            .equals(other.getAuditEvent())) return false;
      }
      if (!getFieldDataBindingCase().equals(other.getFieldDataBindingCase())) return false;
      switch (fieldDataBindingCase_) {
        case 1:
          if (!getCell()
              .equals(other.getCell())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInstrumentData()) {
        hash = (37 * hash) + INSTRUMENTDATA_FIELD_NUMBER;
        hash = (53 * hash) + getInstrumentData().hashCode();
      }
      if (hasAuditEvent()) {
        hash = (37 * hash) + AUDITEVENT_FIELD_NUMBER;
        hash = (53 * hash) + getAuditEvent().hashCode();
      }
      switch (fieldDataBindingCase_) {
        case 1:
          hash = (37 * hash) + CELL_FIELD_NUMBER;
          hash = (53 * hash) + getCell().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.common.form.ClarosCommonFormFormfieldData.FormFieldData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.common.form.FormFieldData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.common.form.FormFieldData)
        claros.common.form.ClarosCommonFormFormfieldData.FormFieldDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.common.form.ClarosCommonFormFormfieldData.internal_static_claros_common_form_FormFieldData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.common.form.ClarosCommonFormFormfieldData.internal_static_claros_common_form_FormFieldData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.class, claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.Builder.class);
      }

      // Construct using claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (instrumentDataBuilder_ == null) {
          instrumentData_ = null;
        } else {
          instrumentData_ = null;
          instrumentDataBuilder_ = null;
        }
        if (auditEventBuilder_ == null) {
          auditEvent_ = null;
        } else {
          auditEvent_ = null;
          auditEventBuilder_ = null;
        }
        fieldDataBindingCase_ = 0;
        fieldDataBinding_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.common.form.ClarosCommonFormFormfieldData.internal_static_claros_common_form_FormFieldData_descriptor;
      }

      @java.lang.Override
      public claros.common.form.ClarosCommonFormFormfieldData.FormFieldData getDefaultInstanceForType() {
        return claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.getDefaultInstance();
      }

      @java.lang.Override
      public claros.common.form.ClarosCommonFormFormfieldData.FormFieldData build() {
        claros.common.form.ClarosCommonFormFormfieldData.FormFieldData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.common.form.ClarosCommonFormFormfieldData.FormFieldData buildPartial() {
        claros.common.form.ClarosCommonFormFormfieldData.FormFieldData result = new claros.common.form.ClarosCommonFormFormfieldData.FormFieldData(this);
        if (fieldDataBindingCase_ == 1) {
          if (cellBuilder_ == null) {
            result.fieldDataBinding_ = fieldDataBinding_;
          } else {
            result.fieldDataBinding_ = cellBuilder_.build();
          }
        }
        if (instrumentDataBuilder_ == null) {
          result.instrumentData_ = instrumentData_;
        } else {
          result.instrumentData_ = instrumentDataBuilder_.build();
        }
        if (auditEventBuilder_ == null) {
          result.auditEvent_ = auditEvent_;
        } else {
          result.auditEvent_ = auditEventBuilder_.build();
        }
        result.fieldDataBindingCase_ = fieldDataBindingCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.common.form.ClarosCommonFormFormfieldData.FormFieldData) {
          return mergeFrom((claros.common.form.ClarosCommonFormFormfieldData.FormFieldData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.common.form.ClarosCommonFormFormfieldData.FormFieldData other) {
        if (other == claros.common.form.ClarosCommonFormFormfieldData.FormFieldData.getDefaultInstance()) return this;
        if (other.hasInstrumentData()) {
          mergeInstrumentData(other.getInstrumentData());
        }
        if (other.hasAuditEvent()) {
          mergeAuditEvent(other.getAuditEvent());
        }
        switch (other.getFieldDataBindingCase()) {
          case CELL: {
            mergeCell(other.getCell());
            break;
          }
          case FIELDDATABINDING_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.common.form.ClarosCommonFormFormfieldData.FormFieldData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.common.form.ClarosCommonFormFormfieldData.FormFieldData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int fieldDataBindingCase_ = 0;
      private java.lang.Object fieldDataBinding_;
      public FieldDataBindingCase
          getFieldDataBindingCase() {
        return FieldDataBindingCase.forNumber(
            fieldDataBindingCase_);
      }

      public Builder clearFieldDataBinding() {
        fieldDataBindingCase_ = 0;
        fieldDataBinding_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.CellOrBuilder> cellBuilder_;
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public boolean hasCell() {
        return fieldDataBindingCase_ == 1;
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell getCell() {
        if (cellBuilder_ == null) {
          if (fieldDataBindingCase_ == 1) {
            return (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_;
          }
          return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance();
        } else {
          if (fieldDataBindingCase_ == 1) {
            return cellBuilder_.getMessage();
          }
          return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance();
        }
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public Builder setCell(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell value) {
        if (cellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldDataBinding_ = value;
          onChanged();
        } else {
          cellBuilder_.setMessage(value);
        }
        fieldDataBindingCase_ = 1;
        return this;
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public Builder setCell(
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder builderForValue) {
        if (cellBuilder_ == null) {
          fieldDataBinding_ = builderForValue.build();
          onChanged();
        } else {
          cellBuilder_.setMessage(builderForValue.build());
        }
        fieldDataBindingCase_ = 1;
        return this;
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public Builder mergeCell(claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell value) {
        if (cellBuilder_ == null) {
          if (fieldDataBindingCase_ == 1 &&
              fieldDataBinding_ != claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance()) {
            fieldDataBinding_ = claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.newBuilder((claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_)
                .mergeFrom(value).buildPartial();
          } else {
            fieldDataBinding_ = value;
          }
          onChanged();
        } else {
          if (fieldDataBindingCase_ == 1) {
            cellBuilder_.mergeFrom(value);
          }
          cellBuilder_.setMessage(value);
        }
        fieldDataBindingCase_ = 1;
        return this;
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public Builder clearCell() {
        if (cellBuilder_ == null) {
          if (fieldDataBindingCase_ == 1) {
            fieldDataBindingCase_ = 0;
            fieldDataBinding_ = null;
            onChanged();
          }
        } else {
          if (fieldDataBindingCase_ == 1) {
            fieldDataBindingCase_ = 0;
            fieldDataBinding_ = null;
          }
          cellBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder getCellBuilder() {
        return getCellFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      public claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.CellOrBuilder getCellOrBuilder() {
        if ((fieldDataBindingCase_ == 1) && (cellBuilder_ != null)) {
          return cellBuilder_.getMessageOrBuilder();
        } else {
          if (fieldDataBindingCase_ == 1) {
            return (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_;
          }
          return claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance();
        }
      }
      /**
       * <code>.claros.operations.spreadsheet.Cell cell = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.CellOrBuilder> 
          getCellFieldBuilder() {
        if (cellBuilder_ == null) {
          if (!(fieldDataBindingCase_ == 1)) {
            fieldDataBinding_ = claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.getDefaultInstance();
          }
          cellBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell.Builder, claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.CellOrBuilder>(
                  (claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.Cell) fieldDataBinding_,
                  getParentForChildren(),
                  isClean());
          fieldDataBinding_ = null;
        }
        fieldDataBindingCase_ = 1;
        onChanged();;
        return cellBuilder_;
      }

      private claros.instrument.ClarosInstrumentData.InstrumentData instrumentData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.ClarosInstrumentData.InstrumentData, claros.instrument.ClarosInstrumentData.InstrumentData.Builder, claros.instrument.ClarosInstrumentData.InstrumentDataOrBuilder> instrumentDataBuilder_;
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public boolean hasInstrumentData() {
        return instrumentDataBuilder_ != null || instrumentData_ != null;
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public claros.instrument.ClarosInstrumentData.InstrumentData getInstrumentData() {
        if (instrumentDataBuilder_ == null) {
          return instrumentData_ == null ? claros.instrument.ClarosInstrumentData.InstrumentData.getDefaultInstance() : instrumentData_;
        } else {
          return instrumentDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public Builder setInstrumentData(claros.instrument.ClarosInstrumentData.InstrumentData value) {
        if (instrumentDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          instrumentData_ = value;
          onChanged();
        } else {
          instrumentDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public Builder setInstrumentData(
          claros.instrument.ClarosInstrumentData.InstrumentData.Builder builderForValue) {
        if (instrumentDataBuilder_ == null) {
          instrumentData_ = builderForValue.build();
          onChanged();
        } else {
          instrumentDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public Builder mergeInstrumentData(claros.instrument.ClarosInstrumentData.InstrumentData value) {
        if (instrumentDataBuilder_ == null) {
          if (instrumentData_ != null) {
            instrumentData_ =
              claros.instrument.ClarosInstrumentData.InstrumentData.newBuilder(instrumentData_).mergeFrom(value).buildPartial();
          } else {
            instrumentData_ = value;
          }
          onChanged();
        } else {
          instrumentDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public Builder clearInstrumentData() {
        if (instrumentDataBuilder_ == null) {
          instrumentData_ = null;
          onChanged();
        } else {
          instrumentData_ = null;
          instrumentDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public claros.instrument.ClarosInstrumentData.InstrumentData.Builder getInstrumentDataBuilder() {
        
        onChanged();
        return getInstrumentDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      public claros.instrument.ClarosInstrumentData.InstrumentDataOrBuilder getInstrumentDataOrBuilder() {
        if (instrumentDataBuilder_ != null) {
          return instrumentDataBuilder_.getMessageOrBuilder();
        } else {
          return instrumentData_ == null ?
              claros.instrument.ClarosInstrumentData.InstrumentData.getDefaultInstance() : instrumentData_;
        }
      }
      /**
       * <code>.claros.instrument.InstrumentData instrumentData = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.ClarosInstrumentData.InstrumentData, claros.instrument.ClarosInstrumentData.InstrumentData.Builder, claros.instrument.ClarosInstrumentData.InstrumentDataOrBuilder> 
          getInstrumentDataFieldBuilder() {
        if (instrumentDataBuilder_ == null) {
          instrumentDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.instrument.ClarosInstrumentData.InstrumentData, claros.instrument.ClarosInstrumentData.InstrumentData.Builder, claros.instrument.ClarosInstrumentData.InstrumentDataOrBuilder>(
                  getInstrumentData(),
                  getParentForChildren(),
                  isClean());
          instrumentData_ = null;
        }
        return instrumentDataBuilder_;
      }

      private claros.common.core.ClarosCommonCoreAuditevent.AuditEvent auditEvent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreAuditevent.AuditEvent, claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.Builder, claros.common.core.ClarosCommonCoreAuditevent.AuditEventOrBuilder> auditEventBuilder_;
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public boolean hasAuditEvent() {
        return auditEventBuilder_ != null || auditEvent_ != null;
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public claros.common.core.ClarosCommonCoreAuditevent.AuditEvent getAuditEvent() {
        if (auditEventBuilder_ == null) {
          return auditEvent_ == null ? claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.getDefaultInstance() : auditEvent_;
        } else {
          return auditEventBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public Builder setAuditEvent(claros.common.core.ClarosCommonCoreAuditevent.AuditEvent value) {
        if (auditEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          auditEvent_ = value;
          onChanged();
        } else {
          auditEventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public Builder setAuditEvent(
          claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.Builder builderForValue) {
        if (auditEventBuilder_ == null) {
          auditEvent_ = builderForValue.build();
          onChanged();
        } else {
          auditEventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public Builder mergeAuditEvent(claros.common.core.ClarosCommonCoreAuditevent.AuditEvent value) {
        if (auditEventBuilder_ == null) {
          if (auditEvent_ != null) {
            auditEvent_ =
              claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.newBuilder(auditEvent_).mergeFrom(value).buildPartial();
          } else {
            auditEvent_ = value;
          }
          onChanged();
        } else {
          auditEventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public Builder clearAuditEvent() {
        if (auditEventBuilder_ == null) {
          auditEvent_ = null;
          onChanged();
        } else {
          auditEvent_ = null;
          auditEventBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.Builder getAuditEventBuilder() {
        
        onChanged();
        return getAuditEventFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      public claros.common.core.ClarosCommonCoreAuditevent.AuditEventOrBuilder getAuditEventOrBuilder() {
        if (auditEventBuilder_ != null) {
          return auditEventBuilder_.getMessageOrBuilder();
        } else {
          return auditEvent_ == null ?
              claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.getDefaultInstance() : auditEvent_;
        }
      }
      /**
       * <code>.claros.common.core.AuditEvent auditEvent = 99;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreAuditevent.AuditEvent, claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.Builder, claros.common.core.ClarosCommonCoreAuditevent.AuditEventOrBuilder> 
          getAuditEventFieldBuilder() {
        if (auditEventBuilder_ == null) {
          auditEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.core.ClarosCommonCoreAuditevent.AuditEvent, claros.common.core.ClarosCommonCoreAuditevent.AuditEvent.Builder, claros.common.core.ClarosCommonCoreAuditevent.AuditEventOrBuilder>(
                  getAuditEvent(),
                  getParentForChildren(),
                  isClean());
          auditEvent_ = null;
        }
        return auditEventBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.common.form.FormFieldData)
    }

    // @@protoc_insertion_point(class_scope:claros.common.form.FormFieldData)
    private static final claros.common.form.ClarosCommonFormFormfieldData.FormFieldData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.common.form.ClarosCommonFormFormfieldData.FormFieldData();
    }

    public static claros.common.form.ClarosCommonFormFormfieldData.FormFieldData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FormFieldData>
        PARSER = new com.google.protobuf.AbstractParser<FormFieldData>() {
      @java.lang.Override
      public FormFieldData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FormFieldData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FormFieldData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FormFieldData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.common.form.ClarosCommonFormFormfieldData.FormFieldData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_common_form_FormFieldData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_common_form_FormFieldData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'claros_common_form_formfield_data.prot" +
      "o\022\022claros.common.form\0322claros_operations" +
      "_spreadsheet_worksheet_cell.proto\032\034claro" +
      "s_instrument_data.proto\032#claros_common_c" +
      "ore_auditevent.proto\"\307\001\n\rFormFieldData\0223" +
      "\n\004cell\030\001 \001(\0132#.claros.operations.spreads" +
      "heet.CellH\000\0229\n\016instrumentData\030\002 \001(\0132!.cl" +
      "aros.instrument.InstrumentData\0222\n\nauditE" +
      "vent\030c \001(\0132\036.claros.common.core.AuditEve" +
      "ntB\022\n\020fieldDataBindingb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.getDescriptor(),
          claros.instrument.ClarosInstrumentData.getDescriptor(),
          claros.common.core.ClarosCommonCoreAuditevent.getDescriptor(),
        }, assigner);
    internal_static_claros_common_form_FormFieldData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_common_form_FormFieldData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_common_form_FormFieldData_descriptor,
        new java.lang.String[] { "Cell", "InstrumentData", "AuditEvent", "FieldDataBinding", });
    claros.operations.spreadsheet.ClarosOperationsSpreadsheetWorksheetCell.getDescriptor();
    claros.instrument.ClarosInstrumentData.getDescriptor();
    claros.common.core.ClarosCommonCoreAuditevent.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
