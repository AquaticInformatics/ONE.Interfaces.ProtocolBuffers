// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_core_mobiledatetime.proto

package claros.common.core;

public final class ClarosCommonCoreMobiledatetime {
  private ClarosCommonCoreMobiledatetime() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MobileDateTimeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.common.core.MobileDateTime)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
     */
    boolean hasMobileDate();
    /**
     * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
     */
    claros.common.core.ClarosCommonCoreMobiledate.MobileDate getMobileDate();
    /**
     * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
     */
    claros.common.core.ClarosCommonCoreMobiledate.MobileDateOrBuilder getMobileDateOrBuilder();

    /**
     * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
     */
    boolean hasMobileTime();
    /**
     * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
     */
    claros.common.core.ClarosCommonCoreMobiletime.MobileTime getMobileTime();
    /**
     * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
     */
    claros.common.core.ClarosCommonCoreMobiletime.MobileTimeOrBuilder getMobileTimeOrBuilder();

    /**
     * <code>int32 timeZone = 3;</code>
     */
    int getTimeZone();
  }
  /**
   * Protobuf type {@code claros.common.core.MobileDateTime}
   */
  public  static final class MobileDateTime extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.common.core.MobileDateTime)
      MobileDateTimeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MobileDateTime.newBuilder() to construct.
    private MobileDateTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MobileDateTime() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MobileDateTime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              claros.common.core.ClarosCommonCoreMobiledate.MobileDate.Builder subBuilder = null;
              if (mobileDate_ != null) {
                subBuilder = mobileDate_.toBuilder();
              }
              mobileDate_ = input.readMessage(claros.common.core.ClarosCommonCoreMobiledate.MobileDate.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mobileDate_);
                mobileDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              claros.common.core.ClarosCommonCoreMobiletime.MobileTime.Builder subBuilder = null;
              if (mobileTime_ != null) {
                subBuilder = mobileTime_.toBuilder();
              }
              mobileTime_ = input.readMessage(claros.common.core.ClarosCommonCoreMobiletime.MobileTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mobileTime_);
                mobileTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              timeZone_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.common.core.ClarosCommonCoreMobiledatetime.internal_static_claros_common_core_MobileDateTime_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.common.core.ClarosCommonCoreMobiledatetime.internal_static_claros_common_core_MobileDateTime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime.class, claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime.Builder.class);
    }

    public static final int MOBILEDATE_FIELD_NUMBER = 1;
    private claros.common.core.ClarosCommonCoreMobiledate.MobileDate mobileDate_;
    /**
     * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
     */
    public boolean hasMobileDate() {
      return mobileDate_ != null;
    }
    /**
     * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
     */
    public claros.common.core.ClarosCommonCoreMobiledate.MobileDate getMobileDate() {
      return mobileDate_ == null ? claros.common.core.ClarosCommonCoreMobiledate.MobileDate.getDefaultInstance() : mobileDate_;
    }
    /**
     * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
     */
    public claros.common.core.ClarosCommonCoreMobiledate.MobileDateOrBuilder getMobileDateOrBuilder() {
      return getMobileDate();
    }

    public static final int MOBILETIME_FIELD_NUMBER = 2;
    private claros.common.core.ClarosCommonCoreMobiletime.MobileTime mobileTime_;
    /**
     * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
     */
    public boolean hasMobileTime() {
      return mobileTime_ != null;
    }
    /**
     * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
     */
    public claros.common.core.ClarosCommonCoreMobiletime.MobileTime getMobileTime() {
      return mobileTime_ == null ? claros.common.core.ClarosCommonCoreMobiletime.MobileTime.getDefaultInstance() : mobileTime_;
    }
    /**
     * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
     */
    public claros.common.core.ClarosCommonCoreMobiletime.MobileTimeOrBuilder getMobileTimeOrBuilder() {
      return getMobileTime();
    }

    public static final int TIMEZONE_FIELD_NUMBER = 3;
    private int timeZone_;
    /**
     * <code>int32 timeZone = 3;</code>
     */
    public int getTimeZone() {
      return timeZone_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mobileDate_ != null) {
        output.writeMessage(1, getMobileDate());
      }
      if (mobileTime_ != null) {
        output.writeMessage(2, getMobileTime());
      }
      if (timeZone_ != 0) {
        output.writeInt32(3, timeZone_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mobileDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMobileDate());
      }
      if (mobileTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMobileTime());
      }
      if (timeZone_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, timeZone_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime)) {
        return super.equals(obj);
      }
      claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime other = (claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime) obj;

      if (hasMobileDate() != other.hasMobileDate()) return false;
      if (hasMobileDate()) {
        if (!getMobileDate()
            .equals(other.getMobileDate())) return false;
      }
      if (hasMobileTime() != other.hasMobileTime()) return false;
      if (hasMobileTime()) {
        if (!getMobileTime()
            .equals(other.getMobileTime())) return false;
      }
      if (getTimeZone()
          != other.getTimeZone()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMobileDate()) {
        hash = (37 * hash) + MOBILEDATE_FIELD_NUMBER;
        hash = (53 * hash) + getMobileDate().hashCode();
      }
      if (hasMobileTime()) {
        hash = (37 * hash) + MOBILETIME_FIELD_NUMBER;
        hash = (53 * hash) + getMobileTime().hashCode();
      }
      hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
      hash = (53 * hash) + getTimeZone();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.common.core.MobileDateTime}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.common.core.MobileDateTime)
        claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.common.core.ClarosCommonCoreMobiledatetime.internal_static_claros_common_core_MobileDateTime_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.common.core.ClarosCommonCoreMobiledatetime.internal_static_claros_common_core_MobileDateTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime.class, claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime.Builder.class);
      }

      // Construct using claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (mobileDateBuilder_ == null) {
          mobileDate_ = null;
        } else {
          mobileDate_ = null;
          mobileDateBuilder_ = null;
        }
        if (mobileTimeBuilder_ == null) {
          mobileTime_ = null;
        } else {
          mobileTime_ = null;
          mobileTimeBuilder_ = null;
        }
        timeZone_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.common.core.ClarosCommonCoreMobiledatetime.internal_static_claros_common_core_MobileDateTime_descriptor;
      }

      @java.lang.Override
      public claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime getDefaultInstanceForType() {
        return claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime.getDefaultInstance();
      }

      @java.lang.Override
      public claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime build() {
        claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime buildPartial() {
        claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime result = new claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime(this);
        if (mobileDateBuilder_ == null) {
          result.mobileDate_ = mobileDate_;
        } else {
          result.mobileDate_ = mobileDateBuilder_.build();
        }
        if (mobileTimeBuilder_ == null) {
          result.mobileTime_ = mobileTime_;
        } else {
          result.mobileTime_ = mobileTimeBuilder_.build();
        }
        result.timeZone_ = timeZone_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime) {
          return mergeFrom((claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime other) {
        if (other == claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime.getDefaultInstance()) return this;
        if (other.hasMobileDate()) {
          mergeMobileDate(other.getMobileDate());
        }
        if (other.hasMobileTime()) {
          mergeMobileTime(other.getMobileTime());
        }
        if (other.getTimeZone() != 0) {
          setTimeZone(other.getTimeZone());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private claros.common.core.ClarosCommonCoreMobiledate.MobileDate mobileDate_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreMobiledate.MobileDate, claros.common.core.ClarosCommonCoreMobiledate.MobileDate.Builder, claros.common.core.ClarosCommonCoreMobiledate.MobileDateOrBuilder> mobileDateBuilder_;
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public boolean hasMobileDate() {
        return mobileDateBuilder_ != null || mobileDate_ != null;
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public claros.common.core.ClarosCommonCoreMobiledate.MobileDate getMobileDate() {
        if (mobileDateBuilder_ == null) {
          return mobileDate_ == null ? claros.common.core.ClarosCommonCoreMobiledate.MobileDate.getDefaultInstance() : mobileDate_;
        } else {
          return mobileDateBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public Builder setMobileDate(claros.common.core.ClarosCommonCoreMobiledate.MobileDate value) {
        if (mobileDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mobileDate_ = value;
          onChanged();
        } else {
          mobileDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public Builder setMobileDate(
          claros.common.core.ClarosCommonCoreMobiledate.MobileDate.Builder builderForValue) {
        if (mobileDateBuilder_ == null) {
          mobileDate_ = builderForValue.build();
          onChanged();
        } else {
          mobileDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public Builder mergeMobileDate(claros.common.core.ClarosCommonCoreMobiledate.MobileDate value) {
        if (mobileDateBuilder_ == null) {
          if (mobileDate_ != null) {
            mobileDate_ =
              claros.common.core.ClarosCommonCoreMobiledate.MobileDate.newBuilder(mobileDate_).mergeFrom(value).buildPartial();
          } else {
            mobileDate_ = value;
          }
          onChanged();
        } else {
          mobileDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public Builder clearMobileDate() {
        if (mobileDateBuilder_ == null) {
          mobileDate_ = null;
          onChanged();
        } else {
          mobileDate_ = null;
          mobileDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public claros.common.core.ClarosCommonCoreMobiledate.MobileDate.Builder getMobileDateBuilder() {
        
        onChanged();
        return getMobileDateFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      public claros.common.core.ClarosCommonCoreMobiledate.MobileDateOrBuilder getMobileDateOrBuilder() {
        if (mobileDateBuilder_ != null) {
          return mobileDateBuilder_.getMessageOrBuilder();
        } else {
          return mobileDate_ == null ?
              claros.common.core.ClarosCommonCoreMobiledate.MobileDate.getDefaultInstance() : mobileDate_;
        }
      }
      /**
       * <code>.claros.common.core.MobileDate mobileDate = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreMobiledate.MobileDate, claros.common.core.ClarosCommonCoreMobiledate.MobileDate.Builder, claros.common.core.ClarosCommonCoreMobiledate.MobileDateOrBuilder> 
          getMobileDateFieldBuilder() {
        if (mobileDateBuilder_ == null) {
          mobileDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.core.ClarosCommonCoreMobiledate.MobileDate, claros.common.core.ClarosCommonCoreMobiledate.MobileDate.Builder, claros.common.core.ClarosCommonCoreMobiledate.MobileDateOrBuilder>(
                  getMobileDate(),
                  getParentForChildren(),
                  isClean());
          mobileDate_ = null;
        }
        return mobileDateBuilder_;
      }

      private claros.common.core.ClarosCommonCoreMobiletime.MobileTime mobileTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreMobiletime.MobileTime, claros.common.core.ClarosCommonCoreMobiletime.MobileTime.Builder, claros.common.core.ClarosCommonCoreMobiletime.MobileTimeOrBuilder> mobileTimeBuilder_;
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public boolean hasMobileTime() {
        return mobileTimeBuilder_ != null || mobileTime_ != null;
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreMobiletime.MobileTime getMobileTime() {
        if (mobileTimeBuilder_ == null) {
          return mobileTime_ == null ? claros.common.core.ClarosCommonCoreMobiletime.MobileTime.getDefaultInstance() : mobileTime_;
        } else {
          return mobileTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public Builder setMobileTime(claros.common.core.ClarosCommonCoreMobiletime.MobileTime value) {
        if (mobileTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mobileTime_ = value;
          onChanged();
        } else {
          mobileTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public Builder setMobileTime(
          claros.common.core.ClarosCommonCoreMobiletime.MobileTime.Builder builderForValue) {
        if (mobileTimeBuilder_ == null) {
          mobileTime_ = builderForValue.build();
          onChanged();
        } else {
          mobileTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public Builder mergeMobileTime(claros.common.core.ClarosCommonCoreMobiletime.MobileTime value) {
        if (mobileTimeBuilder_ == null) {
          if (mobileTime_ != null) {
            mobileTime_ =
              claros.common.core.ClarosCommonCoreMobiletime.MobileTime.newBuilder(mobileTime_).mergeFrom(value).buildPartial();
          } else {
            mobileTime_ = value;
          }
          onChanged();
        } else {
          mobileTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public Builder clearMobileTime() {
        if (mobileTimeBuilder_ == null) {
          mobileTime_ = null;
          onChanged();
        } else {
          mobileTime_ = null;
          mobileTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreMobiletime.MobileTime.Builder getMobileTimeBuilder() {
        
        onChanged();
        return getMobileTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      public claros.common.core.ClarosCommonCoreMobiletime.MobileTimeOrBuilder getMobileTimeOrBuilder() {
        if (mobileTimeBuilder_ != null) {
          return mobileTimeBuilder_.getMessageOrBuilder();
        } else {
          return mobileTime_ == null ?
              claros.common.core.ClarosCommonCoreMobiletime.MobileTime.getDefaultInstance() : mobileTime_;
        }
      }
      /**
       * <code>.claros.common.core.MobileTime mobileTime = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreMobiletime.MobileTime, claros.common.core.ClarosCommonCoreMobiletime.MobileTime.Builder, claros.common.core.ClarosCommonCoreMobiletime.MobileTimeOrBuilder> 
          getMobileTimeFieldBuilder() {
        if (mobileTimeBuilder_ == null) {
          mobileTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.core.ClarosCommonCoreMobiletime.MobileTime, claros.common.core.ClarosCommonCoreMobiletime.MobileTime.Builder, claros.common.core.ClarosCommonCoreMobiletime.MobileTimeOrBuilder>(
                  getMobileTime(),
                  getParentForChildren(),
                  isClean());
          mobileTime_ = null;
        }
        return mobileTimeBuilder_;
      }

      private int timeZone_ ;
      /**
       * <code>int32 timeZone = 3;</code>
       */
      public int getTimeZone() {
        return timeZone_;
      }
      /**
       * <code>int32 timeZone = 3;</code>
       */
      public Builder setTimeZone(int value) {
        
        timeZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 timeZone = 3;</code>
       */
      public Builder clearTimeZone() {
        
        timeZone_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.common.core.MobileDateTime)
    }

    // @@protoc_insertion_point(class_scope:claros.common.core.MobileDateTime)
    private static final claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime();
    }

    public static claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MobileDateTime>
        PARSER = new com.google.protobuf.AbstractParser<MobileDateTime>() {
      @java.lang.Override
      public MobileDateTime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MobileDateTime(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MobileDateTime> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MobileDateTime> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.common.core.ClarosCommonCoreMobiledatetime.MobileDateTime getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_common_core_MobileDateTime_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_common_core_MobileDateTime_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'claros_common_core_mobiledatetime.prot" +
      "o\022\022claros.common.core\032#claros_common_cor" +
      "e_mobiletime.proto\032#claros_common_core_m" +
      "obiledate.proto\"\212\001\n\016MobileDateTime\0222\n\nmo" +
      "bileDate\030\001 \001(\0132\036.claros.common.core.Mobi" +
      "leDate\0222\n\nmobileTime\030\002 \001(\0132\036.claros.comm" +
      "on.core.MobileTime\022\020\n\010timeZone\030\003 \001(\005b\006pr" +
      "oto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.common.core.ClarosCommonCoreMobiletime.getDescriptor(),
          claros.common.core.ClarosCommonCoreMobiledate.getDescriptor(),
        }, assigner);
    internal_static_claros_common_core_MobileDateTime_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_common_core_MobileDateTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_common_core_MobileDateTime_descriptor,
        new java.lang.String[] { "MobileDate", "MobileTime", "TimeZone", });
    claros.common.core.ClarosCommonCoreMobiletime.getDescriptor();
    claros.common.core.ClarosCommonCoreMobiledate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
