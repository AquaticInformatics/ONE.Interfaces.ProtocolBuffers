// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_gis_gis.proto

package claros.common.gis;

public final class ClarosCommonGisGis {
  private ClarosCommonGisGis() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GISOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.common.gis.GIS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.claros.common.gis.Point2D point2d = 1;</code>
     */
    boolean hasPoint2D();
    /**
     * <code>.claros.common.gis.Point2D point2d = 1;</code>
     */
    claros.common.gis.ClarosCommonGisPoint2D.Point2D getPoint2D();
    /**
     * <code>.claros.common.gis.Point2D point2d = 1;</code>
     */
    claros.common.gis.ClarosCommonGisPoint2D.Point2DOrBuilder getPoint2DOrBuilder();

    /**
     * <code>.claros.common.gis.Point3D point3d = 2;</code>
     */
    boolean hasPoint3D();
    /**
     * <code>.claros.common.gis.Point3D point3d = 2;</code>
     */
    claros.common.gis.ClarosCommonGisPoint3D.Point3D getPoint3D();
    /**
     * <code>.claros.common.gis.Point3D point3d = 2;</code>
     */
    claros.common.gis.ClarosCommonGisPoint3D.Point3DOrBuilder getPoint3DOrBuilder();

    /**
     * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
     */
    boolean hasMultiPoint2D();
    /**
     * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
     */
    claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D getMultiPoint2D();
    /**
     * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
     */
    claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2DOrBuilder getMultiPoint2DOrBuilder();

    /**
     * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
     */
    boolean hasMultiPoint3D();
    /**
     * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
     */
    claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D getMultiPoint3D();
    /**
     * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
     */
    claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3DOrBuilder getMultiPoint3DOrBuilder();
  }
  /**
   * Protobuf type {@code claros.common.gis.GIS}
   */
  public  static final class GIS extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.common.gis.GIS)
      GISOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GIS.newBuilder() to construct.
    private GIS(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GIS() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GIS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              claros.common.gis.ClarosCommonGisPoint2D.Point2D.Builder subBuilder = null;
              if (point2D_ != null) {
                subBuilder = point2D_.toBuilder();
              }
              point2D_ = input.readMessage(claros.common.gis.ClarosCommonGisPoint2D.Point2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(point2D_);
                point2D_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              claros.common.gis.ClarosCommonGisPoint3D.Point3D.Builder subBuilder = null;
              if (point3D_ != null) {
                subBuilder = point3D_.toBuilder();
              }
              point3D_ = input.readMessage(claros.common.gis.ClarosCommonGisPoint3D.Point3D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(point3D_);
                point3D_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.Builder subBuilder = null;
              if (multiPoint2D_ != null) {
                subBuilder = multiPoint2D_.toBuilder();
              }
              multiPoint2D_ = input.readMessage(claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multiPoint2D_);
                multiPoint2D_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.Builder subBuilder = null;
              if (multiPoint3D_ != null) {
                subBuilder = multiPoint3D_.toBuilder();
              }
              multiPoint3D_ = input.readMessage(claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multiPoint3D_);
                multiPoint3D_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.common.gis.ClarosCommonGisGis.internal_static_claros_common_gis_GIS_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.common.gis.ClarosCommonGisGis.internal_static_claros_common_gis_GIS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.common.gis.ClarosCommonGisGis.GIS.class, claros.common.gis.ClarosCommonGisGis.GIS.Builder.class);
    }

    public static final int POINT2D_FIELD_NUMBER = 1;
    private claros.common.gis.ClarosCommonGisPoint2D.Point2D point2D_;
    /**
     * <code>.claros.common.gis.Point2D point2d = 1;</code>
     */
    public boolean hasPoint2D() {
      return point2D_ != null;
    }
    /**
     * <code>.claros.common.gis.Point2D point2d = 1;</code>
     */
    public claros.common.gis.ClarosCommonGisPoint2D.Point2D getPoint2D() {
      return point2D_ == null ? claros.common.gis.ClarosCommonGisPoint2D.Point2D.getDefaultInstance() : point2D_;
    }
    /**
     * <code>.claros.common.gis.Point2D point2d = 1;</code>
     */
    public claros.common.gis.ClarosCommonGisPoint2D.Point2DOrBuilder getPoint2DOrBuilder() {
      return getPoint2D();
    }

    public static final int POINT3D_FIELD_NUMBER = 2;
    private claros.common.gis.ClarosCommonGisPoint3D.Point3D point3D_;
    /**
     * <code>.claros.common.gis.Point3D point3d = 2;</code>
     */
    public boolean hasPoint3D() {
      return point3D_ != null;
    }
    /**
     * <code>.claros.common.gis.Point3D point3d = 2;</code>
     */
    public claros.common.gis.ClarosCommonGisPoint3D.Point3D getPoint3D() {
      return point3D_ == null ? claros.common.gis.ClarosCommonGisPoint3D.Point3D.getDefaultInstance() : point3D_;
    }
    /**
     * <code>.claros.common.gis.Point3D point3d = 2;</code>
     */
    public claros.common.gis.ClarosCommonGisPoint3D.Point3DOrBuilder getPoint3DOrBuilder() {
      return getPoint3D();
    }

    public static final int MULTI_POINT2D_FIELD_NUMBER = 3;
    private claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D multiPoint2D_;
    /**
     * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
     */
    public boolean hasMultiPoint2D() {
      return multiPoint2D_ != null;
    }
    /**
     * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
     */
    public claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D getMultiPoint2D() {
      return multiPoint2D_ == null ? claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.getDefaultInstance() : multiPoint2D_;
    }
    /**
     * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
     */
    public claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2DOrBuilder getMultiPoint2DOrBuilder() {
      return getMultiPoint2D();
    }

    public static final int MULTI_POINT3D_FIELD_NUMBER = 4;
    private claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D multiPoint3D_;
    /**
     * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
     */
    public boolean hasMultiPoint3D() {
      return multiPoint3D_ != null;
    }
    /**
     * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
     */
    public claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D getMultiPoint3D() {
      return multiPoint3D_ == null ? claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.getDefaultInstance() : multiPoint3D_;
    }
    /**
     * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
     */
    public claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3DOrBuilder getMultiPoint3DOrBuilder() {
      return getMultiPoint3D();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (point2D_ != null) {
        output.writeMessage(1, getPoint2D());
      }
      if (point3D_ != null) {
        output.writeMessage(2, getPoint3D());
      }
      if (multiPoint2D_ != null) {
        output.writeMessage(3, getMultiPoint2D());
      }
      if (multiPoint3D_ != null) {
        output.writeMessage(4, getMultiPoint3D());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (point2D_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPoint2D());
      }
      if (point3D_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPoint3D());
      }
      if (multiPoint2D_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMultiPoint2D());
      }
      if (multiPoint3D_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMultiPoint3D());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.common.gis.ClarosCommonGisGis.GIS)) {
        return super.equals(obj);
      }
      claros.common.gis.ClarosCommonGisGis.GIS other = (claros.common.gis.ClarosCommonGisGis.GIS) obj;

      if (hasPoint2D() != other.hasPoint2D()) return false;
      if (hasPoint2D()) {
        if (!getPoint2D()
            .equals(other.getPoint2D())) return false;
      }
      if (hasPoint3D() != other.hasPoint3D()) return false;
      if (hasPoint3D()) {
        if (!getPoint3D()
            .equals(other.getPoint3D())) return false;
      }
      if (hasMultiPoint2D() != other.hasMultiPoint2D()) return false;
      if (hasMultiPoint2D()) {
        if (!getMultiPoint2D()
            .equals(other.getMultiPoint2D())) return false;
      }
      if (hasMultiPoint3D() != other.hasMultiPoint3D()) return false;
      if (hasMultiPoint3D()) {
        if (!getMultiPoint3D()
            .equals(other.getMultiPoint3D())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPoint2D()) {
        hash = (37 * hash) + POINT2D_FIELD_NUMBER;
        hash = (53 * hash) + getPoint2D().hashCode();
      }
      if (hasPoint3D()) {
        hash = (37 * hash) + POINT3D_FIELD_NUMBER;
        hash = (53 * hash) + getPoint3D().hashCode();
      }
      if (hasMultiPoint2D()) {
        hash = (37 * hash) + MULTI_POINT2D_FIELD_NUMBER;
        hash = (53 * hash) + getMultiPoint2D().hashCode();
      }
      if (hasMultiPoint3D()) {
        hash = (37 * hash) + MULTI_POINT3D_FIELD_NUMBER;
        hash = (53 * hash) + getMultiPoint3D().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.gis.ClarosCommonGisGis.GIS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.common.gis.ClarosCommonGisGis.GIS prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.common.gis.GIS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.common.gis.GIS)
        claros.common.gis.ClarosCommonGisGis.GISOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.common.gis.ClarosCommonGisGis.internal_static_claros_common_gis_GIS_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.common.gis.ClarosCommonGisGis.internal_static_claros_common_gis_GIS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.common.gis.ClarosCommonGisGis.GIS.class, claros.common.gis.ClarosCommonGisGis.GIS.Builder.class);
      }

      // Construct using claros.common.gis.ClarosCommonGisGis.GIS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (point2DBuilder_ == null) {
          point2D_ = null;
        } else {
          point2D_ = null;
          point2DBuilder_ = null;
        }
        if (point3DBuilder_ == null) {
          point3D_ = null;
        } else {
          point3D_ = null;
          point3DBuilder_ = null;
        }
        if (multiPoint2DBuilder_ == null) {
          multiPoint2D_ = null;
        } else {
          multiPoint2D_ = null;
          multiPoint2DBuilder_ = null;
        }
        if (multiPoint3DBuilder_ == null) {
          multiPoint3D_ = null;
        } else {
          multiPoint3D_ = null;
          multiPoint3DBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.common.gis.ClarosCommonGisGis.internal_static_claros_common_gis_GIS_descriptor;
      }

      @java.lang.Override
      public claros.common.gis.ClarosCommonGisGis.GIS getDefaultInstanceForType() {
        return claros.common.gis.ClarosCommonGisGis.GIS.getDefaultInstance();
      }

      @java.lang.Override
      public claros.common.gis.ClarosCommonGisGis.GIS build() {
        claros.common.gis.ClarosCommonGisGis.GIS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.common.gis.ClarosCommonGisGis.GIS buildPartial() {
        claros.common.gis.ClarosCommonGisGis.GIS result = new claros.common.gis.ClarosCommonGisGis.GIS(this);
        if (point2DBuilder_ == null) {
          result.point2D_ = point2D_;
        } else {
          result.point2D_ = point2DBuilder_.build();
        }
        if (point3DBuilder_ == null) {
          result.point3D_ = point3D_;
        } else {
          result.point3D_ = point3DBuilder_.build();
        }
        if (multiPoint2DBuilder_ == null) {
          result.multiPoint2D_ = multiPoint2D_;
        } else {
          result.multiPoint2D_ = multiPoint2DBuilder_.build();
        }
        if (multiPoint3DBuilder_ == null) {
          result.multiPoint3D_ = multiPoint3D_;
        } else {
          result.multiPoint3D_ = multiPoint3DBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.common.gis.ClarosCommonGisGis.GIS) {
          return mergeFrom((claros.common.gis.ClarosCommonGisGis.GIS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.common.gis.ClarosCommonGisGis.GIS other) {
        if (other == claros.common.gis.ClarosCommonGisGis.GIS.getDefaultInstance()) return this;
        if (other.hasPoint2D()) {
          mergePoint2D(other.getPoint2D());
        }
        if (other.hasPoint3D()) {
          mergePoint3D(other.getPoint3D());
        }
        if (other.hasMultiPoint2D()) {
          mergeMultiPoint2D(other.getMultiPoint2D());
        }
        if (other.hasMultiPoint3D()) {
          mergeMultiPoint3D(other.getMultiPoint3D());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.common.gis.ClarosCommonGisGis.GIS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.common.gis.ClarosCommonGisGis.GIS) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private claros.common.gis.ClarosCommonGisPoint2D.Point2D point2D_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisPoint2D.Point2D, claros.common.gis.ClarosCommonGisPoint2D.Point2D.Builder, claros.common.gis.ClarosCommonGisPoint2D.Point2DOrBuilder> point2DBuilder_;
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public boolean hasPoint2D() {
        return point2DBuilder_ != null || point2D_ != null;
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public claros.common.gis.ClarosCommonGisPoint2D.Point2D getPoint2D() {
        if (point2DBuilder_ == null) {
          return point2D_ == null ? claros.common.gis.ClarosCommonGisPoint2D.Point2D.getDefaultInstance() : point2D_;
        } else {
          return point2DBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public Builder setPoint2D(claros.common.gis.ClarosCommonGisPoint2D.Point2D value) {
        if (point2DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          point2D_ = value;
          onChanged();
        } else {
          point2DBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public Builder setPoint2D(
          claros.common.gis.ClarosCommonGisPoint2D.Point2D.Builder builderForValue) {
        if (point2DBuilder_ == null) {
          point2D_ = builderForValue.build();
          onChanged();
        } else {
          point2DBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public Builder mergePoint2D(claros.common.gis.ClarosCommonGisPoint2D.Point2D value) {
        if (point2DBuilder_ == null) {
          if (point2D_ != null) {
            point2D_ =
              claros.common.gis.ClarosCommonGisPoint2D.Point2D.newBuilder(point2D_).mergeFrom(value).buildPartial();
          } else {
            point2D_ = value;
          }
          onChanged();
        } else {
          point2DBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public Builder clearPoint2D() {
        if (point2DBuilder_ == null) {
          point2D_ = null;
          onChanged();
        } else {
          point2D_ = null;
          point2DBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public claros.common.gis.ClarosCommonGisPoint2D.Point2D.Builder getPoint2DBuilder() {
        
        onChanged();
        return getPoint2DFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      public claros.common.gis.ClarosCommonGisPoint2D.Point2DOrBuilder getPoint2DOrBuilder() {
        if (point2DBuilder_ != null) {
          return point2DBuilder_.getMessageOrBuilder();
        } else {
          return point2D_ == null ?
              claros.common.gis.ClarosCommonGisPoint2D.Point2D.getDefaultInstance() : point2D_;
        }
      }
      /**
       * <code>.claros.common.gis.Point2D point2d = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisPoint2D.Point2D, claros.common.gis.ClarosCommonGisPoint2D.Point2D.Builder, claros.common.gis.ClarosCommonGisPoint2D.Point2DOrBuilder> 
          getPoint2DFieldBuilder() {
        if (point2DBuilder_ == null) {
          point2DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.gis.ClarosCommonGisPoint2D.Point2D, claros.common.gis.ClarosCommonGisPoint2D.Point2D.Builder, claros.common.gis.ClarosCommonGisPoint2D.Point2DOrBuilder>(
                  getPoint2D(),
                  getParentForChildren(),
                  isClean());
          point2D_ = null;
        }
        return point2DBuilder_;
      }

      private claros.common.gis.ClarosCommonGisPoint3D.Point3D point3D_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisPoint3D.Point3D, claros.common.gis.ClarosCommonGisPoint3D.Point3D.Builder, claros.common.gis.ClarosCommonGisPoint3D.Point3DOrBuilder> point3DBuilder_;
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public boolean hasPoint3D() {
        return point3DBuilder_ != null || point3D_ != null;
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public claros.common.gis.ClarosCommonGisPoint3D.Point3D getPoint3D() {
        if (point3DBuilder_ == null) {
          return point3D_ == null ? claros.common.gis.ClarosCommonGisPoint3D.Point3D.getDefaultInstance() : point3D_;
        } else {
          return point3DBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public Builder setPoint3D(claros.common.gis.ClarosCommonGisPoint3D.Point3D value) {
        if (point3DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          point3D_ = value;
          onChanged();
        } else {
          point3DBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public Builder setPoint3D(
          claros.common.gis.ClarosCommonGisPoint3D.Point3D.Builder builderForValue) {
        if (point3DBuilder_ == null) {
          point3D_ = builderForValue.build();
          onChanged();
        } else {
          point3DBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public Builder mergePoint3D(claros.common.gis.ClarosCommonGisPoint3D.Point3D value) {
        if (point3DBuilder_ == null) {
          if (point3D_ != null) {
            point3D_ =
              claros.common.gis.ClarosCommonGisPoint3D.Point3D.newBuilder(point3D_).mergeFrom(value).buildPartial();
          } else {
            point3D_ = value;
          }
          onChanged();
        } else {
          point3DBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public Builder clearPoint3D() {
        if (point3DBuilder_ == null) {
          point3D_ = null;
          onChanged();
        } else {
          point3D_ = null;
          point3DBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public claros.common.gis.ClarosCommonGisPoint3D.Point3D.Builder getPoint3DBuilder() {
        
        onChanged();
        return getPoint3DFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      public claros.common.gis.ClarosCommonGisPoint3D.Point3DOrBuilder getPoint3DOrBuilder() {
        if (point3DBuilder_ != null) {
          return point3DBuilder_.getMessageOrBuilder();
        } else {
          return point3D_ == null ?
              claros.common.gis.ClarosCommonGisPoint3D.Point3D.getDefaultInstance() : point3D_;
        }
      }
      /**
       * <code>.claros.common.gis.Point3D point3d = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisPoint3D.Point3D, claros.common.gis.ClarosCommonGisPoint3D.Point3D.Builder, claros.common.gis.ClarosCommonGisPoint3D.Point3DOrBuilder> 
          getPoint3DFieldBuilder() {
        if (point3DBuilder_ == null) {
          point3DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.gis.ClarosCommonGisPoint3D.Point3D, claros.common.gis.ClarosCommonGisPoint3D.Point3D.Builder, claros.common.gis.ClarosCommonGisPoint3D.Point3DOrBuilder>(
                  getPoint3D(),
                  getParentForChildren(),
                  isClean());
          point3D_ = null;
        }
        return point3DBuilder_;
      }

      private claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D multiPoint2D_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D, claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.Builder, claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2DOrBuilder> multiPoint2DBuilder_;
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public boolean hasMultiPoint2D() {
        return multiPoint2DBuilder_ != null || multiPoint2D_ != null;
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D getMultiPoint2D() {
        if (multiPoint2DBuilder_ == null) {
          return multiPoint2D_ == null ? claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.getDefaultInstance() : multiPoint2D_;
        } else {
          return multiPoint2DBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public Builder setMultiPoint2D(claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D value) {
        if (multiPoint2DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multiPoint2D_ = value;
          onChanged();
        } else {
          multiPoint2DBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public Builder setMultiPoint2D(
          claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.Builder builderForValue) {
        if (multiPoint2DBuilder_ == null) {
          multiPoint2D_ = builderForValue.build();
          onChanged();
        } else {
          multiPoint2DBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public Builder mergeMultiPoint2D(claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D value) {
        if (multiPoint2DBuilder_ == null) {
          if (multiPoint2D_ != null) {
            multiPoint2D_ =
              claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.newBuilder(multiPoint2D_).mergeFrom(value).buildPartial();
          } else {
            multiPoint2D_ = value;
          }
          onChanged();
        } else {
          multiPoint2DBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public Builder clearMultiPoint2D() {
        if (multiPoint2DBuilder_ == null) {
          multiPoint2D_ = null;
          onChanged();
        } else {
          multiPoint2D_ = null;
          multiPoint2DBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.Builder getMultiPoint2DBuilder() {
        
        onChanged();
        return getMultiPoint2DFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      public claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2DOrBuilder getMultiPoint2DOrBuilder() {
        if (multiPoint2DBuilder_ != null) {
          return multiPoint2DBuilder_.getMessageOrBuilder();
        } else {
          return multiPoint2D_ == null ?
              claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.getDefaultInstance() : multiPoint2D_;
        }
      }
      /**
       * <code>.claros.common.gis.MultiPoint2D multi_point2d = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D, claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.Builder, claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2DOrBuilder> 
          getMultiPoint2DFieldBuilder() {
        if (multiPoint2DBuilder_ == null) {
          multiPoint2DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D, claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2D.Builder, claros.common.gis.ClarosCommonGisMultiPoint2D.MultiPoint2DOrBuilder>(
                  getMultiPoint2D(),
                  getParentForChildren(),
                  isClean());
          multiPoint2D_ = null;
        }
        return multiPoint2DBuilder_;
      }

      private claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D multiPoint3D_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D, claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.Builder, claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3DOrBuilder> multiPoint3DBuilder_;
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public boolean hasMultiPoint3D() {
        return multiPoint3DBuilder_ != null || multiPoint3D_ != null;
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D getMultiPoint3D() {
        if (multiPoint3DBuilder_ == null) {
          return multiPoint3D_ == null ? claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.getDefaultInstance() : multiPoint3D_;
        } else {
          return multiPoint3DBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public Builder setMultiPoint3D(claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D value) {
        if (multiPoint3DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multiPoint3D_ = value;
          onChanged();
        } else {
          multiPoint3DBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public Builder setMultiPoint3D(
          claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.Builder builderForValue) {
        if (multiPoint3DBuilder_ == null) {
          multiPoint3D_ = builderForValue.build();
          onChanged();
        } else {
          multiPoint3DBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public Builder mergeMultiPoint3D(claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D value) {
        if (multiPoint3DBuilder_ == null) {
          if (multiPoint3D_ != null) {
            multiPoint3D_ =
              claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.newBuilder(multiPoint3D_).mergeFrom(value).buildPartial();
          } else {
            multiPoint3D_ = value;
          }
          onChanged();
        } else {
          multiPoint3DBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public Builder clearMultiPoint3D() {
        if (multiPoint3DBuilder_ == null) {
          multiPoint3D_ = null;
          onChanged();
        } else {
          multiPoint3D_ = null;
          multiPoint3DBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.Builder getMultiPoint3DBuilder() {
        
        onChanged();
        return getMultiPoint3DFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      public claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3DOrBuilder getMultiPoint3DOrBuilder() {
        if (multiPoint3DBuilder_ != null) {
          return multiPoint3DBuilder_.getMessageOrBuilder();
        } else {
          return multiPoint3D_ == null ?
              claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.getDefaultInstance() : multiPoint3D_;
        }
      }
      /**
       * <code>.claros.common.gis.MultiPoint3D multi_point3d = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D, claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.Builder, claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3DOrBuilder> 
          getMultiPoint3DFieldBuilder() {
        if (multiPoint3DBuilder_ == null) {
          multiPoint3DBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D, claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3D.Builder, claros.common.gis.ClarosCommonGisMultiPoint3D.MultiPoint3DOrBuilder>(
                  getMultiPoint3D(),
                  getParentForChildren(),
                  isClean());
          multiPoint3D_ = null;
        }
        return multiPoint3DBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.common.gis.GIS)
    }

    // @@protoc_insertion_point(class_scope:claros.common.gis.GIS)
    private static final claros.common.gis.ClarosCommonGisGis.GIS DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.common.gis.ClarosCommonGisGis.GIS();
    }

    public static claros.common.gis.ClarosCommonGisGis.GIS getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GIS>
        PARSER = new com.google.protobuf.AbstractParser<GIS>() {
      @java.lang.Override
      public GIS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GIS(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GIS> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GIS> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.common.gis.ClarosCommonGisGis.GIS getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_common_gis_GIS_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_common_gis_GIS_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033claros_common_gis_gis.proto\022\021claros.co" +
      "mmon.gis\032\037claros_common_gis_point2d.prot" +
      "o\032\037claros_common_gis_point3d.proto\032%clar" +
      "os_common_gis_multi_point2d.proto\032%claro" +
      "s_common_gis_multi_point3d.proto\"\317\001\n\003GIS" +
      "\022+\n\007point2d\030\001 \001(\0132\032.claros.common.gis.Po" +
      "int2D\022+\n\007point3d\030\002 \001(\0132\032.claros.common.g" +
      "is.Point3D\0226\n\rmulti_point2d\030\003 \001(\0132\037.clar" +
      "os.common.gis.MultiPoint2D\0226\n\rmulti_poin" +
      "t3d\030\004 \001(\0132\037.claros.common.gis.MultiPoint" +
      "3Db\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.common.gis.ClarosCommonGisPoint2D.getDescriptor(),
          claros.common.gis.ClarosCommonGisPoint3D.getDescriptor(),
          claros.common.gis.ClarosCommonGisMultiPoint2D.getDescriptor(),
          claros.common.gis.ClarosCommonGisMultiPoint3D.getDescriptor(),
        }, assigner);
    internal_static_claros_common_gis_GIS_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_common_gis_GIS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_common_gis_GIS_descriptor,
        new java.lang.String[] { "Point2D", "Point3D", "MultiPoint2D", "MultiPoint3D", });
    claros.common.gis.ClarosCommonGisPoint2D.getDescriptor();
    claros.common.gis.ClarosCommonGisPoint3D.getDescriptor();
    claros.common.gis.ClarosCommonGisMultiPoint2D.getDescriptor();
    claros.common.gis.ClarosCommonGisMultiPoint3D.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
