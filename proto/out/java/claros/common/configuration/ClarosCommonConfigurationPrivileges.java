// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_configuration_privileges.proto

package claros.common.configuration;

public final class ClarosCommonConfigurationPrivileges {
  private ClarosCommonConfigurationPrivileges() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PrivilegesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.common.configuration.Privileges)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */
    int getPrivilegeCount();
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */
    boolean containsPrivilege(
        java.lang.String key);
    /**
     * Use {@link #getPrivilegeMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
    getPrivilege();
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */
    java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
    getPrivilegeMap();
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */

    claros.common.configuration.ClarosCommonConfigurationRights.Rights getPrivilegeOrDefault(
        java.lang.String key,
        claros.common.configuration.ClarosCommonConfigurationRights.Rights defaultValue);
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */

    claros.common.configuration.ClarosCommonConfigurationRights.Rights getPrivilegeOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code claros.common.configuration.Privileges}
   */
  public  static final class Privileges extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.common.configuration.Privileges)
      PrivilegesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Privileges.newBuilder() to construct.
    private Privileges(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Privileges() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Privileges(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                privilege_ = com.google.protobuf.MapField.newMapField(
                    PrivilegeDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
              privilege__ = input.readMessage(
                  PrivilegeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              privilege_.getMutableMap().put(
                  privilege__.getKey(), privilege__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.common.configuration.ClarosCommonConfigurationPrivileges.internal_static_claros_common_configuration_Privileges_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetPrivilege();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.common.configuration.ClarosCommonConfigurationPrivileges.internal_static_claros_common_configuration_Privileges_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges.class, claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges.Builder.class);
    }

    public static final int PRIVILEGE_FIELD_NUMBER = 1;
    private static final class PrivilegeDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>newDefaultInstance(
                  claros.common.configuration.ClarosCommonConfigurationPrivileges.internal_static_claros_common_configuration_Privileges_PrivilegeEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  claros.common.configuration.ClarosCommonConfigurationRights.Rights.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> privilege_;
    private com.google.protobuf.MapField<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
    internalGetPrivilege() {
      if (privilege_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PrivilegeDefaultEntryHolder.defaultEntry);
      }
      return privilege_;
    }

    public int getPrivilegeCount() {
      return internalGetPrivilege().getMap().size();
    }
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */

    public boolean containsPrivilege(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPrivilege().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPrivilegeMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> getPrivilege() {
      return getPrivilegeMap();
    }
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */

    public java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> getPrivilegeMap() {
      return internalGetPrivilege().getMap();
    }
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */

    public claros.common.configuration.ClarosCommonConfigurationRights.Rights getPrivilegeOrDefault(
        java.lang.String key,
        claros.common.configuration.ClarosCommonConfigurationRights.Rights defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> map =
          internalGetPrivilege().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
     */

    public claros.common.configuration.ClarosCommonConfigurationRights.Rights getPrivilegeOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> map =
          internalGetPrivilege().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPrivilege(),
          PrivilegeDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> entry
           : internalGetPrivilege().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
        privilege__ = PrivilegeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, privilege__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges)) {
        return super.equals(obj);
      }
      claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges other = (claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges) obj;

      if (!internalGetPrivilege().equals(
          other.internalGetPrivilege())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetPrivilege().getMap().isEmpty()) {
        hash = (37 * hash) + PRIVILEGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPrivilege().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.common.configuration.Privileges}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.common.configuration.Privileges)
        claros.common.configuration.ClarosCommonConfigurationPrivileges.PrivilegesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.common.configuration.ClarosCommonConfigurationPrivileges.internal_static_claros_common_configuration_Privileges_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetPrivilege();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutablePrivilege();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.common.configuration.ClarosCommonConfigurationPrivileges.internal_static_claros_common_configuration_Privileges_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges.class, claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges.Builder.class);
      }

      // Construct using claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutablePrivilege().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.common.configuration.ClarosCommonConfigurationPrivileges.internal_static_claros_common_configuration_Privileges_descriptor;
      }

      @java.lang.Override
      public claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges getDefaultInstanceForType() {
        return claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges.getDefaultInstance();
      }

      @java.lang.Override
      public claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges build() {
        claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges buildPartial() {
        claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges result = new claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges(this);
        int from_bitField0_ = bitField0_;
        result.privilege_ = internalGetPrivilege();
        result.privilege_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges) {
          return mergeFrom((claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges other) {
        if (other == claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges.getDefaultInstance()) return this;
        internalGetMutablePrivilege().mergeFrom(
            other.internalGetPrivilege());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> privilege_;
      private com.google.protobuf.MapField<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
      internalGetPrivilege() {
        if (privilege_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PrivilegeDefaultEntryHolder.defaultEntry);
        }
        return privilege_;
      }
      private com.google.protobuf.MapField<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
      internalGetMutablePrivilege() {
        onChanged();;
        if (privilege_ == null) {
          privilege_ = com.google.protobuf.MapField.newMapField(
              PrivilegeDefaultEntryHolder.defaultEntry);
        }
        if (!privilege_.isMutable()) {
          privilege_ = privilege_.copy();
        }
        return privilege_;
      }

      public int getPrivilegeCount() {
        return internalGetPrivilege().getMap().size();
      }
      /**
       * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
       */

      public boolean containsPrivilege(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPrivilege().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPrivilegeMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> getPrivilege() {
        return getPrivilegeMap();
      }
      /**
       * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
       */

      public java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> getPrivilegeMap() {
        return internalGetPrivilege().getMap();
      }
      /**
       * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
       */

      public claros.common.configuration.ClarosCommonConfigurationRights.Rights getPrivilegeOrDefault(
          java.lang.String key,
          claros.common.configuration.ClarosCommonConfigurationRights.Rights defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> map =
            internalGetPrivilege().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
       */

      public claros.common.configuration.ClarosCommonConfigurationRights.Rights getPrivilegeOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> map =
            internalGetPrivilege().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPrivilege() {
        internalGetMutablePrivilege().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
       */

      public Builder removePrivilege(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePrivilege().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights>
      getMutablePrivilege() {
        return internalGetMutablePrivilege().getMutableMap();
      }
      /**
       * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
       */
      public Builder putPrivilege(
          java.lang.String key,
          claros.common.configuration.ClarosCommonConfigurationRights.Rights value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePrivilege().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .claros.common.configuration.Rights&gt; privilege = 1;</code>
       */

      public Builder putAllPrivilege(
          java.util.Map<java.lang.String, claros.common.configuration.ClarosCommonConfigurationRights.Rights> values) {
        internalGetMutablePrivilege().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.common.configuration.Privileges)
    }

    // @@protoc_insertion_point(class_scope:claros.common.configuration.Privileges)
    private static final claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges();
    }

    public static claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Privileges>
        PARSER = new com.google.protobuf.AbstractParser<Privileges>() {
      @java.lang.Override
      public Privileges parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Privileges(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Privileges> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Privileges> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.common.configuration.ClarosCommonConfigurationPrivileges.Privileges getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_common_configuration_Privileges_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_common_configuration_Privileges_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_common_configuration_Privileges_PrivilegeEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_common_configuration_Privileges_PrivilegeEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,claros_common_configuration_privileges" +
      ".proto\022\033claros.common.configuration\032(cla" +
      "ros_common_configuration_rights.proto\"\256\001" +
      "\n\nPrivileges\022I\n\tprivilege\030\001 \003(\01326.claros" +
      ".common.configuration.Privileges.Privile" +
      "geEntry\032U\n\016PrivilegeEntry\022\013\n\003key\030\001 \001(\t\0222" +
      "\n\005value\030\002 \001(\0132#.claros.common.configurat" +
      "ion.Rights:\0028\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.common.configuration.ClarosCommonConfigurationRights.getDescriptor(),
        }, assigner);
    internal_static_claros_common_configuration_Privileges_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_common_configuration_Privileges_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_common_configuration_Privileges_descriptor,
        new java.lang.String[] { "Privilege", });
    internal_static_claros_common_configuration_Privileges_PrivilegeEntry_descriptor =
      internal_static_claros_common_configuration_Privileges_descriptor.getNestedTypes().get(0);
    internal_static_claros_common_configuration_Privileges_PrivilegeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_common_configuration_Privileges_PrivilegeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    claros.common.configuration.ClarosCommonConfigurationRights.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
