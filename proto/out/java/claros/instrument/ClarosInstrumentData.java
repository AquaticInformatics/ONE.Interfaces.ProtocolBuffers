// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_data.proto

package claros.instrument;

public final class ClarosInstrumentData {
  private ClarosInstrumentData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InstrumentDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.instrument.InstrumentData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * In header
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     */
    java.lang.String getTenantId();
    /**
     * <pre>
     * In header
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     */
    com.google.protobuf.ByteString
        getTenantIdBytes();

    /**
     * <code>string fusionId = 2;</code>
     */
    java.lang.String getFusionId();
    /**
     * <code>string fusionId = 2;</code>
     */
    com.google.protobuf.ByteString
        getFusionIdBytes();

    /**
     * <code>.claros.instrument.InstrumentEvent events = 3;</code>
     */
    boolean hasEvents();
    /**
     * <code>.claros.instrument.InstrumentEvent events = 3;</code>
     */
    claros.instrument.ClarosInstrumentEvent.InstrumentEvent getEvents();
    /**
     * <code>.claros.instrument.InstrumentEvent events = 3;</code>
     */
    claros.instrument.ClarosInstrumentEvent.InstrumentEventOrBuilder getEventsOrBuilder();

    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement> 
        getMeasurementsList();
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement getMeasurements(int index);
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    int getMeasurementsCount();
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder> 
        getMeasurementsOrBuilderList();
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder getMeasurementsOrBuilder(
        int index);

    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */
    int getSettingsCount();
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */
    boolean containsSettings(
        java.lang.String key);
    /**
     * Use {@link #getSettingsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getSettings();
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getSettingsMap();
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */

    java.lang.String getSettingsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */

    java.lang.String getSettingsOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */
    int getStatesCount();
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */
    boolean containsStates(
        java.lang.String key);
    /**
     * Use {@link #getStatesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getStates();
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getStatesMap();
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */

    java.lang.String getStatesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */

    java.lang.String getStatesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * this is optionally set if all children share the same time
     * </pre>
     *
     * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
     */
    boolean hasInstrumentDataDateTime();
    /**
     * <pre>
     * this is optionally set if all children share the same time
     * </pre>
     *
     * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
     */
    claros.common.ClarosCommonDatetime.DateTime getInstrumentDataDateTime();
    /**
     * <pre>
     * this is optionally set if all children share the same time
     * </pre>
     *
     * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
     */
    claros.common.ClarosCommonDatetime.DateTimeOrBuilder getInstrumentDataDateTimeOrBuilder();
  }
  /**
   * Protobuf type {@code claros.instrument.InstrumentData}
   */
  public  static final class InstrumentData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.instrument.InstrumentData)
      InstrumentDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InstrumentData.newBuilder() to construct.
    private InstrumentData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InstrumentData() {
      tenantId_ = "";
      fusionId_ = "";
      measurements_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InstrumentData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              tenantId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              fusionId_ = s;
              break;
            }
            case 26: {
              claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder subBuilder = null;
              if (events_ != null) {
                subBuilder = events_.toBuilder();
              }
              events_ = input.readMessage(claros.instrument.ClarosInstrumentEvent.InstrumentEvent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(events_);
                events_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                measurements_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement>();
                mutable_bitField0_ |= 0x00000008;
              }
              measurements_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                settings_ = com.google.protobuf.MapField.newMapField(
                    SettingsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              settings__ = input.readMessage(
                  SettingsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              settings_.getMutableMap().put(
                  settings__.getKey(), settings__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                states_ = com.google.protobuf.MapField.newMapField(
                    StatesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              states__ = input.readMessage(
                  StatesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              states_.getMutableMap().put(
                  states__.getKey(), states__.getValue());
              break;
            }
            case 58: {
              claros.common.ClarosCommonDatetime.DateTime.Builder subBuilder = null;
              if (instrumentDataDateTime_ != null) {
                subBuilder = instrumentDataDateTime_.toBuilder();
              }
              instrumentDataDateTime_ = input.readMessage(claros.common.ClarosCommonDatetime.DateTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(instrumentDataDateTime_);
                instrumentDataDateTime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          measurements_ = java.util.Collections.unmodifiableList(measurements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.instrument.ClarosInstrumentData.internal_static_claros_instrument_InstrumentData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetSettings();
        case 6:
          return internalGetStates();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.instrument.ClarosInstrumentData.internal_static_claros_instrument_InstrumentData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.instrument.ClarosInstrumentData.InstrumentData.class, claros.instrument.ClarosInstrumentData.InstrumentData.Builder.class);
    }

    private int bitField0_;
    public static final int TENANTID_FIELD_NUMBER = 1;
    private volatile java.lang.Object tenantId_;
    /**
     * <pre>
     * In header
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     */
    public java.lang.String getTenantId() {
      java.lang.Object ref = tenantId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tenantId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * In header
     * </pre>
     *
     * <code>string tenantId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTenantIdBytes() {
      java.lang.Object ref = tenantId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tenantId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FUSIONID_FIELD_NUMBER = 2;
    private volatile java.lang.Object fusionId_;
    /**
     * <code>string fusionId = 2;</code>
     */
    public java.lang.String getFusionId() {
      java.lang.Object ref = fusionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fusionId_ = s;
        return s;
      }
    }
    /**
     * <code>string fusionId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFusionIdBytes() {
      java.lang.Object ref = fusionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fusionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENTS_FIELD_NUMBER = 3;
    private claros.instrument.ClarosInstrumentEvent.InstrumentEvent events_;
    /**
     * <code>.claros.instrument.InstrumentEvent events = 3;</code>
     */
    public boolean hasEvents() {
      return events_ != null;
    }
    /**
     * <code>.claros.instrument.InstrumentEvent events = 3;</code>
     */
    public claros.instrument.ClarosInstrumentEvent.InstrumentEvent getEvents() {
      return events_ == null ? claros.instrument.ClarosInstrumentEvent.InstrumentEvent.getDefaultInstance() : events_;
    }
    /**
     * <code>.claros.instrument.InstrumentEvent events = 3;</code>
     */
    public claros.instrument.ClarosInstrumentEvent.InstrumentEventOrBuilder getEventsOrBuilder() {
      return getEvents();
    }

    public static final int MEASUREMENTS_FIELD_NUMBER = 4;
    private java.util.List<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement> measurements_;
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement> getMeasurementsList() {
      return measurements_;
    }
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder> 
        getMeasurementsOrBuilderList() {
      return measurements_;
    }
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    public int getMeasurementsCount() {
      return measurements_.size();
    }
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    public claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement getMeasurements(int index) {
      return measurements_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
     */
    public claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder getMeasurementsOrBuilder(
        int index) {
      return measurements_.get(index);
    }

    public static final int SETTINGS_FIELD_NUMBER = 5;
    private static final class SettingsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  claros.instrument.ClarosInstrumentData.internal_static_claros_instrument_InstrumentData_SettingsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> settings_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetSettings() {
      if (settings_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SettingsDefaultEntryHolder.defaultEntry);
      }
      return settings_;
    }

    public int getSettingsCount() {
      return internalGetSettings().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */

    public boolean containsSettings(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetSettings().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSettingsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getSettings() {
      return getSettingsMap();
    }
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getSettingsMap() {
      return internalGetSettings().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */

    public java.lang.String getSettingsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSettings().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; settings = 5;</code>
     */

    public java.lang.String getSettingsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetSettings().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STATES_FIELD_NUMBER = 6;
    private static final class StatesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  claros.instrument.ClarosInstrumentData.internal_static_claros_instrument_InstrumentData_StatesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> states_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStates() {
      if (states_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StatesDefaultEntryHolder.defaultEntry);
      }
      return states_;
    }

    public int getStatesCount() {
      return internalGetStates().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */

    public boolean containsStates(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStates().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStatesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStates() {
      return getStatesMap();
    }
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getStatesMap() {
      return internalGetStates().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */

    public java.lang.String getStatesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStates().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; states = 6;</code>
     */

    public java.lang.String getStatesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStates().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int INSTRUMENTDATADATETIME_FIELD_NUMBER = 7;
    private claros.common.ClarosCommonDatetime.DateTime instrumentDataDateTime_;
    /**
     * <pre>
     * this is optionally set if all children share the same time
     * </pre>
     *
     * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
     */
    public boolean hasInstrumentDataDateTime() {
      return instrumentDataDateTime_ != null;
    }
    /**
     * <pre>
     * this is optionally set if all children share the same time
     * </pre>
     *
     * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
     */
    public claros.common.ClarosCommonDatetime.DateTime getInstrumentDataDateTime() {
      return instrumentDataDateTime_ == null ? claros.common.ClarosCommonDatetime.DateTime.getDefaultInstance() : instrumentDataDateTime_;
    }
    /**
     * <pre>
     * this is optionally set if all children share the same time
     * </pre>
     *
     * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
     */
    public claros.common.ClarosCommonDatetime.DateTimeOrBuilder getInstrumentDataDateTimeOrBuilder() {
      return getInstrumentDataDateTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTenantIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tenantId_);
      }
      if (!getFusionIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fusionId_);
      }
      if (events_ != null) {
        output.writeMessage(3, getEvents());
      }
      for (int i = 0; i < measurements_.size(); i++) {
        output.writeMessage(4, measurements_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSettings(),
          SettingsDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStates(),
          StatesDefaultEntryHolder.defaultEntry,
          6);
      if (instrumentDataDateTime_ != null) {
        output.writeMessage(7, getInstrumentDataDateTime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTenantIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tenantId_);
      }
      if (!getFusionIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fusionId_);
      }
      if (events_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEvents());
      }
      for (int i = 0; i < measurements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, measurements_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetSettings().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        settings__ = SettingsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, settings__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetStates().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        states__ = StatesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, states__);
      }
      if (instrumentDataDateTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getInstrumentDataDateTime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.instrument.ClarosInstrumentData.InstrumentData)) {
        return super.equals(obj);
      }
      claros.instrument.ClarosInstrumentData.InstrumentData other = (claros.instrument.ClarosInstrumentData.InstrumentData) obj;

      if (!getTenantId()
          .equals(other.getTenantId())) return false;
      if (!getFusionId()
          .equals(other.getFusionId())) return false;
      if (hasEvents() != other.hasEvents()) return false;
      if (hasEvents()) {
        if (!getEvents()
            .equals(other.getEvents())) return false;
      }
      if (!getMeasurementsList()
          .equals(other.getMeasurementsList())) return false;
      if (!internalGetSettings().equals(
          other.internalGetSettings())) return false;
      if (!internalGetStates().equals(
          other.internalGetStates())) return false;
      if (hasInstrumentDataDateTime() != other.hasInstrumentDataDateTime()) return false;
      if (hasInstrumentDataDateTime()) {
        if (!getInstrumentDataDateTime()
            .equals(other.getInstrumentDataDateTime())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TENANTID_FIELD_NUMBER;
      hash = (53 * hash) + getTenantId().hashCode();
      hash = (37 * hash) + FUSIONID_FIELD_NUMBER;
      hash = (53 * hash) + getFusionId().hashCode();
      if (hasEvents()) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEvents().hashCode();
      }
      if (getMeasurementsCount() > 0) {
        hash = (37 * hash) + MEASUREMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getMeasurementsList().hashCode();
      }
      if (!internalGetSettings().getMap().isEmpty()) {
        hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSettings().hashCode();
      }
      if (!internalGetStates().getMap().isEmpty()) {
        hash = (37 * hash) + STATES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStates().hashCode();
      }
      if (hasInstrumentDataDateTime()) {
        hash = (37 * hash) + INSTRUMENTDATADATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getInstrumentDataDateTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentData.InstrumentData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.instrument.ClarosInstrumentData.InstrumentData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.instrument.InstrumentData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.instrument.InstrumentData)
        claros.instrument.ClarosInstrumentData.InstrumentDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.instrument.ClarosInstrumentData.internal_static_claros_instrument_InstrumentData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetSettings();
          case 6:
            return internalGetStates();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableSettings();
          case 6:
            return internalGetMutableStates();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.instrument.ClarosInstrumentData.internal_static_claros_instrument_InstrumentData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.instrument.ClarosInstrumentData.InstrumentData.class, claros.instrument.ClarosInstrumentData.InstrumentData.Builder.class);
      }

      // Construct using claros.instrument.ClarosInstrumentData.InstrumentData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMeasurementsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tenantId_ = "";

        fusionId_ = "";

        if (eventsBuilder_ == null) {
          events_ = null;
        } else {
          events_ = null;
          eventsBuilder_ = null;
        }
        if (measurementsBuilder_ == null) {
          measurements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          measurementsBuilder_.clear();
        }
        internalGetMutableSettings().clear();
        internalGetMutableStates().clear();
        if (instrumentDataDateTimeBuilder_ == null) {
          instrumentDataDateTime_ = null;
        } else {
          instrumentDataDateTime_ = null;
          instrumentDataDateTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.instrument.ClarosInstrumentData.internal_static_claros_instrument_InstrumentData_descriptor;
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentData.InstrumentData getDefaultInstanceForType() {
        return claros.instrument.ClarosInstrumentData.InstrumentData.getDefaultInstance();
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentData.InstrumentData build() {
        claros.instrument.ClarosInstrumentData.InstrumentData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentData.InstrumentData buildPartial() {
        claros.instrument.ClarosInstrumentData.InstrumentData result = new claros.instrument.ClarosInstrumentData.InstrumentData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.tenantId_ = tenantId_;
        result.fusionId_ = fusionId_;
        if (eventsBuilder_ == null) {
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        if (measurementsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            measurements_ = java.util.Collections.unmodifiableList(measurements_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.measurements_ = measurements_;
        } else {
          result.measurements_ = measurementsBuilder_.build();
        }
        result.settings_ = internalGetSettings();
        result.settings_.makeImmutable();
        result.states_ = internalGetStates();
        result.states_.makeImmutable();
        if (instrumentDataDateTimeBuilder_ == null) {
          result.instrumentDataDateTime_ = instrumentDataDateTime_;
        } else {
          result.instrumentDataDateTime_ = instrumentDataDateTimeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.instrument.ClarosInstrumentData.InstrumentData) {
          return mergeFrom((claros.instrument.ClarosInstrumentData.InstrumentData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.instrument.ClarosInstrumentData.InstrumentData other) {
        if (other == claros.instrument.ClarosInstrumentData.InstrumentData.getDefaultInstance()) return this;
        if (!other.getTenantId().isEmpty()) {
          tenantId_ = other.tenantId_;
          onChanged();
        }
        if (!other.getFusionId().isEmpty()) {
          fusionId_ = other.fusionId_;
          onChanged();
        }
        if (other.hasEvents()) {
          mergeEvents(other.getEvents());
        }
        if (measurementsBuilder_ == null) {
          if (!other.measurements_.isEmpty()) {
            if (measurements_.isEmpty()) {
              measurements_ = other.measurements_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMeasurementsIsMutable();
              measurements_.addAll(other.measurements_);
            }
            onChanged();
          }
        } else {
          if (!other.measurements_.isEmpty()) {
            if (measurementsBuilder_.isEmpty()) {
              measurementsBuilder_.dispose();
              measurementsBuilder_ = null;
              measurements_ = other.measurements_;
              bitField0_ = (bitField0_ & ~0x00000008);
              measurementsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMeasurementsFieldBuilder() : null;
            } else {
              measurementsBuilder_.addAllMessages(other.measurements_);
            }
          }
        }
        internalGetMutableSettings().mergeFrom(
            other.internalGetSettings());
        internalGetMutableStates().mergeFrom(
            other.internalGetStates());
        if (other.hasInstrumentDataDateTime()) {
          mergeInstrumentDataDateTime(other.getInstrumentDataDateTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.instrument.ClarosInstrumentData.InstrumentData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.instrument.ClarosInstrumentData.InstrumentData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object tenantId_ = "";
      /**
       * <pre>
       * In header
       * </pre>
       *
       * <code>string tenantId = 1;</code>
       */
      public java.lang.String getTenantId() {
        java.lang.Object ref = tenantId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tenantId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * In header
       * </pre>
       *
       * <code>string tenantId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTenantIdBytes() {
        java.lang.Object ref = tenantId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tenantId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * In header
       * </pre>
       *
       * <code>string tenantId = 1;</code>
       */
      public Builder setTenantId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tenantId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In header
       * </pre>
       *
       * <code>string tenantId = 1;</code>
       */
      public Builder clearTenantId() {
        
        tenantId_ = getDefaultInstance().getTenantId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * In header
       * </pre>
       *
       * <code>string tenantId = 1;</code>
       */
      public Builder setTenantIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tenantId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fusionId_ = "";
      /**
       * <code>string fusionId = 2;</code>
       */
      public java.lang.String getFusionId() {
        java.lang.Object ref = fusionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fusionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fusionId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFusionIdBytes() {
        java.lang.Object ref = fusionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fusionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fusionId = 2;</code>
       */
      public Builder setFusionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fusionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fusionId = 2;</code>
       */
      public Builder clearFusionId() {
        
        fusionId_ = getDefaultInstance().getFusionId();
        onChanged();
        return this;
      }
      /**
       * <code>string fusionId = 2;</code>
       */
      public Builder setFusionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fusionId_ = value;
        onChanged();
        return this;
      }

      private claros.instrument.ClarosInstrumentEvent.InstrumentEvent events_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.ClarosInstrumentEvent.InstrumentEvent, claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder, claros.instrument.ClarosInstrumentEvent.InstrumentEventOrBuilder> eventsBuilder_;
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public boolean hasEvents() {
        return eventsBuilder_ != null || events_ != null;
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEvent.InstrumentEvent getEvents() {
        if (eventsBuilder_ == null) {
          return events_ == null ? claros.instrument.ClarosInstrumentEvent.InstrumentEvent.getDefaultInstance() : events_;
        } else {
          return eventsBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public Builder setEvents(claros.instrument.ClarosInstrumentEvent.InstrumentEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          events_ = value;
          onChanged();
        } else {
          eventsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public Builder setEvents(
          claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          events_ = builderForValue.build();
          onChanged();
        } else {
          eventsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public Builder mergeEvents(claros.instrument.ClarosInstrumentEvent.InstrumentEvent value) {
        if (eventsBuilder_ == null) {
          if (events_ != null) {
            events_ =
              claros.instrument.ClarosInstrumentEvent.InstrumentEvent.newBuilder(events_).mergeFrom(value).buildPartial();
          } else {
            events_ = value;
          }
          onChanged();
        } else {
          eventsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = null;
          onChanged();
        } else {
          events_ = null;
          eventsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder getEventsBuilder() {
        
        onChanged();
        return getEventsFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEvent.InstrumentEventOrBuilder getEventsOrBuilder() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilder();
        } else {
          return events_ == null ?
              claros.instrument.ClarosInstrumentEvent.InstrumentEvent.getDefaultInstance() : events_;
        }
      }
      /**
       * <code>.claros.instrument.InstrumentEvent events = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.ClarosInstrumentEvent.InstrumentEvent, claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder, claros.instrument.ClarosInstrumentEvent.InstrumentEventOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.instrument.ClarosInstrumentEvent.InstrumentEvent, claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder, claros.instrument.ClarosInstrumentEvent.InstrumentEventOrBuilder>(
                  getEvents(),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }

      private java.util.List<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement> measurements_ =
        java.util.Collections.emptyList();
      private void ensureMeasurementsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          measurements_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement>(measurements_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder> measurementsBuilder_;

      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement> getMeasurementsList() {
        if (measurementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(measurements_);
        } else {
          return measurementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public int getMeasurementsCount() {
        if (measurementsBuilder_ == null) {
          return measurements_.size();
        } else {
          return measurementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement getMeasurements(int index) {
        if (measurementsBuilder_ == null) {
          return measurements_.get(index);
        } else {
          return measurementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder setMeasurements(
          int index, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement value) {
        if (measurementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeasurementsIsMutable();
          measurements_.set(index, value);
          onChanged();
        } else {
          measurementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder setMeasurements(
          int index, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder builderForValue) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.set(index, builderForValue.build());
          onChanged();
        } else {
          measurementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder addMeasurements(claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement value) {
        if (measurementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeasurementsIsMutable();
          measurements_.add(value);
          onChanged();
        } else {
          measurementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder addMeasurements(
          int index, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement value) {
        if (measurementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeasurementsIsMutable();
          measurements_.add(index, value);
          onChanged();
        } else {
          measurementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder addMeasurements(
          claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder builderForValue) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.add(builderForValue.build());
          onChanged();
        } else {
          measurementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder addMeasurements(
          int index, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder builderForValue) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.add(index, builderForValue.build());
          onChanged();
        } else {
          measurementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder addAllMeasurements(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement> values) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, measurements_);
          onChanged();
        } else {
          measurementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder clearMeasurements() {
        if (measurementsBuilder_ == null) {
          measurements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          measurementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public Builder removeMeasurements(int index) {
        if (measurementsBuilder_ == null) {
          ensureMeasurementsIsMutable();
          measurements_.remove(index);
          onChanged();
        } else {
          measurementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder getMeasurementsBuilder(
          int index) {
        return getMeasurementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder getMeasurementsOrBuilder(
          int index) {
        if (measurementsBuilder_ == null) {
          return measurements_.get(index);  } else {
          return measurementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder> 
           getMeasurementsOrBuilderList() {
        if (measurementsBuilder_ != null) {
          return measurementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(measurements_);
        }
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder addMeasurementsBuilder() {
        return getMeasurementsFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder addMeasurementsBuilder(
          int index) {
        return getMeasurementsFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.InstrumentMeasurement measurements = 4;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder> 
           getMeasurementsBuilderList() {
        return getMeasurementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder> 
          getMeasurementsFieldBuilder() {
        if (measurementsBuilder_ == null) {
          measurementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurement.Builder, claros.instrument.ClarosInstrumentMeasurement.InstrumentMeasurementOrBuilder>(
                  measurements_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          measurements_ = null;
        }
        return measurementsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> settings_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetSettings() {
        if (settings_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SettingsDefaultEntryHolder.defaultEntry);
        }
        return settings_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableSettings() {
        onChanged();;
        if (settings_ == null) {
          settings_ = com.google.protobuf.MapField.newMapField(
              SettingsDefaultEntryHolder.defaultEntry);
        }
        if (!settings_.isMutable()) {
          settings_ = settings_.copy();
        }
        return settings_;
      }

      public int getSettingsCount() {
        return internalGetSettings().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; settings = 5;</code>
       */

      public boolean containsSettings(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetSettings().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSettingsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getSettings() {
        return getSettingsMap();
      }
      /**
       * <code>map&lt;string, string&gt; settings = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getSettingsMap() {
        return internalGetSettings().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; settings = 5;</code>
       */

      public java.lang.String getSettingsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetSettings().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; settings = 5;</code>
       */

      public java.lang.String getSettingsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetSettings().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSettings() {
        internalGetMutableSettings().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; settings = 5;</code>
       */

      public Builder removeSettings(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableSettings().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableSettings() {
        return internalGetMutableSettings().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; settings = 5;</code>
       */
      public Builder putSettings(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableSettings().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; settings = 5;</code>
       */

      public Builder putAllSettings(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableSettings().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> states_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetStates() {
        if (states_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StatesDefaultEntryHolder.defaultEntry);
        }
        return states_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableStates() {
        onChanged();;
        if (states_ == null) {
          states_ = com.google.protobuf.MapField.newMapField(
              StatesDefaultEntryHolder.defaultEntry);
        }
        if (!states_.isMutable()) {
          states_ = states_.copy();
        }
        return states_;
      }

      public int getStatesCount() {
        return internalGetStates().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; states = 6;</code>
       */

      public boolean containsStates(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetStates().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStatesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getStates() {
        return getStatesMap();
      }
      /**
       * <code>map&lt;string, string&gt; states = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getStatesMap() {
        return internalGetStates().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; states = 6;</code>
       */

      public java.lang.String getStatesOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStates().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; states = 6;</code>
       */

      public java.lang.String getStatesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetStates().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStates() {
        internalGetMutableStates().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; states = 6;</code>
       */

      public Builder removeStates(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStates().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableStates() {
        return internalGetMutableStates().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; states = 6;</code>
       */
      public Builder putStates(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableStates().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; states = 6;</code>
       */

      public Builder putAllStates(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableStates().getMutableMap()
            .putAll(values);
        return this;
      }

      private claros.common.ClarosCommonDatetime.DateTime instrumentDataDateTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.ClarosCommonDatetime.DateTime, claros.common.ClarosCommonDatetime.DateTime.Builder, claros.common.ClarosCommonDatetime.DateTimeOrBuilder> instrumentDataDateTimeBuilder_;
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public boolean hasInstrumentDataDateTime() {
        return instrumentDataDateTimeBuilder_ != null || instrumentDataDateTime_ != null;
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public claros.common.ClarosCommonDatetime.DateTime getInstrumentDataDateTime() {
        if (instrumentDataDateTimeBuilder_ == null) {
          return instrumentDataDateTime_ == null ? claros.common.ClarosCommonDatetime.DateTime.getDefaultInstance() : instrumentDataDateTime_;
        } else {
          return instrumentDataDateTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public Builder setInstrumentDataDateTime(claros.common.ClarosCommonDatetime.DateTime value) {
        if (instrumentDataDateTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          instrumentDataDateTime_ = value;
          onChanged();
        } else {
          instrumentDataDateTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public Builder setInstrumentDataDateTime(
          claros.common.ClarosCommonDatetime.DateTime.Builder builderForValue) {
        if (instrumentDataDateTimeBuilder_ == null) {
          instrumentDataDateTime_ = builderForValue.build();
          onChanged();
        } else {
          instrumentDataDateTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public Builder mergeInstrumentDataDateTime(claros.common.ClarosCommonDatetime.DateTime value) {
        if (instrumentDataDateTimeBuilder_ == null) {
          if (instrumentDataDateTime_ != null) {
            instrumentDataDateTime_ =
              claros.common.ClarosCommonDatetime.DateTime.newBuilder(instrumentDataDateTime_).mergeFrom(value).buildPartial();
          } else {
            instrumentDataDateTime_ = value;
          }
          onChanged();
        } else {
          instrumentDataDateTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public Builder clearInstrumentDataDateTime() {
        if (instrumentDataDateTimeBuilder_ == null) {
          instrumentDataDateTime_ = null;
          onChanged();
        } else {
          instrumentDataDateTime_ = null;
          instrumentDataDateTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public claros.common.ClarosCommonDatetime.DateTime.Builder getInstrumentDataDateTimeBuilder() {
        
        onChanged();
        return getInstrumentDataDateTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      public claros.common.ClarosCommonDatetime.DateTimeOrBuilder getInstrumentDataDateTimeOrBuilder() {
        if (instrumentDataDateTimeBuilder_ != null) {
          return instrumentDataDateTimeBuilder_.getMessageOrBuilder();
        } else {
          return instrumentDataDateTime_ == null ?
              claros.common.ClarosCommonDatetime.DateTime.getDefaultInstance() : instrumentDataDateTime_;
        }
      }
      /**
       * <pre>
       * this is optionally set if all children share the same time
       * </pre>
       *
       * <code>.claros.common.DateTime instrumentDataDateTime = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.ClarosCommonDatetime.DateTime, claros.common.ClarosCommonDatetime.DateTime.Builder, claros.common.ClarosCommonDatetime.DateTimeOrBuilder> 
          getInstrumentDataDateTimeFieldBuilder() {
        if (instrumentDataDateTimeBuilder_ == null) {
          instrumentDataDateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.ClarosCommonDatetime.DateTime, claros.common.ClarosCommonDatetime.DateTime.Builder, claros.common.ClarosCommonDatetime.DateTimeOrBuilder>(
                  getInstrumentDataDateTime(),
                  getParentForChildren(),
                  isClean());
          instrumentDataDateTime_ = null;
        }
        return instrumentDataDateTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.instrument.InstrumentData)
    }

    // @@protoc_insertion_point(class_scope:claros.instrument.InstrumentData)
    private static final claros.instrument.ClarosInstrumentData.InstrumentData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.instrument.ClarosInstrumentData.InstrumentData();
    }

    public static claros.instrument.ClarosInstrumentData.InstrumentData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InstrumentData>
        PARSER = new com.google.protobuf.AbstractParser<InstrumentData>() {
      @java.lang.Override
      public InstrumentData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstrumentData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InstrumentData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InstrumentData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.instrument.ClarosInstrumentData.InstrumentData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_instrument_InstrumentData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_instrument_InstrumentData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_instrument_InstrumentData_SettingsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_instrument_InstrumentData_SettingsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_instrument_InstrumentData_StatesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_instrument_InstrumentData_StatesEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034claros_instrument_data.proto\022\021claros.i" +
      "nstrument\032\035claros_instrument_event.proto" +
      "\032#claros_instrument_measurement.proto\032\034c" +
      "laros_common_datetime.proto\"\303\003\n\016Instrume" +
      "ntData\022\020\n\010tenantId\030\001 \001(\t\022\020\n\010fusionId\030\002 \001" +
      "(\t\0222\n\006events\030\003 \001(\0132\".claros.instrument.I" +
      "nstrumentEvent\022>\n\014measurements\030\004 \003(\0132(.c" +
      "laros.instrument.InstrumentMeasurement\022A" +
      "\n\010settings\030\005 \003(\0132/.claros.instrument.Ins" +
      "trumentData.SettingsEntry\022=\n\006states\030\006 \003(" +
      "\0132-.claros.instrument.InstrumentData.Sta" +
      "tesEntry\0227\n\026instrumentDataDateTime\030\007 \001(\013" +
      "2\027.claros.common.DateTime\032/\n\rSettingsEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032-\n\013St" +
      "atesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028" +
      "\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.instrument.ClarosInstrumentEvent.getDescriptor(),
          claros.instrument.ClarosInstrumentMeasurement.getDescriptor(),
          claros.common.ClarosCommonDatetime.getDescriptor(),
        }, assigner);
    internal_static_claros_instrument_InstrumentData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_instrument_InstrumentData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_instrument_InstrumentData_descriptor,
        new java.lang.String[] { "TenantId", "FusionId", "Events", "Measurements", "Settings", "States", "InstrumentDataDateTime", });
    internal_static_claros_instrument_InstrumentData_SettingsEntry_descriptor =
      internal_static_claros_instrument_InstrumentData_descriptor.getNestedTypes().get(0);
    internal_static_claros_instrument_InstrumentData_SettingsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_instrument_InstrumentData_SettingsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_claros_instrument_InstrumentData_StatesEntry_descriptor =
      internal_static_claros_instrument_InstrumentData_descriptor.getNestedTypes().get(1);
    internal_static_claros_instrument_InstrumentData_StatesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_instrument_InstrumentData_StatesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    claros.instrument.ClarosInstrumentEvent.getDescriptor();
    claros.instrument.ClarosInstrumentMeasurement.getDescriptor();
    claros.common.ClarosCommonDatetime.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
