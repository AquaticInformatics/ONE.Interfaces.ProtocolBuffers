// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_measurement_data.proto

package claros.instrument.measurement;

public final class ClarosInstrumentMeasurementData {
  private ClarosInstrumentMeasurementData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InstrumentMeasurementDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.instrument.measurement.InstrumentMeasurementData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     * </pre>
     *
     * <code>string instrumentMeasurementId = 1;</code>
     */
    java.lang.String getInstrumentMeasurementId();
    /**
     * <pre>
     *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     * </pre>
     *
     * <code>string instrumentMeasurementId = 1;</code>
     */
    com.google.protobuf.ByteString
        getInstrumentMeasurementIdBytes();

    /**
     * <code>int32 channel = 2;</code>
     */
    int getChannel();

    /**
     * <pre>
     * This is optional and may be populated to
     * </pre>
     *
     * <code>string fusionId = 3;</code>
     */
    java.lang.String getFusionId();
    /**
     * <pre>
     * This is optional and may be populated to
     * </pre>
     *
     * <code>string fusionId = 3;</code>
     */
    com.google.protobuf.ByteString
        getFusionIdBytes();

    /**
     * <code>.claros.common.core.Measurement measurement = 4;</code>
     */
    boolean hasMeasurement();
    /**
     * <code>.claros.common.core.Measurement measurement = 4;</code>
     */
    claros.common.core.ClarosCommonCoreMeasurement.Measurement getMeasurement();
    /**
     * <code>.claros.common.core.Measurement measurement = 4;</code>
     */
    claros.common.core.ClarosCommonCoreMeasurement.MeasurementOrBuilder getMeasurementOrBuilder();

    /**
     * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     */
    boolean hasSupportingMeasurements();
    /**
     * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     */
    claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData getSupportingMeasurements();
    /**
     * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     */
    claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementDataOrBuilder getSupportingMeasurementsOrBuilder();

    /**
     * <code>.claros.common.gis.GIS gis = 6;</code>
     */
    boolean hasGis();
    /**
     * <code>.claros.common.gis.GIS gis = 6;</code>
     */
    claros.common.gis.ClarosCommonGisGis.GIS getGis();
    /**
     * <code>.claros.common.gis.GIS gis = 6;</code>
     */
    claros.common.gis.ClarosCommonGisGis.GISOrBuilder getGisOrBuilder();

    /**
     * <code>string measurementDataExtended = 7;</code>
     */
    java.lang.String getMeasurementDataExtended();
    /**
     * <code>string measurementDataExtended = 7;</code>
     */
    com.google.protobuf.ByteString
        getMeasurementDataExtendedBytes();

    /**
     * <pre>
     * Clean up ??????
     * </pre>
     *
     * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     */
    boolean hasMeasurementEvent();
    /**
     * <pre>
     * Clean up ??????
     * </pre>
     *
     * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     */
    claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData getMeasurementEvent();
    /**
     * <pre>
     * Clean up ??????
     * </pre>
     *
     * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     */
    claros.instrument.event.ClarosInstrumentEventData.InstrumentEventDataOrBuilder getMeasurementEventOrBuilder();
  }
  /**
   * Protobuf type {@code claros.instrument.measurement.InstrumentMeasurementData}
   */
  public  static final class InstrumentMeasurementData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.instrument.measurement.InstrumentMeasurementData)
      InstrumentMeasurementDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InstrumentMeasurementData.newBuilder() to construct.
    private InstrumentMeasurementData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InstrumentMeasurementData() {
      instrumentMeasurementId_ = "";
      fusionId_ = "";
      measurementDataExtended_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InstrumentMeasurementData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              instrumentMeasurementId_ = s;
              break;
            }
            case 16: {

              channel_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              fusionId_ = s;
              break;
            }
            case 34: {
              claros.common.core.ClarosCommonCoreMeasurement.Measurement.Builder subBuilder = null;
              if (measurement_ != null) {
                subBuilder = measurement_.toBuilder();
              }
              measurement_ = input.readMessage(claros.common.core.ClarosCommonCoreMeasurement.Measurement.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(measurement_);
                measurement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder subBuilder = null;
              if (supportingMeasurements_ != null) {
                subBuilder = supportingMeasurements_.toBuilder();
              }
              supportingMeasurements_ = input.readMessage(claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(supportingMeasurements_);
                supportingMeasurements_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              claros.common.gis.ClarosCommonGisGis.GIS.Builder subBuilder = null;
              if (gis_ != null) {
                subBuilder = gis_.toBuilder();
              }
              gis_ = input.readMessage(claros.common.gis.ClarosCommonGisGis.GIS.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gis_);
                gis_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              measurementDataExtended_ = s;
              break;
            }
            case 66: {
              claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.Builder subBuilder = null;
              if (measurementEvent_ != null) {
                subBuilder = measurementEvent_.toBuilder();
              }
              measurementEvent_ = input.readMessage(claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(measurementEvent_);
                measurementEvent_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.instrument.measurement.ClarosInstrumentMeasurementData.internal_static_claros_instrument_measurement_InstrumentMeasurementData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.instrument.measurement.ClarosInstrumentMeasurementData.internal_static_claros_instrument_measurement_InstrumentMeasurementData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.class, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder.class);
    }

    public static final int INSTRUMENTMEASUREMENTID_FIELD_NUMBER = 1;
    private volatile java.lang.Object instrumentMeasurementId_;
    /**
     * <pre>
     *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     * </pre>
     *
     * <code>string instrumentMeasurementId = 1;</code>
     */
    public java.lang.String getInstrumentMeasurementId() {
      java.lang.Object ref = instrumentMeasurementId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        instrumentMeasurementId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     * </pre>
     *
     * <code>string instrumentMeasurementId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getInstrumentMeasurementIdBytes() {
      java.lang.Object ref = instrumentMeasurementId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        instrumentMeasurementId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    public static final int FUSIONID_FIELD_NUMBER = 3;
    private volatile java.lang.Object fusionId_;
    /**
     * <pre>
     * This is optional and may be populated to
     * </pre>
     *
     * <code>string fusionId = 3;</code>
     */
    public java.lang.String getFusionId() {
      java.lang.Object ref = fusionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fusionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * This is optional and may be populated to
     * </pre>
     *
     * <code>string fusionId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFusionIdBytes() {
      java.lang.Object ref = fusionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fusionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEASUREMENT_FIELD_NUMBER = 4;
    private claros.common.core.ClarosCommonCoreMeasurement.Measurement measurement_;
    /**
     * <code>.claros.common.core.Measurement measurement = 4;</code>
     */
    public boolean hasMeasurement() {
      return measurement_ != null;
    }
    /**
     * <code>.claros.common.core.Measurement measurement = 4;</code>
     */
    public claros.common.core.ClarosCommonCoreMeasurement.Measurement getMeasurement() {
      return measurement_ == null ? claros.common.core.ClarosCommonCoreMeasurement.Measurement.getDefaultInstance() : measurement_;
    }
    /**
     * <code>.claros.common.core.Measurement measurement = 4;</code>
     */
    public claros.common.core.ClarosCommonCoreMeasurement.MeasurementOrBuilder getMeasurementOrBuilder() {
      return getMeasurement();
    }

    public static final int SUPPORTINGMEASUREMENTS_FIELD_NUMBER = 5;
    private claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData supportingMeasurements_;
    /**
     * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     */
    public boolean hasSupportingMeasurements() {
      return supportingMeasurements_ != null;
    }
    /**
     * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     */
    public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData getSupportingMeasurements() {
      return supportingMeasurements_ == null ? claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.getDefaultInstance() : supportingMeasurements_;
    }
    /**
     * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     */
    public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementDataOrBuilder getSupportingMeasurementsOrBuilder() {
      return getSupportingMeasurements();
    }

    public static final int GIS_FIELD_NUMBER = 6;
    private claros.common.gis.ClarosCommonGisGis.GIS gis_;
    /**
     * <code>.claros.common.gis.GIS gis = 6;</code>
     */
    public boolean hasGis() {
      return gis_ != null;
    }
    /**
     * <code>.claros.common.gis.GIS gis = 6;</code>
     */
    public claros.common.gis.ClarosCommonGisGis.GIS getGis() {
      return gis_ == null ? claros.common.gis.ClarosCommonGisGis.GIS.getDefaultInstance() : gis_;
    }
    /**
     * <code>.claros.common.gis.GIS gis = 6;</code>
     */
    public claros.common.gis.ClarosCommonGisGis.GISOrBuilder getGisOrBuilder() {
      return getGis();
    }

    public static final int MEASUREMENTDATAEXTENDED_FIELD_NUMBER = 7;
    private volatile java.lang.Object measurementDataExtended_;
    /**
     * <code>string measurementDataExtended = 7;</code>
     */
    public java.lang.String getMeasurementDataExtended() {
      java.lang.Object ref = measurementDataExtended_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        measurementDataExtended_ = s;
        return s;
      }
    }
    /**
     * <code>string measurementDataExtended = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMeasurementDataExtendedBytes() {
      java.lang.Object ref = measurementDataExtended_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        measurementDataExtended_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEASUREMENTEVENT_FIELD_NUMBER = 8;
    private claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData measurementEvent_;
    /**
     * <pre>
     * Clean up ??????
     * </pre>
     *
     * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     */
    public boolean hasMeasurementEvent() {
      return measurementEvent_ != null;
    }
    /**
     * <pre>
     * Clean up ??????
     * </pre>
     *
     * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     */
    public claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData getMeasurementEvent() {
      return measurementEvent_ == null ? claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.getDefaultInstance() : measurementEvent_;
    }
    /**
     * <pre>
     * Clean up ??????
     * </pre>
     *
     * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     */
    public claros.instrument.event.ClarosInstrumentEventData.InstrumentEventDataOrBuilder getMeasurementEventOrBuilder() {
      return getMeasurementEvent();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getInstrumentMeasurementIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, instrumentMeasurementId_);
      }
      if (channel_ != 0) {
        output.writeInt32(2, channel_);
      }
      if (!getFusionIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fusionId_);
      }
      if (measurement_ != null) {
        output.writeMessage(4, getMeasurement());
      }
      if (supportingMeasurements_ != null) {
        output.writeMessage(5, getSupportingMeasurements());
      }
      if (gis_ != null) {
        output.writeMessage(6, getGis());
      }
      if (!getMeasurementDataExtendedBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, measurementDataExtended_);
      }
      if (measurementEvent_ != null) {
        output.writeMessage(8, getMeasurementEvent());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getInstrumentMeasurementIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, instrumentMeasurementId_);
      }
      if (channel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (!getFusionIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fusionId_);
      }
      if (measurement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMeasurement());
      }
      if (supportingMeasurements_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSupportingMeasurements());
      }
      if (gis_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getGis());
      }
      if (!getMeasurementDataExtendedBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, measurementDataExtended_);
      }
      if (measurementEvent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getMeasurementEvent());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData)) {
        return super.equals(obj);
      }
      claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData other = (claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData) obj;

      if (!getInstrumentMeasurementId()
          .equals(other.getInstrumentMeasurementId())) return false;
      if (getChannel()
          != other.getChannel()) return false;
      if (!getFusionId()
          .equals(other.getFusionId())) return false;
      if (hasMeasurement() != other.hasMeasurement()) return false;
      if (hasMeasurement()) {
        if (!getMeasurement()
            .equals(other.getMeasurement())) return false;
      }
      if (hasSupportingMeasurements() != other.hasSupportingMeasurements()) return false;
      if (hasSupportingMeasurements()) {
        if (!getSupportingMeasurements()
            .equals(other.getSupportingMeasurements())) return false;
      }
      if (hasGis() != other.hasGis()) return false;
      if (hasGis()) {
        if (!getGis()
            .equals(other.getGis())) return false;
      }
      if (!getMeasurementDataExtended()
          .equals(other.getMeasurementDataExtended())) return false;
      if (hasMeasurementEvent() != other.hasMeasurementEvent()) return false;
      if (hasMeasurementEvent()) {
        if (!getMeasurementEvent()
            .equals(other.getMeasurementEvent())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INSTRUMENTMEASUREMENTID_FIELD_NUMBER;
      hash = (53 * hash) + getInstrumentMeasurementId().hashCode();
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getChannel();
      hash = (37 * hash) + FUSIONID_FIELD_NUMBER;
      hash = (53 * hash) + getFusionId().hashCode();
      if (hasMeasurement()) {
        hash = (37 * hash) + MEASUREMENT_FIELD_NUMBER;
        hash = (53 * hash) + getMeasurement().hashCode();
      }
      if (hasSupportingMeasurements()) {
        hash = (37 * hash) + SUPPORTINGMEASUREMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getSupportingMeasurements().hashCode();
      }
      if (hasGis()) {
        hash = (37 * hash) + GIS_FIELD_NUMBER;
        hash = (53 * hash) + getGis().hashCode();
      }
      hash = (37 * hash) + MEASUREMENTDATAEXTENDED_FIELD_NUMBER;
      hash = (53 * hash) + getMeasurementDataExtended().hashCode();
      if (hasMeasurementEvent()) {
        hash = (37 * hash) + MEASUREMENTEVENT_FIELD_NUMBER;
        hash = (53 * hash) + getMeasurementEvent().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.instrument.measurement.InstrumentMeasurementData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.instrument.measurement.InstrumentMeasurementData)
        claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.instrument.measurement.ClarosInstrumentMeasurementData.internal_static_claros_instrument_measurement_InstrumentMeasurementData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.instrument.measurement.ClarosInstrumentMeasurementData.internal_static_claros_instrument_measurement_InstrumentMeasurementData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.class, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder.class);
      }

      // Construct using claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        instrumentMeasurementId_ = "";

        channel_ = 0;

        fusionId_ = "";

        if (measurementBuilder_ == null) {
          measurement_ = null;
        } else {
          measurement_ = null;
          measurementBuilder_ = null;
        }
        if (supportingMeasurementsBuilder_ == null) {
          supportingMeasurements_ = null;
        } else {
          supportingMeasurements_ = null;
          supportingMeasurementsBuilder_ = null;
        }
        if (gisBuilder_ == null) {
          gis_ = null;
        } else {
          gis_ = null;
          gisBuilder_ = null;
        }
        measurementDataExtended_ = "";

        if (measurementEventBuilder_ == null) {
          measurementEvent_ = null;
        } else {
          measurementEvent_ = null;
          measurementEventBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.instrument.measurement.ClarosInstrumentMeasurementData.internal_static_claros_instrument_measurement_InstrumentMeasurementData_descriptor;
      }

      @java.lang.Override
      public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData getDefaultInstanceForType() {
        return claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.getDefaultInstance();
      }

      @java.lang.Override
      public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData build() {
        claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData buildPartial() {
        claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData result = new claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData(this);
        result.instrumentMeasurementId_ = instrumentMeasurementId_;
        result.channel_ = channel_;
        result.fusionId_ = fusionId_;
        if (measurementBuilder_ == null) {
          result.measurement_ = measurement_;
        } else {
          result.measurement_ = measurementBuilder_.build();
        }
        if (supportingMeasurementsBuilder_ == null) {
          result.supportingMeasurements_ = supportingMeasurements_;
        } else {
          result.supportingMeasurements_ = supportingMeasurementsBuilder_.build();
        }
        if (gisBuilder_ == null) {
          result.gis_ = gis_;
        } else {
          result.gis_ = gisBuilder_.build();
        }
        result.measurementDataExtended_ = measurementDataExtended_;
        if (measurementEventBuilder_ == null) {
          result.measurementEvent_ = measurementEvent_;
        } else {
          result.measurementEvent_ = measurementEventBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData) {
          return mergeFrom((claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData other) {
        if (other == claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.getDefaultInstance()) return this;
        if (!other.getInstrumentMeasurementId().isEmpty()) {
          instrumentMeasurementId_ = other.instrumentMeasurementId_;
          onChanged();
        }
        if (other.getChannel() != 0) {
          setChannel(other.getChannel());
        }
        if (!other.getFusionId().isEmpty()) {
          fusionId_ = other.fusionId_;
          onChanged();
        }
        if (other.hasMeasurement()) {
          mergeMeasurement(other.getMeasurement());
        }
        if (other.hasSupportingMeasurements()) {
          mergeSupportingMeasurements(other.getSupportingMeasurements());
        }
        if (other.hasGis()) {
          mergeGis(other.getGis());
        }
        if (!other.getMeasurementDataExtended().isEmpty()) {
          measurementDataExtended_ = other.measurementDataExtended_;
          onChanged();
        }
        if (other.hasMeasurementEvent()) {
          mergeMeasurementEvent(other.getMeasurementEvent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object instrumentMeasurementId_ = "";
      /**
       * <pre>
       *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
       * </pre>
       *
       * <code>string instrumentMeasurementId = 1;</code>
       */
      public java.lang.String getInstrumentMeasurementId() {
        java.lang.Object ref = instrumentMeasurementId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          instrumentMeasurementId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
       * </pre>
       *
       * <code>string instrumentMeasurementId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getInstrumentMeasurementIdBytes() {
        java.lang.Object ref = instrumentMeasurementId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          instrumentMeasurementId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
       * </pre>
       *
       * <code>string instrumentMeasurementId = 1;</code>
       */
      public Builder setInstrumentMeasurementId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        instrumentMeasurementId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
       * </pre>
       *
       * <code>string instrumentMeasurementId = 1;</code>
       */
      public Builder clearInstrumentMeasurementId() {
        
        instrumentMeasurementId_ = getDefaultInstance().getInstrumentMeasurementId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
       * </pre>
       *
       * <code>string instrumentMeasurementId = 1;</code>
       */
      public Builder setInstrumentMeasurementIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        instrumentMeasurementId_ = value;
        onChanged();
        return this;
      }

      private int channel_ ;
      /**
       * <code>int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        
        channel_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fusionId_ = "";
      /**
       * <pre>
       * This is optional and may be populated to
       * </pre>
       *
       * <code>string fusionId = 3;</code>
       */
      public java.lang.String getFusionId() {
        java.lang.Object ref = fusionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fusionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * This is optional and may be populated to
       * </pre>
       *
       * <code>string fusionId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFusionIdBytes() {
        java.lang.Object ref = fusionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fusionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * This is optional and may be populated to
       * </pre>
       *
       * <code>string fusionId = 3;</code>
       */
      public Builder setFusionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fusionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is optional and may be populated to
       * </pre>
       *
       * <code>string fusionId = 3;</code>
       */
      public Builder clearFusionId() {
        
        fusionId_ = getDefaultInstance().getFusionId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is optional and may be populated to
       * </pre>
       *
       * <code>string fusionId = 3;</code>
       */
      public Builder setFusionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fusionId_ = value;
        onChanged();
        return this;
      }

      private claros.common.core.ClarosCommonCoreMeasurement.Measurement measurement_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreMeasurement.Measurement, claros.common.core.ClarosCommonCoreMeasurement.Measurement.Builder, claros.common.core.ClarosCommonCoreMeasurement.MeasurementOrBuilder> measurementBuilder_;
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public boolean hasMeasurement() {
        return measurementBuilder_ != null || measurement_ != null;
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public claros.common.core.ClarosCommonCoreMeasurement.Measurement getMeasurement() {
        if (measurementBuilder_ == null) {
          return measurement_ == null ? claros.common.core.ClarosCommonCoreMeasurement.Measurement.getDefaultInstance() : measurement_;
        } else {
          return measurementBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public Builder setMeasurement(claros.common.core.ClarosCommonCoreMeasurement.Measurement value) {
        if (measurementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          measurement_ = value;
          onChanged();
        } else {
          measurementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public Builder setMeasurement(
          claros.common.core.ClarosCommonCoreMeasurement.Measurement.Builder builderForValue) {
        if (measurementBuilder_ == null) {
          measurement_ = builderForValue.build();
          onChanged();
        } else {
          measurementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public Builder mergeMeasurement(claros.common.core.ClarosCommonCoreMeasurement.Measurement value) {
        if (measurementBuilder_ == null) {
          if (measurement_ != null) {
            measurement_ =
              claros.common.core.ClarosCommonCoreMeasurement.Measurement.newBuilder(measurement_).mergeFrom(value).buildPartial();
          } else {
            measurement_ = value;
          }
          onChanged();
        } else {
          measurementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public Builder clearMeasurement() {
        if (measurementBuilder_ == null) {
          measurement_ = null;
          onChanged();
        } else {
          measurement_ = null;
          measurementBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public claros.common.core.ClarosCommonCoreMeasurement.Measurement.Builder getMeasurementBuilder() {
        
        onChanged();
        return getMeasurementFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      public claros.common.core.ClarosCommonCoreMeasurement.MeasurementOrBuilder getMeasurementOrBuilder() {
        if (measurementBuilder_ != null) {
          return measurementBuilder_.getMessageOrBuilder();
        } else {
          return measurement_ == null ?
              claros.common.core.ClarosCommonCoreMeasurement.Measurement.getDefaultInstance() : measurement_;
        }
      }
      /**
       * <code>.claros.common.core.Measurement measurement = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.core.ClarosCommonCoreMeasurement.Measurement, claros.common.core.ClarosCommonCoreMeasurement.Measurement.Builder, claros.common.core.ClarosCommonCoreMeasurement.MeasurementOrBuilder> 
          getMeasurementFieldBuilder() {
        if (measurementBuilder_ == null) {
          measurementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.core.ClarosCommonCoreMeasurement.Measurement, claros.common.core.ClarosCommonCoreMeasurement.Measurement.Builder, claros.common.core.ClarosCommonCoreMeasurement.MeasurementOrBuilder>(
                  getMeasurement(),
                  getParentForChildren(),
                  isClean());
          measurement_ = null;
        }
        return measurementBuilder_;
      }

      private claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData supportingMeasurements_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementDataOrBuilder> supportingMeasurementsBuilder_;
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public boolean hasSupportingMeasurements() {
        return supportingMeasurementsBuilder_ != null || supportingMeasurements_ != null;
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData getSupportingMeasurements() {
        if (supportingMeasurementsBuilder_ == null) {
          return supportingMeasurements_ == null ? claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.getDefaultInstance() : supportingMeasurements_;
        } else {
          return supportingMeasurementsBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public Builder setSupportingMeasurements(claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData value) {
        if (supportingMeasurementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          supportingMeasurements_ = value;
          onChanged();
        } else {
          supportingMeasurementsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public Builder setSupportingMeasurements(
          claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder builderForValue) {
        if (supportingMeasurementsBuilder_ == null) {
          supportingMeasurements_ = builderForValue.build();
          onChanged();
        } else {
          supportingMeasurementsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public Builder mergeSupportingMeasurements(claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData value) {
        if (supportingMeasurementsBuilder_ == null) {
          if (supportingMeasurements_ != null) {
            supportingMeasurements_ =
              claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.newBuilder(supportingMeasurements_).mergeFrom(value).buildPartial();
          } else {
            supportingMeasurements_ = value;
          }
          onChanged();
        } else {
          supportingMeasurementsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public Builder clearSupportingMeasurements() {
        if (supportingMeasurementsBuilder_ == null) {
          supportingMeasurements_ = null;
          onChanged();
        } else {
          supportingMeasurements_ = null;
          supportingMeasurementsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder getSupportingMeasurementsBuilder() {
        
        onChanged();
        return getSupportingMeasurementsFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementDataOrBuilder getSupportingMeasurementsOrBuilder() {
        if (supportingMeasurementsBuilder_ != null) {
          return supportingMeasurementsBuilder_.getMessageOrBuilder();
        } else {
          return supportingMeasurements_ == null ?
              claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.getDefaultInstance() : supportingMeasurements_;
        }
      }
      /**
       * <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementDataOrBuilder> 
          getSupportingMeasurementsFieldBuilder() {
        if (supportingMeasurementsBuilder_ == null) {
          supportingMeasurementsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData.Builder, claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementDataOrBuilder>(
                  getSupportingMeasurements(),
                  getParentForChildren(),
                  isClean());
          supportingMeasurements_ = null;
        }
        return supportingMeasurementsBuilder_;
      }

      private claros.common.gis.ClarosCommonGisGis.GIS gis_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisGis.GIS, claros.common.gis.ClarosCommonGisGis.GIS.Builder, claros.common.gis.ClarosCommonGisGis.GISOrBuilder> gisBuilder_;
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public boolean hasGis() {
        return gisBuilder_ != null || gis_ != null;
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public claros.common.gis.ClarosCommonGisGis.GIS getGis() {
        if (gisBuilder_ == null) {
          return gis_ == null ? claros.common.gis.ClarosCommonGisGis.GIS.getDefaultInstance() : gis_;
        } else {
          return gisBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public Builder setGis(claros.common.gis.ClarosCommonGisGis.GIS value) {
        if (gisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gis_ = value;
          onChanged();
        } else {
          gisBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public Builder setGis(
          claros.common.gis.ClarosCommonGisGis.GIS.Builder builderForValue) {
        if (gisBuilder_ == null) {
          gis_ = builderForValue.build();
          onChanged();
        } else {
          gisBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public Builder mergeGis(claros.common.gis.ClarosCommonGisGis.GIS value) {
        if (gisBuilder_ == null) {
          if (gis_ != null) {
            gis_ =
              claros.common.gis.ClarosCommonGisGis.GIS.newBuilder(gis_).mergeFrom(value).buildPartial();
          } else {
            gis_ = value;
          }
          onChanged();
        } else {
          gisBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public Builder clearGis() {
        if (gisBuilder_ == null) {
          gis_ = null;
          onChanged();
        } else {
          gis_ = null;
          gisBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public claros.common.gis.ClarosCommonGisGis.GIS.Builder getGisBuilder() {
        
        onChanged();
        return getGisFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      public claros.common.gis.ClarosCommonGisGis.GISOrBuilder getGisOrBuilder() {
        if (gisBuilder_ != null) {
          return gisBuilder_.getMessageOrBuilder();
        } else {
          return gis_ == null ?
              claros.common.gis.ClarosCommonGisGis.GIS.getDefaultInstance() : gis_;
        }
      }
      /**
       * <code>.claros.common.gis.GIS gis = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.gis.ClarosCommonGisGis.GIS, claros.common.gis.ClarosCommonGisGis.GIS.Builder, claros.common.gis.ClarosCommonGisGis.GISOrBuilder> 
          getGisFieldBuilder() {
        if (gisBuilder_ == null) {
          gisBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.gis.ClarosCommonGisGis.GIS, claros.common.gis.ClarosCommonGisGis.GIS.Builder, claros.common.gis.ClarosCommonGisGis.GISOrBuilder>(
                  getGis(),
                  getParentForChildren(),
                  isClean());
          gis_ = null;
        }
        return gisBuilder_;
      }

      private java.lang.Object measurementDataExtended_ = "";
      /**
       * <code>string measurementDataExtended = 7;</code>
       */
      public java.lang.String getMeasurementDataExtended() {
        java.lang.Object ref = measurementDataExtended_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          measurementDataExtended_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string measurementDataExtended = 7;</code>
       */
      public com.google.protobuf.ByteString
          getMeasurementDataExtendedBytes() {
        java.lang.Object ref = measurementDataExtended_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          measurementDataExtended_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string measurementDataExtended = 7;</code>
       */
      public Builder setMeasurementDataExtended(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        measurementDataExtended_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string measurementDataExtended = 7;</code>
       */
      public Builder clearMeasurementDataExtended() {
        
        measurementDataExtended_ = getDefaultInstance().getMeasurementDataExtended();
        onChanged();
        return this;
      }
      /**
       * <code>string measurementDataExtended = 7;</code>
       */
      public Builder setMeasurementDataExtendedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        measurementDataExtended_ = value;
        onChanged();
        return this;
      }

      private claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData measurementEvent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData, claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.Builder, claros.instrument.event.ClarosInstrumentEventData.InstrumentEventDataOrBuilder> measurementEventBuilder_;
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public boolean hasMeasurementEvent() {
        return measurementEventBuilder_ != null || measurementEvent_ != null;
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData getMeasurementEvent() {
        if (measurementEventBuilder_ == null) {
          return measurementEvent_ == null ? claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.getDefaultInstance() : measurementEvent_;
        } else {
          return measurementEventBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public Builder setMeasurementEvent(claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData value) {
        if (measurementEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          measurementEvent_ = value;
          onChanged();
        } else {
          measurementEventBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public Builder setMeasurementEvent(
          claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.Builder builderForValue) {
        if (measurementEventBuilder_ == null) {
          measurementEvent_ = builderForValue.build();
          onChanged();
        } else {
          measurementEventBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public Builder mergeMeasurementEvent(claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData value) {
        if (measurementEventBuilder_ == null) {
          if (measurementEvent_ != null) {
            measurementEvent_ =
              claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.newBuilder(measurementEvent_).mergeFrom(value).buildPartial();
          } else {
            measurementEvent_ = value;
          }
          onChanged();
        } else {
          measurementEventBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public Builder clearMeasurementEvent() {
        if (measurementEventBuilder_ == null) {
          measurementEvent_ = null;
          onChanged();
        } else {
          measurementEvent_ = null;
          measurementEventBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.Builder getMeasurementEventBuilder() {
        
        onChanged();
        return getMeasurementEventFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      public claros.instrument.event.ClarosInstrumentEventData.InstrumentEventDataOrBuilder getMeasurementEventOrBuilder() {
        if (measurementEventBuilder_ != null) {
          return measurementEventBuilder_.getMessageOrBuilder();
        } else {
          return measurementEvent_ == null ?
              claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.getDefaultInstance() : measurementEvent_;
        }
      }
      /**
       * <pre>
       * Clean up ??????
       * </pre>
       *
       * <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData, claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.Builder, claros.instrument.event.ClarosInstrumentEventData.InstrumentEventDataOrBuilder> 
          getMeasurementEventFieldBuilder() {
        if (measurementEventBuilder_ == null) {
          measurementEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData, claros.instrument.event.ClarosInstrumentEventData.InstrumentEventData.Builder, claros.instrument.event.ClarosInstrumentEventData.InstrumentEventDataOrBuilder>(
                  getMeasurementEvent(),
                  getParentForChildren(),
                  isClean());
          measurementEvent_ = null;
        }
        return measurementEventBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.instrument.measurement.InstrumentMeasurementData)
    }

    // @@protoc_insertion_point(class_scope:claros.instrument.measurement.InstrumentMeasurementData)
    private static final claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData();
    }

    public static claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InstrumentMeasurementData>
        PARSER = new com.google.protobuf.AbstractParser<InstrumentMeasurementData>() {
      @java.lang.Override
      public InstrumentMeasurementData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstrumentMeasurementData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InstrumentMeasurementData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InstrumentMeasurementData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.instrument.measurement.ClarosInstrumentMeasurementData.InstrumentMeasurementData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_instrument_measurement_InstrumentMeasurementData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_instrument_measurement_InstrumentMeasurementData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(claros_instrument_measurement_data.pro" +
      "to\022\035claros.instrument.measurement\032$claro" +
      "s_common_core_measurement.proto\032\"claros_" +
      "instrument_event_data.proto\032\033claros_comm" +
      "on_gis_gis.proto\"\375\002\n\031InstrumentMeasureme" +
      "ntData\022\037\n\027instrumentMeasurementId\030\001 \001(\t\022" +
      "\017\n\007channel\030\002 \001(\005\022\020\n\010fusionId\030\003 \001(\t\0224\n\013me" +
      "asurement\030\004 \001(\0132\037.claros.common.core.Mea" +
      "surement\022X\n\026supportingMeasurements\030\005 \001(\013" +
      "28.claros.instrument.measurement.Instrum" +
      "entMeasurementData\022#\n\003gis\030\006 \001(\0132\026.claros" +
      ".common.gis.GIS\022\037\n\027measurementDataExtend" +
      "ed\030\007 \001(\t\022F\n\020measurementEvent\030\010 \001(\0132,.cla" +
      "ros.instrument.event.InstrumentEventData" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.common.core.ClarosCommonCoreMeasurement.getDescriptor(),
          claros.instrument.event.ClarosInstrumentEventData.getDescriptor(),
          claros.common.gis.ClarosCommonGisGis.getDescriptor(),
        }, assigner);
    internal_static_claros_instrument_measurement_InstrumentMeasurementData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_instrument_measurement_InstrumentMeasurementData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_instrument_measurement_InstrumentMeasurementData_descriptor,
        new java.lang.String[] { "InstrumentMeasurementId", "Channel", "FusionId", "Measurement", "SupportingMeasurements", "Gis", "MeasurementDataExtended", "MeasurementEvent", });
    claros.common.core.ClarosCommonCoreMeasurement.getDescriptor();
    claros.instrument.event.ClarosInstrumentEventData.getDescriptor();
    claros.common.gis.ClarosCommonGisGis.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
