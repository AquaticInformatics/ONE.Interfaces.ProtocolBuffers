// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_event.proto

package claros.instrument;

public final class ClarosInstrumentEvent {
  private ClarosInstrumentEvent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InstrumentEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.instrument.InstrumentEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentCalibration.Calibration> 
        getCalibrationsList();
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    claros.instrument.ClarosInstrumentCalibration.Calibration getCalibrations(int index);
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    int getCalibrationsCount();
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder> 
        getCalibrationsOrBuilderList();
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder getCalibrationsOrBuilder(
        int index);

    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> 
        getErrorsList();
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getErrors(int index);
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    int getErrorsCount();
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getErrorsOrBuilderList();
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getErrorsOrBuilder(
        int index);

    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> 
        getInfoList();
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getInfo(int index);
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    int getInfoCount();
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getInfoOrBuilderList();
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getInfoOrBuilder(
        int index);

    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> 
        getLimitsList();
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getLimits(int index);
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    int getLimitsCount();
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getLimitsOrBuilderList();
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getLimitsOrBuilder(
        int index);

    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> 
        getRemindersList();
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getReminders(int index);
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    int getRemindersCount();
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getRemindersOrBuilderList();
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getRemindersOrBuilder(
        int index);

    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> 
        getWarningsList();
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getWarnings(int index);
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    int getWarningsCount();
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getWarningsOrBuilderList();
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getWarningsOrBuilder(
        int index);

    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentPrognosys.PrognosysData> 
        getPrognosysList();
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    claros.instrument.ClarosInstrumentPrognosys.PrognosysData getPrognosys(int index);
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    int getPrognosysCount();
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder> 
        getPrognosysOrBuilderList();
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder getPrognosysOrBuilder(
        int index);

    /**
     * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
     */
    boolean hasEventDateTime();
    /**
     * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
     */
    claros.common.ClarosCommonDatetime.DateTime getEventDateTime();
    /**
     * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
     */
    claros.common.ClarosCommonDatetime.DateTimeOrBuilder getEventDateTimeOrBuilder();
  }
  /**
   * Protobuf type {@code claros.instrument.InstrumentEvent}
   */
  public  static final class InstrumentEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.instrument.InstrumentEvent)
      InstrumentEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InstrumentEvent.newBuilder() to construct.
    private InstrumentEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InstrumentEvent() {
      calibrations_ = java.util.Collections.emptyList();
      errors_ = java.util.Collections.emptyList();
      info_ = java.util.Collections.emptyList();
      limits_ = java.util.Collections.emptyList();
      reminders_ = java.util.Collections.emptyList();
      warnings_ = java.util.Collections.emptyList();
      prognosys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InstrumentEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                calibrations_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentCalibration.Calibration>();
                mutable_bitField0_ |= 0x00000001;
              }
              calibrations_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentCalibration.Calibration.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                errors_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>();
                mutable_bitField0_ |= 0x00000002;
              }
              errors_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                info_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>();
                mutable_bitField0_ |= 0x00000004;
              }
              info_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                limits_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>();
                mutable_bitField0_ |= 0x00000008;
              }
              limits_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                reminders_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>();
                mutable_bitField0_ |= 0x00000010;
              }
              reminders_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                warnings_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>();
                mutable_bitField0_ |= 0x00000020;
              }
              warnings_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                prognosys_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentPrognosys.PrognosysData>();
                mutable_bitField0_ |= 0x00000040;
              }
              prognosys_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentPrognosys.PrognosysData.parser(), extensionRegistry));
              break;
            }
            case 66: {
              claros.common.ClarosCommonDatetime.DateTime.Builder subBuilder = null;
              if (eventDateTime_ != null) {
                subBuilder = eventDateTime_.toBuilder();
              }
              eventDateTime_ = input.readMessage(claros.common.ClarosCommonDatetime.DateTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(eventDateTime_);
                eventDateTime_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          calibrations_ = java.util.Collections.unmodifiableList(calibrations_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          info_ = java.util.Collections.unmodifiableList(info_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          limits_ = java.util.Collections.unmodifiableList(limits_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          reminders_ = java.util.Collections.unmodifiableList(reminders_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          warnings_ = java.util.Collections.unmodifiableList(warnings_);
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          prognosys_ = java.util.Collections.unmodifiableList(prognosys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.instrument.ClarosInstrumentEvent.internal_static_claros_instrument_InstrumentEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.instrument.ClarosInstrumentEvent.internal_static_claros_instrument_InstrumentEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.instrument.ClarosInstrumentEvent.InstrumentEvent.class, claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder.class);
    }

    private int bitField0_;
    public static final int CALIBRATIONS_FIELD_NUMBER = 1;
    private java.util.List<claros.instrument.ClarosInstrumentCalibration.Calibration> calibrations_;
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentCalibration.Calibration> getCalibrationsList() {
      return calibrations_;
    }
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder> 
        getCalibrationsOrBuilderList() {
      return calibrations_;
    }
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    public int getCalibrationsCount() {
      return calibrations_.size();
    }
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    public claros.instrument.ClarosInstrumentCalibration.Calibration getCalibrations(int index) {
      return calibrations_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
     */
    public claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder getCalibrationsOrBuilder(
        int index) {
      return calibrations_.get(index);
    }

    public static final int ERRORS_FIELD_NUMBER = 2;
    private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> errors_;
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getErrorsList() {
      return errors_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getErrorsOrBuilderList() {
      return errors_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    public int getErrorsCount() {
      return errors_.size();
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getErrors(int index) {
      return errors_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getErrorsOrBuilder(
        int index) {
      return errors_.get(index);
    }

    public static final int INFO_FIELD_NUMBER = 3;
    private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> info_;
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getInfoList() {
      return info_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getInfoOrBuilderList() {
      return info_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    public int getInfoCount() {
      return info_.size();
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getInfo(int index) {
      return info_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getInfoOrBuilder(
        int index) {
      return info_.get(index);
    }

    public static final int LIMITS_FIELD_NUMBER = 4;
    private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> limits_;
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getLimitsList() {
      return limits_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getLimitsOrBuilderList() {
      return limits_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    public int getLimitsCount() {
      return limits_.size();
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getLimits(int index) {
      return limits_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getLimitsOrBuilder(
        int index) {
      return limits_.get(index);
    }

    public static final int REMINDERS_FIELD_NUMBER = 5;
    private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> reminders_;
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getRemindersList() {
      return reminders_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getRemindersOrBuilderList() {
      return reminders_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    public int getRemindersCount() {
      return reminders_.size();
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getReminders(int index) {
      return reminders_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getRemindersOrBuilder(
        int index) {
      return reminders_.get(index);
    }

    public static final int WARNINGS_FIELD_NUMBER = 6;
    private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> warnings_;
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getWarningsList() {
      return warnings_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
        getWarningsOrBuilderList() {
      return warnings_;
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    public int getWarningsCount() {
      return warnings_.size();
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getWarnings(int index) {
      return warnings_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
     */
    public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getWarningsOrBuilder(
        int index) {
      return warnings_.get(index);
    }

    public static final int PROGNOSYS_FIELD_NUMBER = 7;
    private java.util.List<claros.instrument.ClarosInstrumentPrognosys.PrognosysData> prognosys_;
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentPrognosys.PrognosysData> getPrognosysList() {
      return prognosys_;
    }
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder> 
        getPrognosysOrBuilderList() {
      return prognosys_;
    }
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    public int getPrognosysCount() {
      return prognosys_.size();
    }
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    public claros.instrument.ClarosInstrumentPrognosys.PrognosysData getPrognosys(int index) {
      return prognosys_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
     */
    public claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder getPrognosysOrBuilder(
        int index) {
      return prognosys_.get(index);
    }

    public static final int EVENTDATETIME_FIELD_NUMBER = 8;
    private claros.common.ClarosCommonDatetime.DateTime eventDateTime_;
    /**
     * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
     */
    public boolean hasEventDateTime() {
      return eventDateTime_ != null;
    }
    /**
     * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
     */
    public claros.common.ClarosCommonDatetime.DateTime getEventDateTime() {
      return eventDateTime_ == null ? claros.common.ClarosCommonDatetime.DateTime.getDefaultInstance() : eventDateTime_;
    }
    /**
     * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
     */
    public claros.common.ClarosCommonDatetime.DateTimeOrBuilder getEventDateTimeOrBuilder() {
      return getEventDateTime();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < calibrations_.size(); i++) {
        output.writeMessage(1, calibrations_.get(i));
      }
      for (int i = 0; i < errors_.size(); i++) {
        output.writeMessage(2, errors_.get(i));
      }
      for (int i = 0; i < info_.size(); i++) {
        output.writeMessage(3, info_.get(i));
      }
      for (int i = 0; i < limits_.size(); i++) {
        output.writeMessage(4, limits_.get(i));
      }
      for (int i = 0; i < reminders_.size(); i++) {
        output.writeMessage(5, reminders_.get(i));
      }
      for (int i = 0; i < warnings_.size(); i++) {
        output.writeMessage(6, warnings_.get(i));
      }
      for (int i = 0; i < prognosys_.size(); i++) {
        output.writeMessage(7, prognosys_.get(i));
      }
      if (eventDateTime_ != null) {
        output.writeMessage(8, getEventDateTime());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < calibrations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calibrations_.get(i));
      }
      for (int i = 0; i < errors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, errors_.get(i));
      }
      for (int i = 0; i < info_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, info_.get(i));
      }
      for (int i = 0; i < limits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, limits_.get(i));
      }
      for (int i = 0; i < reminders_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, reminders_.get(i));
      }
      for (int i = 0; i < warnings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, warnings_.get(i));
      }
      for (int i = 0; i < prognosys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, prognosys_.get(i));
      }
      if (eventDateTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getEventDateTime());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.instrument.ClarosInstrumentEvent.InstrumentEvent)) {
        return super.equals(obj);
      }
      claros.instrument.ClarosInstrumentEvent.InstrumentEvent other = (claros.instrument.ClarosInstrumentEvent.InstrumentEvent) obj;

      if (!getCalibrationsList()
          .equals(other.getCalibrationsList())) return false;
      if (!getErrorsList()
          .equals(other.getErrorsList())) return false;
      if (!getInfoList()
          .equals(other.getInfoList())) return false;
      if (!getLimitsList()
          .equals(other.getLimitsList())) return false;
      if (!getRemindersList()
          .equals(other.getRemindersList())) return false;
      if (!getWarningsList()
          .equals(other.getWarningsList())) return false;
      if (!getPrognosysList()
          .equals(other.getPrognosysList())) return false;
      if (hasEventDateTime() != other.hasEventDateTime()) return false;
      if (hasEventDateTime()) {
        if (!getEventDateTime()
            .equals(other.getEventDateTime())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCalibrationsCount() > 0) {
        hash = (37 * hash) + CALIBRATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getCalibrationsList().hashCode();
      }
      if (getErrorsCount() > 0) {
        hash = (37 * hash) + ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getErrorsList().hashCode();
      }
      if (getInfoCount() > 0) {
        hash = (37 * hash) + INFO_FIELD_NUMBER;
        hash = (53 * hash) + getInfoList().hashCode();
      }
      if (getLimitsCount() > 0) {
        hash = (37 * hash) + LIMITS_FIELD_NUMBER;
        hash = (53 * hash) + getLimitsList().hashCode();
      }
      if (getRemindersCount() > 0) {
        hash = (37 * hash) + REMINDERS_FIELD_NUMBER;
        hash = (53 * hash) + getRemindersList().hashCode();
      }
      if (getWarningsCount() > 0) {
        hash = (37 * hash) + WARNINGS_FIELD_NUMBER;
        hash = (53 * hash) + getWarningsList().hashCode();
      }
      if (getPrognosysCount() > 0) {
        hash = (37 * hash) + PROGNOSYS_FIELD_NUMBER;
        hash = (53 * hash) + getPrognosysList().hashCode();
      }
      if (hasEventDateTime()) {
        hash = (37 * hash) + EVENTDATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getEventDateTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.instrument.ClarosInstrumentEvent.InstrumentEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.instrument.InstrumentEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.instrument.InstrumentEvent)
        claros.instrument.ClarosInstrumentEvent.InstrumentEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.instrument.ClarosInstrumentEvent.internal_static_claros_instrument_InstrumentEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.instrument.ClarosInstrumentEvent.internal_static_claros_instrument_InstrumentEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.instrument.ClarosInstrumentEvent.InstrumentEvent.class, claros.instrument.ClarosInstrumentEvent.InstrumentEvent.Builder.class);
      }

      // Construct using claros.instrument.ClarosInstrumentEvent.InstrumentEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCalibrationsFieldBuilder();
          getErrorsFieldBuilder();
          getInfoFieldBuilder();
          getLimitsFieldBuilder();
          getRemindersFieldBuilder();
          getWarningsFieldBuilder();
          getPrognosysFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (calibrationsBuilder_ == null) {
          calibrations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          calibrationsBuilder_.clear();
        }
        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          errorsBuilder_.clear();
        }
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          infoBuilder_.clear();
        }
        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          limitsBuilder_.clear();
        }
        if (remindersBuilder_ == null) {
          reminders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          remindersBuilder_.clear();
        }
        if (warningsBuilder_ == null) {
          warnings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          warningsBuilder_.clear();
        }
        if (prognosysBuilder_ == null) {
          prognosys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          prognosysBuilder_.clear();
        }
        if (eventDateTimeBuilder_ == null) {
          eventDateTime_ = null;
        } else {
          eventDateTime_ = null;
          eventDateTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.instrument.ClarosInstrumentEvent.internal_static_claros_instrument_InstrumentEvent_descriptor;
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentEvent.InstrumentEvent getDefaultInstanceForType() {
        return claros.instrument.ClarosInstrumentEvent.InstrumentEvent.getDefaultInstance();
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentEvent.InstrumentEvent build() {
        claros.instrument.ClarosInstrumentEvent.InstrumentEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentEvent.InstrumentEvent buildPartial() {
        claros.instrument.ClarosInstrumentEvent.InstrumentEvent result = new claros.instrument.ClarosInstrumentEvent.InstrumentEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (calibrationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            calibrations_ = java.util.Collections.unmodifiableList(calibrations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.calibrations_ = calibrations_;
        } else {
          result.calibrations_ = calibrationsBuilder_.build();
        }
        if (errorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.errors_ = errors_;
        } else {
          result.errors_ = errorsBuilder_.build();
        }
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            info_ = java.util.Collections.unmodifiableList(info_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        if (limitsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            limits_ = java.util.Collections.unmodifiableList(limits_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.limits_ = limits_;
        } else {
          result.limits_ = limitsBuilder_.build();
        }
        if (remindersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            reminders_ = java.util.Collections.unmodifiableList(reminders_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.reminders_ = reminders_;
        } else {
          result.reminders_ = remindersBuilder_.build();
        }
        if (warningsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            warnings_ = java.util.Collections.unmodifiableList(warnings_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.warnings_ = warnings_;
        } else {
          result.warnings_ = warningsBuilder_.build();
        }
        if (prognosysBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            prognosys_ = java.util.Collections.unmodifiableList(prognosys_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.prognosys_ = prognosys_;
        } else {
          result.prognosys_ = prognosysBuilder_.build();
        }
        if (eventDateTimeBuilder_ == null) {
          result.eventDateTime_ = eventDateTime_;
        } else {
          result.eventDateTime_ = eventDateTimeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.instrument.ClarosInstrumentEvent.InstrumentEvent) {
          return mergeFrom((claros.instrument.ClarosInstrumentEvent.InstrumentEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.instrument.ClarosInstrumentEvent.InstrumentEvent other) {
        if (other == claros.instrument.ClarosInstrumentEvent.InstrumentEvent.getDefaultInstance()) return this;
        if (calibrationsBuilder_ == null) {
          if (!other.calibrations_.isEmpty()) {
            if (calibrations_.isEmpty()) {
              calibrations_ = other.calibrations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCalibrationsIsMutable();
              calibrations_.addAll(other.calibrations_);
            }
            onChanged();
          }
        } else {
          if (!other.calibrations_.isEmpty()) {
            if (calibrationsBuilder_.isEmpty()) {
              calibrationsBuilder_.dispose();
              calibrationsBuilder_ = null;
              calibrations_ = other.calibrations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              calibrationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCalibrationsFieldBuilder() : null;
            } else {
              calibrationsBuilder_.addAllMessages(other.calibrations_);
            }
          }
        }
        if (errorsBuilder_ == null) {
          if (!other.errors_.isEmpty()) {
            if (errors_.isEmpty()) {
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureErrorsIsMutable();
              errors_.addAll(other.errors_);
            }
            onChanged();
          }
        } else {
          if (!other.errors_.isEmpty()) {
            if (errorsBuilder_.isEmpty()) {
              errorsBuilder_.dispose();
              errorsBuilder_ = null;
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              errorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getErrorsFieldBuilder() : null;
            } else {
              errorsBuilder_.addAllMessages(other.errors_);
            }
          }
        }
        if (infoBuilder_ == null) {
          if (!other.info_.isEmpty()) {
            if (info_.isEmpty()) {
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureInfoIsMutable();
              info_.addAll(other.info_);
            }
            onChanged();
          }
        } else {
          if (!other.info_.isEmpty()) {
            if (infoBuilder_.isEmpty()) {
              infoBuilder_.dispose();
              infoBuilder_ = null;
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000004);
              infoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInfoFieldBuilder() : null;
            } else {
              infoBuilder_.addAllMessages(other.info_);
            }
          }
        }
        if (limitsBuilder_ == null) {
          if (!other.limits_.isEmpty()) {
            if (limits_.isEmpty()) {
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureLimitsIsMutable();
              limits_.addAll(other.limits_);
            }
            onChanged();
          }
        } else {
          if (!other.limits_.isEmpty()) {
            if (limitsBuilder_.isEmpty()) {
              limitsBuilder_.dispose();
              limitsBuilder_ = null;
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000008);
              limitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLimitsFieldBuilder() : null;
            } else {
              limitsBuilder_.addAllMessages(other.limits_);
            }
          }
        }
        if (remindersBuilder_ == null) {
          if (!other.reminders_.isEmpty()) {
            if (reminders_.isEmpty()) {
              reminders_ = other.reminders_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRemindersIsMutable();
              reminders_.addAll(other.reminders_);
            }
            onChanged();
          }
        } else {
          if (!other.reminders_.isEmpty()) {
            if (remindersBuilder_.isEmpty()) {
              remindersBuilder_.dispose();
              remindersBuilder_ = null;
              reminders_ = other.reminders_;
              bitField0_ = (bitField0_ & ~0x00000010);
              remindersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRemindersFieldBuilder() : null;
            } else {
              remindersBuilder_.addAllMessages(other.reminders_);
            }
          }
        }
        if (warningsBuilder_ == null) {
          if (!other.warnings_.isEmpty()) {
            if (warnings_.isEmpty()) {
              warnings_ = other.warnings_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureWarningsIsMutable();
              warnings_.addAll(other.warnings_);
            }
            onChanged();
          }
        } else {
          if (!other.warnings_.isEmpty()) {
            if (warningsBuilder_.isEmpty()) {
              warningsBuilder_.dispose();
              warningsBuilder_ = null;
              warnings_ = other.warnings_;
              bitField0_ = (bitField0_ & ~0x00000020);
              warningsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWarningsFieldBuilder() : null;
            } else {
              warningsBuilder_.addAllMessages(other.warnings_);
            }
          }
        }
        if (prognosysBuilder_ == null) {
          if (!other.prognosys_.isEmpty()) {
            if (prognosys_.isEmpty()) {
              prognosys_ = other.prognosys_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensurePrognosysIsMutable();
              prognosys_.addAll(other.prognosys_);
            }
            onChanged();
          }
        } else {
          if (!other.prognosys_.isEmpty()) {
            if (prognosysBuilder_.isEmpty()) {
              prognosysBuilder_.dispose();
              prognosysBuilder_ = null;
              prognosys_ = other.prognosys_;
              bitField0_ = (bitField0_ & ~0x00000040);
              prognosysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPrognosysFieldBuilder() : null;
            } else {
              prognosysBuilder_.addAllMessages(other.prognosys_);
            }
          }
        }
        if (other.hasEventDateTime()) {
          mergeEventDateTime(other.getEventDateTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.instrument.ClarosInstrumentEvent.InstrumentEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.instrument.ClarosInstrumentEvent.InstrumentEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<claros.instrument.ClarosInstrumentCalibration.Calibration> calibrations_ =
        java.util.Collections.emptyList();
      private void ensureCalibrationsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          calibrations_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentCalibration.Calibration>(calibrations_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentCalibration.Calibration, claros.instrument.ClarosInstrumentCalibration.Calibration.Builder, claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder> calibrationsBuilder_;

      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentCalibration.Calibration> getCalibrationsList() {
        if (calibrationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calibrations_);
        } else {
          return calibrationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public int getCalibrationsCount() {
        if (calibrationsBuilder_ == null) {
          return calibrations_.size();
        } else {
          return calibrationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public claros.instrument.ClarosInstrumentCalibration.Calibration getCalibrations(int index) {
        if (calibrationsBuilder_ == null) {
          return calibrations_.get(index);
        } else {
          return calibrationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder setCalibrations(
          int index, claros.instrument.ClarosInstrumentCalibration.Calibration value) {
        if (calibrationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibrationsIsMutable();
          calibrations_.set(index, value);
          onChanged();
        } else {
          calibrationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder setCalibrations(
          int index, claros.instrument.ClarosInstrumentCalibration.Calibration.Builder builderForValue) {
        if (calibrationsBuilder_ == null) {
          ensureCalibrationsIsMutable();
          calibrations_.set(index, builderForValue.build());
          onChanged();
        } else {
          calibrationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder addCalibrations(claros.instrument.ClarosInstrumentCalibration.Calibration value) {
        if (calibrationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibrationsIsMutable();
          calibrations_.add(value);
          onChanged();
        } else {
          calibrationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder addCalibrations(
          int index, claros.instrument.ClarosInstrumentCalibration.Calibration value) {
        if (calibrationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalibrationsIsMutable();
          calibrations_.add(index, value);
          onChanged();
        } else {
          calibrationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder addCalibrations(
          claros.instrument.ClarosInstrumentCalibration.Calibration.Builder builderForValue) {
        if (calibrationsBuilder_ == null) {
          ensureCalibrationsIsMutable();
          calibrations_.add(builderForValue.build());
          onChanged();
        } else {
          calibrationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder addCalibrations(
          int index, claros.instrument.ClarosInstrumentCalibration.Calibration.Builder builderForValue) {
        if (calibrationsBuilder_ == null) {
          ensureCalibrationsIsMutable();
          calibrations_.add(index, builderForValue.build());
          onChanged();
        } else {
          calibrationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder addAllCalibrations(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentCalibration.Calibration> values) {
        if (calibrationsBuilder_ == null) {
          ensureCalibrationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, calibrations_);
          onChanged();
        } else {
          calibrationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder clearCalibrations() {
        if (calibrationsBuilder_ == null) {
          calibrations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          calibrationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public Builder removeCalibrations(int index) {
        if (calibrationsBuilder_ == null) {
          ensureCalibrationsIsMutable();
          calibrations_.remove(index);
          onChanged();
        } else {
          calibrationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public claros.instrument.ClarosInstrumentCalibration.Calibration.Builder getCalibrationsBuilder(
          int index) {
        return getCalibrationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder getCalibrationsOrBuilder(
          int index) {
        if (calibrationsBuilder_ == null) {
          return calibrations_.get(index);  } else {
          return calibrationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder> 
           getCalibrationsOrBuilderList() {
        if (calibrationsBuilder_ != null) {
          return calibrationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calibrations_);
        }
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public claros.instrument.ClarosInstrumentCalibration.Calibration.Builder addCalibrationsBuilder() {
        return getCalibrationsFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentCalibration.Calibration.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public claros.instrument.ClarosInstrumentCalibration.Calibration.Builder addCalibrationsBuilder(
          int index) {
        return getCalibrationsFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentCalibration.Calibration.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.Calibration calibrations = 1;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentCalibration.Calibration.Builder> 
           getCalibrationsBuilderList() {
        return getCalibrationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentCalibration.Calibration, claros.instrument.ClarosInstrumentCalibration.Calibration.Builder, claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder> 
          getCalibrationsFieldBuilder() {
        if (calibrationsBuilder_ == null) {
          calibrationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentCalibration.Calibration, claros.instrument.ClarosInstrumentCalibration.Calibration.Builder, claros.instrument.ClarosInstrumentCalibration.CalibrationOrBuilder>(
                  calibrations_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          calibrations_ = null;
        }
        return calibrationsBuilder_;
      }

      private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> errors_ =
        java.util.Collections.emptyList();
      private void ensureErrorsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          errors_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>(errors_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> errorsBuilder_;

      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getErrorsList() {
        if (errorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(errors_);
        } else {
          return errorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public int getErrorsCount() {
        if (errorsBuilder_ == null) {
          return errors_.size();
        } else {
          return errorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getErrors(int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);
        } else {
          return errorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder setErrors(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.set(index, value);
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder setErrors(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.set(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder addErrors(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder addErrors(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(index, value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder addErrors(
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder addErrors(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder addAllErrors(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> values) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, errors_);
          onChanged();
        } else {
          errorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder clearErrors() {
        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          errorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public Builder removeErrors(int index) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.remove(index);
          onChanged();
        } else {
          errorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder getErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getErrorsOrBuilder(
          int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);  } else {
          return errorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
           getErrorsOrBuilderList() {
        if (errorsBuilder_ != null) {
          return errorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(errors_);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addErrorsBuilder() {
        return getErrorsFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData errors = 2;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder> 
           getErrorsBuilderList() {
        return getErrorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
          getErrorsFieldBuilder() {
        if (errorsBuilder_ == null) {
          errorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder>(
                  errors_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          errors_ = null;
        }
        return errorsBuilder_;
      }

      private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> info_ =
        java.util.Collections.emptyList();
      private void ensureInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          info_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>(info_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> infoBuilder_;

      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getInfoList() {
        if (infoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(info_);
        } else {
          return infoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public int getInfoCount() {
        if (infoBuilder_ == null) {
          return info_.size();
        } else {
          return infoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getInfo(int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);
        } else {
          return infoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder setInfo(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.set(index, value);
          onChanged();
        } else {
          infoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder setInfo(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.set(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder addInfo(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(value);
          onChanged();
        } else {
          infoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder addInfo(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(index, value);
          onChanged();
        } else {
          infoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder addInfo(
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder addInfo(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder addAllInfo(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> values) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, info_);
          onChanged();
        } else {
          infoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public Builder removeInfo(int index) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.remove(index);
          onChanged();
        } else {
          infoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder getInfoBuilder(
          int index) {
        return getInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getInfoOrBuilder(
          int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);  } else {
          return infoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
           getInfoOrBuilderList() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(info_);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addInfoBuilder() {
        return getInfoFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addInfoBuilder(
          int index) {
        return getInfoFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData info = 3;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder> 
           getInfoBuilderList() {
        return getInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder>(
                  info_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> limits_ =
        java.util.Collections.emptyList();
      private void ensureLimitsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          limits_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>(limits_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> limitsBuilder_;

      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getLimitsList() {
        if (limitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(limits_);
        } else {
          return limitsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public int getLimitsCount() {
        if (limitsBuilder_ == null) {
          return limits_.size();
        } else {
          return limitsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getLimits(int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);
        } else {
          return limitsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder setLimits(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.set(index, value);
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder setLimits(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.set(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder addLimits(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder addLimits(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(index, value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder addLimits(
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder addLimits(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder addAllLimits(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> values) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, limits_);
          onChanged();
        } else {
          limitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder clearLimits() {
        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          limitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public Builder removeLimits(int index) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.remove(index);
          onChanged();
        } else {
          limitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder getLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getLimitsOrBuilder(
          int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);  } else {
          return limitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
           getLimitsOrBuilderList() {
        if (limitsBuilder_ != null) {
          return limitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(limits_);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addLimitsBuilder() {
        return getLimitsFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData limits = 4;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder> 
           getLimitsBuilderList() {
        return getLimitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
          getLimitsFieldBuilder() {
        if (limitsBuilder_ == null) {
          limitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder>(
                  limits_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          limits_ = null;
        }
        return limitsBuilder_;
      }

      private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> reminders_ =
        java.util.Collections.emptyList();
      private void ensureRemindersIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          reminders_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>(reminders_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> remindersBuilder_;

      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getRemindersList() {
        if (remindersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reminders_);
        } else {
          return remindersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public int getRemindersCount() {
        if (remindersBuilder_ == null) {
          return reminders_.size();
        } else {
          return remindersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getReminders(int index) {
        if (remindersBuilder_ == null) {
          return reminders_.get(index);
        } else {
          return remindersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder setReminders(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (remindersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemindersIsMutable();
          reminders_.set(index, value);
          onChanged();
        } else {
          remindersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder setReminders(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (remindersBuilder_ == null) {
          ensureRemindersIsMutable();
          reminders_.set(index, builderForValue.build());
          onChanged();
        } else {
          remindersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder addReminders(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (remindersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemindersIsMutable();
          reminders_.add(value);
          onChanged();
        } else {
          remindersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder addReminders(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (remindersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRemindersIsMutable();
          reminders_.add(index, value);
          onChanged();
        } else {
          remindersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder addReminders(
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (remindersBuilder_ == null) {
          ensureRemindersIsMutable();
          reminders_.add(builderForValue.build());
          onChanged();
        } else {
          remindersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder addReminders(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (remindersBuilder_ == null) {
          ensureRemindersIsMutable();
          reminders_.add(index, builderForValue.build());
          onChanged();
        } else {
          remindersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder addAllReminders(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> values) {
        if (remindersBuilder_ == null) {
          ensureRemindersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, reminders_);
          onChanged();
        } else {
          remindersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder clearReminders() {
        if (remindersBuilder_ == null) {
          reminders_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          remindersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public Builder removeReminders(int index) {
        if (remindersBuilder_ == null) {
          ensureRemindersIsMutable();
          reminders_.remove(index);
          onChanged();
        } else {
          remindersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder getRemindersBuilder(
          int index) {
        return getRemindersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getRemindersOrBuilder(
          int index) {
        if (remindersBuilder_ == null) {
          return reminders_.get(index);  } else {
          return remindersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
           getRemindersOrBuilderList() {
        if (remindersBuilder_ != null) {
          return remindersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reminders_);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addRemindersBuilder() {
        return getRemindersFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addRemindersBuilder(
          int index) {
        return getRemindersFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData reminders = 5;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder> 
           getRemindersBuilderList() {
        return getRemindersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
          getRemindersFieldBuilder() {
        if (remindersBuilder_ == null) {
          remindersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder>(
                  reminders_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          reminders_ = null;
        }
        return remindersBuilder_;
      }

      private java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> warnings_ =
        java.util.Collections.emptyList();
      private void ensureWarningsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          warnings_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData>(warnings_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> warningsBuilder_;

      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> getWarningsList() {
        if (warningsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(warnings_);
        } else {
          return warningsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public int getWarningsCount() {
        if (warningsBuilder_ == null) {
          return warnings_.size();
        } else {
          return warningsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData getWarnings(int index) {
        if (warningsBuilder_ == null) {
          return warnings_.get(index);
        } else {
          return warningsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder setWarnings(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (warningsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWarningsIsMutable();
          warnings_.set(index, value);
          onChanged();
        } else {
          warningsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder setWarnings(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (warningsBuilder_ == null) {
          ensureWarningsIsMutable();
          warnings_.set(index, builderForValue.build());
          onChanged();
        } else {
          warningsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder addWarnings(claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (warningsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWarningsIsMutable();
          warnings_.add(value);
          onChanged();
        } else {
          warningsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder addWarnings(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData value) {
        if (warningsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWarningsIsMutable();
          warnings_.add(index, value);
          onChanged();
        } else {
          warningsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder addWarnings(
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (warningsBuilder_ == null) {
          ensureWarningsIsMutable();
          warnings_.add(builderForValue.build());
          onChanged();
        } else {
          warningsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder addWarnings(
          int index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder builderForValue) {
        if (warningsBuilder_ == null) {
          ensureWarningsIsMutable();
          warnings_.add(index, builderForValue.build());
          onChanged();
        } else {
          warningsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder addAllWarnings(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaData> values) {
        if (warningsBuilder_ == null) {
          ensureWarningsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, warnings_);
          onChanged();
        } else {
          warningsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder clearWarnings() {
        if (warningsBuilder_ == null) {
          warnings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          warningsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public Builder removeWarnings(int index) {
        if (warningsBuilder_ == null) {
          ensureWarningsIsMutable();
          warnings_.remove(index);
          onChanged();
        } else {
          warningsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder getWarningsBuilder(
          int index) {
        return getWarningsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder getWarningsOrBuilder(
          int index) {
        if (warningsBuilder_ == null) {
          return warnings_.get(index);  } else {
          return warningsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
           getWarningsOrBuilderList() {
        if (warningsBuilder_ != null) {
          return warningsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(warnings_);
        }
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addWarningsBuilder() {
        return getWarningsFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder addWarningsBuilder(
          int index) {
        return getWarningsFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.EventMetaData warnings = 6;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder> 
           getWarningsBuilderList() {
        return getWarningsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder> 
          getWarningsFieldBuilder() {
        if (warningsBuilder_ == null) {
          warningsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentEventMetadata.EventMetaData, claros.instrument.ClarosInstrumentEventMetadata.EventMetaData.Builder, claros.instrument.ClarosInstrumentEventMetadata.EventMetaDataOrBuilder>(
                  warnings_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          warnings_ = null;
        }
        return warningsBuilder_;
      }

      private java.util.List<claros.instrument.ClarosInstrumentPrognosys.PrognosysData> prognosys_ =
        java.util.Collections.emptyList();
      private void ensurePrognosysIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          prognosys_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentPrognosys.PrognosysData>(prognosys_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentPrognosys.PrognosysData, claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder, claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder> prognosysBuilder_;

      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentPrognosys.PrognosysData> getPrognosysList() {
        if (prognosysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(prognosys_);
        } else {
          return prognosysBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public int getPrognosysCount() {
        if (prognosysBuilder_ == null) {
          return prognosys_.size();
        } else {
          return prognosysBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public claros.instrument.ClarosInstrumentPrognosys.PrognosysData getPrognosys(int index) {
        if (prognosysBuilder_ == null) {
          return prognosys_.get(index);
        } else {
          return prognosysBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder setPrognosys(
          int index, claros.instrument.ClarosInstrumentPrognosys.PrognosysData value) {
        if (prognosysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrognosysIsMutable();
          prognosys_.set(index, value);
          onChanged();
        } else {
          prognosysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder setPrognosys(
          int index, claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder builderForValue) {
        if (prognosysBuilder_ == null) {
          ensurePrognosysIsMutable();
          prognosys_.set(index, builderForValue.build());
          onChanged();
        } else {
          prognosysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder addPrognosys(claros.instrument.ClarosInstrumentPrognosys.PrognosysData value) {
        if (prognosysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrognosysIsMutable();
          prognosys_.add(value);
          onChanged();
        } else {
          prognosysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder addPrognosys(
          int index, claros.instrument.ClarosInstrumentPrognosys.PrognosysData value) {
        if (prognosysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePrognosysIsMutable();
          prognosys_.add(index, value);
          onChanged();
        } else {
          prognosysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder addPrognosys(
          claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder builderForValue) {
        if (prognosysBuilder_ == null) {
          ensurePrognosysIsMutable();
          prognosys_.add(builderForValue.build());
          onChanged();
        } else {
          prognosysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder addPrognosys(
          int index, claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder builderForValue) {
        if (prognosysBuilder_ == null) {
          ensurePrognosysIsMutable();
          prognosys_.add(index, builderForValue.build());
          onChanged();
        } else {
          prognosysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder addAllPrognosys(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentPrognosys.PrognosysData> values) {
        if (prognosysBuilder_ == null) {
          ensurePrognosysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, prognosys_);
          onChanged();
        } else {
          prognosysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder clearPrognosys() {
        if (prognosysBuilder_ == null) {
          prognosys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          prognosysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public Builder removePrognosys(int index) {
        if (prognosysBuilder_ == null) {
          ensurePrognosysIsMutable();
          prognosys_.remove(index);
          onChanged();
        } else {
          prognosysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder getPrognosysBuilder(
          int index) {
        return getPrognosysFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder getPrognosysOrBuilder(
          int index) {
        if (prognosysBuilder_ == null) {
          return prognosys_.get(index);  } else {
          return prognosysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder> 
           getPrognosysOrBuilderList() {
        if (prognosysBuilder_ != null) {
          return prognosysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(prognosys_);
        }
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder addPrognosysBuilder() {
        return getPrognosysFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentPrognosys.PrognosysData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder addPrognosysBuilder(
          int index) {
        return getPrognosysFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentPrognosys.PrognosysData.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.PrognosysData prognosys = 7;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder> 
           getPrognosysBuilderList() {
        return getPrognosysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentPrognosys.PrognosysData, claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder, claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder> 
          getPrognosysFieldBuilder() {
        if (prognosysBuilder_ == null) {
          prognosysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentPrognosys.PrognosysData, claros.instrument.ClarosInstrumentPrognosys.PrognosysData.Builder, claros.instrument.ClarosInstrumentPrognosys.PrognosysDataOrBuilder>(
                  prognosys_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          prognosys_ = null;
        }
        return prognosysBuilder_;
      }

      private claros.common.ClarosCommonDatetime.DateTime eventDateTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.ClarosCommonDatetime.DateTime, claros.common.ClarosCommonDatetime.DateTime.Builder, claros.common.ClarosCommonDatetime.DateTimeOrBuilder> eventDateTimeBuilder_;
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public boolean hasEventDateTime() {
        return eventDateTimeBuilder_ != null || eventDateTime_ != null;
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public claros.common.ClarosCommonDatetime.DateTime getEventDateTime() {
        if (eventDateTimeBuilder_ == null) {
          return eventDateTime_ == null ? claros.common.ClarosCommonDatetime.DateTime.getDefaultInstance() : eventDateTime_;
        } else {
          return eventDateTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public Builder setEventDateTime(claros.common.ClarosCommonDatetime.DateTime value) {
        if (eventDateTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventDateTime_ = value;
          onChanged();
        } else {
          eventDateTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public Builder setEventDateTime(
          claros.common.ClarosCommonDatetime.DateTime.Builder builderForValue) {
        if (eventDateTimeBuilder_ == null) {
          eventDateTime_ = builderForValue.build();
          onChanged();
        } else {
          eventDateTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public Builder mergeEventDateTime(claros.common.ClarosCommonDatetime.DateTime value) {
        if (eventDateTimeBuilder_ == null) {
          if (eventDateTime_ != null) {
            eventDateTime_ =
              claros.common.ClarosCommonDatetime.DateTime.newBuilder(eventDateTime_).mergeFrom(value).buildPartial();
          } else {
            eventDateTime_ = value;
          }
          onChanged();
        } else {
          eventDateTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public Builder clearEventDateTime() {
        if (eventDateTimeBuilder_ == null) {
          eventDateTime_ = null;
          onChanged();
        } else {
          eventDateTime_ = null;
          eventDateTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public claros.common.ClarosCommonDatetime.DateTime.Builder getEventDateTimeBuilder() {
        
        onChanged();
        return getEventDateTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      public claros.common.ClarosCommonDatetime.DateTimeOrBuilder getEventDateTimeOrBuilder() {
        if (eventDateTimeBuilder_ != null) {
          return eventDateTimeBuilder_.getMessageOrBuilder();
        } else {
          return eventDateTime_ == null ?
              claros.common.ClarosCommonDatetime.DateTime.getDefaultInstance() : eventDateTime_;
        }
      }
      /**
       * <code>.claros.common.ClarosDateTime eventDateTime = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          claros.common.ClarosCommonDatetime.DateTime, claros.common.ClarosCommonDatetime.DateTime.Builder, claros.common.ClarosCommonDatetime.DateTimeOrBuilder> 
          getEventDateTimeFieldBuilder() {
        if (eventDateTimeBuilder_ == null) {
          eventDateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              claros.common.ClarosCommonDatetime.DateTime, claros.common.ClarosCommonDatetime.DateTime.Builder, claros.common.ClarosCommonDatetime.DateTimeOrBuilder>(
                  getEventDateTime(),
                  getParentForChildren(),
                  isClean());
          eventDateTime_ = null;
        }
        return eventDateTimeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.instrument.InstrumentEvent)
    }

    // @@protoc_insertion_point(class_scope:claros.instrument.InstrumentEvent)
    private static final claros.instrument.ClarosInstrumentEvent.InstrumentEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.instrument.ClarosInstrumentEvent.InstrumentEvent();
    }

    public static claros.instrument.ClarosInstrumentEvent.InstrumentEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InstrumentEvent>
        PARSER = new com.google.protobuf.AbstractParser<InstrumentEvent>() {
      @java.lang.Override
      public InstrumentEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstrumentEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InstrumentEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InstrumentEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.instrument.ClarosInstrumentEvent.InstrumentEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_instrument_InstrumentEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_instrument_InstrumentEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035claros_instrument_event.proto\022\021claros." +
      "instrument\032\034claros_common_datetime.proto" +
      "\032&claros_instrument_event_metadata.proto" +
      "\032#claros_instrument_calibration.proto\032!c" +
      "laros_instrument_prognosys.proto\"\251\003\n\017Ins" +
      "trumentEvent\0224\n\014calibrations\030\001 \003(\0132\036.cla" +
      "ros.instrument.Calibration\0220\n\006errors\030\002 \003" +
      "(\0132 .claros.instrument.EventMetaData\022.\n\004" +
      "info\030\003 \003(\0132 .claros.instrument.EventMeta" +
      "Data\0220\n\006limits\030\004 \003(\0132 .claros.instrument" +
      ".EventMetaData\0223\n\treminders\030\005 \003(\0132 .clar" +
      "os.instrument.EventMetaData\0222\n\010warnings\030" +
      "\006 \003(\0132 .claros.instrument.EventMetaData\022" +
      "3\n\tprognosys\030\007 \003(\0132 .claros.instrument.P" +
      "rognosysData\022.\n\reventDateTime\030\010 \001(\0132\027.cl" +
      "aros.common.DateTimeb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          claros.common.ClarosCommonDatetime.getDescriptor(),
          claros.instrument.ClarosInstrumentEventMetadata.getDescriptor(),
          claros.instrument.ClarosInstrumentCalibration.getDescriptor(),
          claros.instrument.ClarosInstrumentPrognosys.getDescriptor(),
        }, assigner);
    internal_static_claros_instrument_InstrumentEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_instrument_InstrumentEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_instrument_InstrumentEvent_descriptor,
        new java.lang.String[] { "Calibrations", "Errors", "Info", "Limits", "Reminders", "Warnings", "Prognosys", "EventDateTime", });
    claros.common.ClarosCommonDatetime.getDescriptor();
    claros.instrument.ClarosInstrumentEventMetadata.getDescriptor();
    claros.instrument.ClarosInstrumentCalibration.getDescriptor();
    claros.instrument.ClarosInstrumentPrognosys.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
