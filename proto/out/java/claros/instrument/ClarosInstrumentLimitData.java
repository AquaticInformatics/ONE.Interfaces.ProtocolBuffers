// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_limit_data.proto

package claros.instrument;

public final class ClarosInstrumentLimitData {
  private ClarosInstrumentLimitData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LimitDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:claros.instrument.LimitData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    java.util.List<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit> 
        getLimitsList();
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    claros.instrument.ClarosInstrumentLimitData.LimitData.Limit getLimits(int index);
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    int getLimitsCount();
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    java.util.List<? extends claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder> 
        getLimitsOrBuilderList();
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder getLimitsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code claros.instrument.LimitData}
   */
  public  static final class LimitData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:claros.instrument.LimitData)
      LimitDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LimitData.newBuilder() to construct.
    private LimitData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LimitData() {
      limits_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LimitData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                limits_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit>();
                mutable_bitField0_ |= 0x00000001;
              }
              limits_.add(
                  input.readMessage(claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          limits_ = java.util.Collections.unmodifiableList(limits_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              claros.instrument.ClarosInstrumentLimitData.LimitData.class, claros.instrument.ClarosInstrumentLimitData.LimitData.Builder.class);
    }

    public interface LimitOrBuilder extends
        // @@protoc_insertion_point(interface_extends:claros.instrument.LimitData.Limit)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>uint32 severity = 1;</code>
       */
      int getSeverity();

      /**
       * <code>uint32 polarity = 2;</code>
       */
      int getPolarity();

      /**
       * <code>string i18nKey = 3;</code>
       */
      java.lang.String getI18NKey();
      /**
       * <code>string i18nKey = 3;</code>
       */
      com.google.protobuf.ByteString
          getI18NKeyBytes();
    }
    /**
     * Protobuf type {@code claros.instrument.LimitData.Limit}
     */
    public  static final class Limit extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:claros.instrument.LimitData.Limit)
        LimitOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Limit.newBuilder() to construct.
      private Limit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Limit() {
        i18NKey_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Limit(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                severity_ = input.readUInt32();
                break;
              }
              case 16: {

                polarity_ = input.readUInt32();
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                i18NKey_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_Limit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_Limit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.class, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder.class);
      }

      public static final int SEVERITY_FIELD_NUMBER = 1;
      private int severity_;
      /**
       * <code>uint32 severity = 1;</code>
       */
      public int getSeverity() {
        return severity_;
      }

      public static final int POLARITY_FIELD_NUMBER = 2;
      private int polarity_;
      /**
       * <code>uint32 polarity = 2;</code>
       */
      public int getPolarity() {
        return polarity_;
      }

      public static final int I18NKEY_FIELD_NUMBER = 3;
      private volatile java.lang.Object i18NKey_;
      /**
       * <code>string i18nKey = 3;</code>
       */
      public java.lang.String getI18NKey() {
        java.lang.Object ref = i18NKey_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          i18NKey_ = s;
          return s;
        }
      }
      /**
       * <code>string i18nKey = 3;</code>
       */
      public com.google.protobuf.ByteString
          getI18NKeyBytes() {
        java.lang.Object ref = i18NKey_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          i18NKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (severity_ != 0) {
          output.writeUInt32(1, severity_);
        }
        if (polarity_ != 0) {
          output.writeUInt32(2, polarity_);
        }
        if (!getI18NKeyBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, i18NKey_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (severity_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, severity_);
        }
        if (polarity_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, polarity_);
        }
        if (!getI18NKeyBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, i18NKey_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof claros.instrument.ClarosInstrumentLimitData.LimitData.Limit)) {
          return super.equals(obj);
        }
        claros.instrument.ClarosInstrumentLimitData.LimitData.Limit other = (claros.instrument.ClarosInstrumentLimitData.LimitData.Limit) obj;

        if (getSeverity()
            != other.getSeverity()) return false;
        if (getPolarity()
            != other.getPolarity()) return false;
        if (!getI18NKey()
            .equals(other.getI18NKey())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
        hash = (53 * hash) + getSeverity();
        hash = (37 * hash) + POLARITY_FIELD_NUMBER;
        hash = (53 * hash) + getPolarity();
        hash = (37 * hash) + I18NKEY_FIELD_NUMBER;
        hash = (53 * hash) + getI18NKey().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(claros.instrument.ClarosInstrumentLimitData.LimitData.Limit prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code claros.instrument.LimitData.Limit}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:claros.instrument.LimitData.Limit)
          claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_Limit_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_Limit_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.class, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder.class);
        }

        // Construct using claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          severity_ = 0;

          polarity_ = 0;

          i18NKey_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_Limit_descriptor;
        }

        @java.lang.Override
        public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit getDefaultInstanceForType() {
          return claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.getDefaultInstance();
        }

        @java.lang.Override
        public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit build() {
          claros.instrument.ClarosInstrumentLimitData.LimitData.Limit result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit buildPartial() {
          claros.instrument.ClarosInstrumentLimitData.LimitData.Limit result = new claros.instrument.ClarosInstrumentLimitData.LimitData.Limit(this);
          result.severity_ = severity_;
          result.polarity_ = polarity_;
          result.i18NKey_ = i18NKey_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof claros.instrument.ClarosInstrumentLimitData.LimitData.Limit) {
            return mergeFrom((claros.instrument.ClarosInstrumentLimitData.LimitData.Limit)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(claros.instrument.ClarosInstrumentLimitData.LimitData.Limit other) {
          if (other == claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.getDefaultInstance()) return this;
          if (other.getSeverity() != 0) {
            setSeverity(other.getSeverity());
          }
          if (other.getPolarity() != 0) {
            setPolarity(other.getPolarity());
          }
          if (!other.getI18NKey().isEmpty()) {
            i18NKey_ = other.i18NKey_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          claros.instrument.ClarosInstrumentLimitData.LimitData.Limit parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (claros.instrument.ClarosInstrumentLimitData.LimitData.Limit) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int severity_ ;
        /**
         * <code>uint32 severity = 1;</code>
         */
        public int getSeverity() {
          return severity_;
        }
        /**
         * <code>uint32 severity = 1;</code>
         */
        public Builder setSeverity(int value) {
          
          severity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 severity = 1;</code>
         */
        public Builder clearSeverity() {
          
          severity_ = 0;
          onChanged();
          return this;
        }

        private int polarity_ ;
        /**
         * <code>uint32 polarity = 2;</code>
         */
        public int getPolarity() {
          return polarity_;
        }
        /**
         * <code>uint32 polarity = 2;</code>
         */
        public Builder setPolarity(int value) {
          
          polarity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>uint32 polarity = 2;</code>
         */
        public Builder clearPolarity() {
          
          polarity_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object i18NKey_ = "";
        /**
         * <code>string i18nKey = 3;</code>
         */
        public java.lang.String getI18NKey() {
          java.lang.Object ref = i18NKey_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            i18NKey_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string i18nKey = 3;</code>
         */
        public com.google.protobuf.ByteString
            getI18NKeyBytes() {
          java.lang.Object ref = i18NKey_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            i18NKey_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string i18nKey = 3;</code>
         */
        public Builder setI18NKey(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          i18NKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string i18nKey = 3;</code>
         */
        public Builder clearI18NKey() {
          
          i18NKey_ = getDefaultInstance().getI18NKey();
          onChanged();
          return this;
        }
        /**
         * <code>string i18nKey = 3;</code>
         */
        public Builder setI18NKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          i18NKey_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:claros.instrument.LimitData.Limit)
      }

      // @@protoc_insertion_point(class_scope:claros.instrument.LimitData.Limit)
      private static final claros.instrument.ClarosInstrumentLimitData.LimitData.Limit DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new claros.instrument.ClarosInstrumentLimitData.LimitData.Limit();
      }

      public static claros.instrument.ClarosInstrumentLimitData.LimitData.Limit getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Limit>
          PARSER = new com.google.protobuf.AbstractParser<Limit>() {
        @java.lang.Override
        public Limit parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Limit(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Limit> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Limit> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LIMITS_FIELD_NUMBER = 1;
    private java.util.List<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit> limits_;
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    public java.util.List<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit> getLimitsList() {
      return limits_;
    }
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    public java.util.List<? extends claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder> 
        getLimitsOrBuilderList() {
      return limits_;
    }
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    public int getLimitsCount() {
      return limits_.size();
    }
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit getLimits(int index) {
      return limits_.get(index);
    }
    /**
     * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
     */
    public claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder getLimitsOrBuilder(
        int index) {
      return limits_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < limits_.size(); i++) {
        output.writeMessage(1, limits_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < limits_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, limits_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof claros.instrument.ClarosInstrumentLimitData.LimitData)) {
        return super.equals(obj);
      }
      claros.instrument.ClarosInstrumentLimitData.LimitData other = (claros.instrument.ClarosInstrumentLimitData.LimitData) obj;

      if (!getLimitsList()
          .equals(other.getLimitsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLimitsCount() > 0) {
        hash = (37 * hash) + LIMITS_FIELD_NUMBER;
        hash = (53 * hash) + getLimitsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static claros.instrument.ClarosInstrumentLimitData.LimitData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(claros.instrument.ClarosInstrumentLimitData.LimitData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code claros.instrument.LimitData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:claros.instrument.LimitData)
        claros.instrument.ClarosInstrumentLimitData.LimitDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                claros.instrument.ClarosInstrumentLimitData.LimitData.class, claros.instrument.ClarosInstrumentLimitData.LimitData.Builder.class);
      }

      // Construct using claros.instrument.ClarosInstrumentLimitData.LimitData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLimitsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          limitsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return claros.instrument.ClarosInstrumentLimitData.internal_static_claros_instrument_LimitData_descriptor;
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentLimitData.LimitData getDefaultInstanceForType() {
        return claros.instrument.ClarosInstrumentLimitData.LimitData.getDefaultInstance();
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentLimitData.LimitData build() {
        claros.instrument.ClarosInstrumentLimitData.LimitData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public claros.instrument.ClarosInstrumentLimitData.LimitData buildPartial() {
        claros.instrument.ClarosInstrumentLimitData.LimitData result = new claros.instrument.ClarosInstrumentLimitData.LimitData(this);
        int from_bitField0_ = bitField0_;
        if (limitsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            limits_ = java.util.Collections.unmodifiableList(limits_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.limits_ = limits_;
        } else {
          result.limits_ = limitsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof claros.instrument.ClarosInstrumentLimitData.LimitData) {
          return mergeFrom((claros.instrument.ClarosInstrumentLimitData.LimitData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(claros.instrument.ClarosInstrumentLimitData.LimitData other) {
        if (other == claros.instrument.ClarosInstrumentLimitData.LimitData.getDefaultInstance()) return this;
        if (limitsBuilder_ == null) {
          if (!other.limits_.isEmpty()) {
            if (limits_.isEmpty()) {
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLimitsIsMutable();
              limits_.addAll(other.limits_);
            }
            onChanged();
          }
        } else {
          if (!other.limits_.isEmpty()) {
            if (limitsBuilder_.isEmpty()) {
              limitsBuilder_.dispose();
              limitsBuilder_ = null;
              limits_ = other.limits_;
              bitField0_ = (bitField0_ & ~0x00000001);
              limitsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLimitsFieldBuilder() : null;
            } else {
              limitsBuilder_.addAllMessages(other.limits_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        claros.instrument.ClarosInstrumentLimitData.LimitData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (claros.instrument.ClarosInstrumentLimitData.LimitData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit> limits_ =
        java.util.Collections.emptyList();
      private void ensureLimitsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          limits_ = new java.util.ArrayList<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit>(limits_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentLimitData.LimitData.Limit, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder, claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder> limitsBuilder_;

      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit> getLimitsList() {
        if (limitsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(limits_);
        } else {
          return limitsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public int getLimitsCount() {
        if (limitsBuilder_ == null) {
          return limits_.size();
        } else {
          return limitsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit getLimits(int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);
        } else {
          return limitsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder setLimits(
          int index, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.set(index, value);
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder setLimits(
          int index, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.set(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder addLimits(claros.instrument.ClarosInstrumentLimitData.LimitData.Limit value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder addLimits(
          int index, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit value) {
        if (limitsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitsIsMutable();
          limits_.add(index, value);
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder addLimits(
          claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder addLimits(
          int index, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder builderForValue) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.add(index, builderForValue.build());
          onChanged();
        } else {
          limitsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder addAllLimits(
          java.lang.Iterable<? extends claros.instrument.ClarosInstrumentLimitData.LimitData.Limit> values) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, limits_);
          onChanged();
        } else {
          limitsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder clearLimits() {
        if (limitsBuilder_ == null) {
          limits_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          limitsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public Builder removeLimits(int index) {
        if (limitsBuilder_ == null) {
          ensureLimitsIsMutable();
          limits_.remove(index);
          onChanged();
        } else {
          limitsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder getLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder getLimitsOrBuilder(
          int index) {
        if (limitsBuilder_ == null) {
          return limits_.get(index);  } else {
          return limitsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public java.util.List<? extends claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder> 
           getLimitsOrBuilderList() {
        if (limitsBuilder_ != null) {
          return limitsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(limits_);
        }
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder addLimitsBuilder() {
        return getLimitsFieldBuilder().addBuilder(
            claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder addLimitsBuilder(
          int index) {
        return getLimitsFieldBuilder().addBuilder(
            index, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.getDefaultInstance());
      }
      /**
       * <code>repeated .claros.instrument.LimitData.Limit limits = 1;</code>
       */
      public java.util.List<claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder> 
           getLimitsBuilderList() {
        return getLimitsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          claros.instrument.ClarosInstrumentLimitData.LimitData.Limit, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder, claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder> 
          getLimitsFieldBuilder() {
        if (limitsBuilder_ == null) {
          limitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              claros.instrument.ClarosInstrumentLimitData.LimitData.Limit, claros.instrument.ClarosInstrumentLimitData.LimitData.Limit.Builder, claros.instrument.ClarosInstrumentLimitData.LimitData.LimitOrBuilder>(
                  limits_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          limits_ = null;
        }
        return limitsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:claros.instrument.LimitData)
    }

    // @@protoc_insertion_point(class_scope:claros.instrument.LimitData)
    private static final claros.instrument.ClarosInstrumentLimitData.LimitData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new claros.instrument.ClarosInstrumentLimitData.LimitData();
    }

    public static claros.instrument.ClarosInstrumentLimitData.LimitData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LimitData>
        PARSER = new com.google.protobuf.AbstractParser<LimitData>() {
      @java.lang.Override
      public LimitData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LimitData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LimitData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LimitData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public claros.instrument.ClarosInstrumentLimitData.LimitData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_instrument_LimitData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_instrument_LimitData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_claros_instrument_LimitData_Limit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_claros_instrument_LimitData_Limit_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"claros_instrument_limit_data.proto\022\021cl" +
      "aros.instrument\"}\n\tLimitData\0222\n\006limits\030\001" +
      " \003(\0132\".claros.instrument.LimitData.Limit" +
      "\032<\n\005Limit\022\020\n\010severity\030\001 \001(\r\022\020\n\010polarity\030" +
      "\002 \001(\r\022\017\n\007i18nKey\030\003 \001(\tb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_claros_instrument_LimitData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_claros_instrument_LimitData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_instrument_LimitData_descriptor,
        new java.lang.String[] { "Limits", });
    internal_static_claros_instrument_LimitData_Limit_descriptor =
      internal_static_claros_instrument_LimitData_descriptor.getNestedTypes().get(0);
    internal_static_claros_instrument_LimitData_Limit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_claros_instrument_LimitData_Limit_descriptor,
        new java.lang.String[] { "Severity", "Polarity", "I18NKey", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
