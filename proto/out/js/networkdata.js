/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.claros.common.core.NetworkData');
goog.provide('proto.claros.common.core.NetworkData.Response');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.claros.common.core.ClarosDateTime');
goog.require('proto.claros.common.core.Note');
goog.require('proto.claros.common.form.Form');
goog.require('proto.claros.common.form.FormTemplate');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.claros.common.core.NetworkData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.claros.common.core.NetworkData.repeatedFields_, null);
};
goog.inherits(proto.claros.common.core.NetworkData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.claros.common.core.NetworkData.displayName = 'proto.claros.common.core.NetworkData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.claros.common.core.NetworkData.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.claros.common.core.NetworkData.Response.oneofGroups_);
};
goog.inherits(proto.claros.common.core.NetworkData.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.claros.common.core.NetworkData.Response.displayName = 'proto.claros.common.core.NetworkData.Response';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.claros.common.core.NetworkData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.claros.common.core.NetworkData.prototype.toObject = function(opt_includeInstance) {
  return proto.claros.common.core.NetworkData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.claros.common.core.NetworkData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.claros.common.core.NetworkData.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.claros.common.core.NetworkData.Response.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.claros.common.core.NetworkData}
 */
proto.claros.common.core.NetworkData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.claros.common.core.NetworkData;
  return proto.claros.common.core.NetworkData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.claros.common.core.NetworkData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.claros.common.core.NetworkData}
 */
proto.claros.common.core.NetworkData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.claros.common.core.NetworkData.Response;
      reader.readMessage(value,proto.claros.common.core.NetworkData.Response.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.claros.common.core.NetworkData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.claros.common.core.NetworkData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.claros.common.core.NetworkData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.claros.common.core.NetworkData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.claros.common.core.NetworkData.Response.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.claros.common.core.NetworkData.Response.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.claros.common.core.NetworkData.Response.ResponseOneOfCase = {
  RESPONSE_ONE_OF_NOT_SET: 0,
  FORMTEMPLATE: 2,
  FORM: 3,
  DATETIME: 4,
  NOTE: 5
};

/**
 * @return {proto.claros.common.core.NetworkData.Response.ResponseOneOfCase}
 */
proto.claros.common.core.NetworkData.Response.prototype.getResponseOneOfCase = function() {
  return /** @type {proto.claros.common.core.NetworkData.Response.ResponseOneOfCase} */(jspb.Message.computeOneofCase(this, proto.claros.common.core.NetworkData.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.claros.common.core.NetworkData.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.claros.common.core.NetworkData.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.claros.common.core.NetworkData.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.claros.common.core.NetworkData.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    formtemplate: (f = msg.getFormtemplate()) && proto.claros.common.form.FormTemplate.toObject(includeInstance, f),
    form: (f = msg.getForm()) && proto.claros.common.form.Form.toObject(includeInstance, f),
    datetime: (f = msg.getDatetime()) && proto.claros.common.core.ClarosDateTime.toObject(includeInstance, f),
    note: (f = msg.getNote()) && proto.claros.common.core.Note.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.claros.common.core.NetworkData.Response}
 */
proto.claros.common.core.NetworkData.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.claros.common.core.NetworkData.Response;
  return proto.claros.common.core.NetworkData.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.claros.common.core.NetworkData.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.claros.common.core.NetworkData.Response}
 */
proto.claros.common.core.NetworkData.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.claros.common.form.FormTemplate;
      reader.readMessage(value,proto.claros.common.form.FormTemplate.deserializeBinaryFromReader);
      msg.setFormtemplate(value);
      break;
    case 3:
      var value = new proto.claros.common.form.Form;
      reader.readMessage(value,proto.claros.common.form.Form.deserializeBinaryFromReader);
      msg.setForm(value);
      break;
    case 4:
      var value = new proto.claros.common.core.ClarosDateTime;
      reader.readMessage(value,proto.claros.common.core.ClarosDateTime.deserializeBinaryFromReader);
      msg.setDatetime(value);
      break;
    case 5:
      var value = new proto.claros.common.core.Note;
      reader.readMessage(value,proto.claros.common.core.Note.deserializeBinaryFromReader);
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.claros.common.core.NetworkData.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.claros.common.core.NetworkData.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.claros.common.core.NetworkData.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.claros.common.core.NetworkData.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormtemplate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.claros.common.form.FormTemplate.serializeBinaryToWriter
    );
  }
  f = message.getForm();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.claros.common.form.Form.serializeBinaryToWriter
    );
  }
  f = message.getDatetime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.claros.common.core.ClarosDateTime.serializeBinaryToWriter
    );
  }
  f = message.getNote();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.claros.common.core.Note.serializeBinaryToWriter
    );
  }
};


/**
 * optional claros.common.form.FormTemplate formTemplate = 2;
 * @return {?proto.claros.common.form.FormTemplate}
 */
proto.claros.common.core.NetworkData.Response.prototype.getFormtemplate = function() {
  return /** @type{?proto.claros.common.form.FormTemplate} */ (
    jspb.Message.getWrapperField(this, proto.claros.common.form.FormTemplate, 2));
};


/** @param {?proto.claros.common.form.FormTemplate|undefined} value */
proto.claros.common.core.NetworkData.Response.prototype.setFormtemplate = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.claros.common.core.NetworkData.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.claros.common.core.NetworkData.Response.prototype.clearFormtemplate = function() {
  this.setFormtemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.claros.common.core.NetworkData.Response.prototype.hasFormtemplate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional claros.common.form.Form form = 3;
 * @return {?proto.claros.common.form.Form}
 */
proto.claros.common.core.NetworkData.Response.prototype.getForm = function() {
  return /** @type{?proto.claros.common.form.Form} */ (
    jspb.Message.getWrapperField(this, proto.claros.common.form.Form, 3));
};


/** @param {?proto.claros.common.form.Form|undefined} value */
proto.claros.common.core.NetworkData.Response.prototype.setForm = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.claros.common.core.NetworkData.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.claros.common.core.NetworkData.Response.prototype.clearForm = function() {
  this.setForm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.claros.common.core.NetworkData.Response.prototype.hasForm = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ClarosDateTime dateTime = 4;
 * @return {?proto.claros.common.core.ClarosDateTime}
 */
proto.claros.common.core.NetworkData.Response.prototype.getDatetime = function() {
  return /** @type{?proto.claros.common.core.ClarosDateTime} */ (
    jspb.Message.getWrapperField(this, proto.claros.common.core.ClarosDateTime, 4));
};


/** @param {?proto.claros.common.core.ClarosDateTime|undefined} value */
proto.claros.common.core.NetworkData.Response.prototype.setDatetime = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.claros.common.core.NetworkData.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.claros.common.core.NetworkData.Response.prototype.clearDatetime = function() {
  this.setDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.claros.common.core.NetworkData.Response.prototype.hasDatetime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Note note = 5;
 * @return {?proto.claros.common.core.Note}
 */
proto.claros.common.core.NetworkData.Response.prototype.getNote = function() {
  return /** @type{?proto.claros.common.core.Note} */ (
    jspb.Message.getWrapperField(this, proto.claros.common.core.Note, 5));
};


/** @param {?proto.claros.common.core.Note|undefined} value */
proto.claros.common.core.NetworkData.Response.prototype.setNote = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.claros.common.core.NetworkData.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.claros.common.core.NetworkData.Response.prototype.clearNote = function() {
  this.setNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.claros.common.core.NetworkData.Response.prototype.hasNote = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Response responses = 1;
 * @return {!Array<!proto.claros.common.core.NetworkData.Response>}
 */
proto.claros.common.core.NetworkData.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.claros.common.core.NetworkData.Response>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.claros.common.core.NetworkData.Response, 1));
};


/** @param {!Array<!proto.claros.common.core.NetworkData.Response>} value */
proto.claros.common.core.NetworkData.prototype.setResponsesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.claros.common.core.NetworkData.Response=} opt_value
 * @param {number=} opt_index
 * @return {!proto.claros.common.core.NetworkData.Response}
 */
proto.claros.common.core.NetworkData.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.claros.common.core.NetworkData.Response, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.claros.common.core.NetworkData.prototype.clearResponsesList = function() {
  this.setResponsesList([]);
};


