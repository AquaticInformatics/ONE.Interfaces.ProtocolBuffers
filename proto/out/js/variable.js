/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.claros.common.computation.Variable');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.claros.common.computation.ComputationCursorType');
goog.forwardDeclare('proto.claros.common.computation.PropertySelectorType');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.claros.common.computation.Variable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.claros.common.computation.Variable.oneofGroups_);
};
goog.inherits(proto.claros.common.computation.Variable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.claros.common.computation.Variable.displayName = 'proto.claros.common.computation.Variable';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.claros.common.computation.Variable.oneofGroups_ = [[10,11]];

/**
 * @enum {number}
 */
proto.claros.common.computation.Variable.BindingCase = {
  BINDING_NOT_SET: 0,
  COLUMNID: 10,
  FORMFIELDID: 11
};

/**
 * @return {proto.claros.common.computation.Variable.BindingCase}
 */
proto.claros.common.computation.Variable.prototype.getBindingCase = function() {
  return /** @type {proto.claros.common.computation.Variable.BindingCase} */(jspb.Message.computeOneofCase(this, proto.claros.common.computation.Variable.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.claros.common.computation.Variable.prototype.toObject = function(opt_includeInstance) {
  return proto.claros.common.computation.Variable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.claros.common.computation.Variable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.claros.common.computation.Variable.toObject = function(includeInstance, msg) {
  var f, obj = {
    i18nkey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quantitytypeid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cursor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    cursorabsolute: jspb.Message.getFieldWithDefault(msg, 6, 0),
    propertyselector: jspb.Message.getFieldWithDefault(msg, 7, 0),
    suggestedparameterid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    suggestedunitid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    columnid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    formfieldid: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.claros.common.computation.Variable}
 */
proto.claros.common.computation.Variable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.claros.common.computation.Variable;
  return proto.claros.common.computation.Variable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.claros.common.computation.Variable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.claros.common.computation.Variable}
 */
proto.claros.common.computation.Variable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setI18nkey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuantitytypeid(value);
      break;
    case 5:
      var value = /** @type {!proto.claros.common.computation.ComputationCursorType} */ (reader.readEnum());
      msg.setCursor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCursorabsolute(value);
      break;
    case 7:
      var value = /** @type {!proto.claros.common.computation.PropertySelectorType} */ (reader.readEnum());
      msg.setPropertyselector(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSuggestedparameterid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSuggestedunitid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setColumnid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFormfieldid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.claros.common.computation.Variable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.claros.common.computation.Variable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.claros.common.computation.Variable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.claros.common.computation.Variable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getI18nkey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantitytypeid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCursor();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCursorabsolute();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getPropertyselector();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getSuggestedparameterid();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getSuggestedunitid();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional string i18nKey = 1;
 * @return {string}
 */
proto.claros.common.computation.Variable.prototype.getI18nkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.claros.common.computation.Variable.prototype.setI18nkey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.claros.common.computation.Variable.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.claros.common.computation.Variable.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.claros.common.computation.Variable.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.claros.common.computation.Variable.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quantityTypeId = 4;
 * @return {string}
 */
proto.claros.common.computation.Variable.prototype.getQuantitytypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.claros.common.computation.Variable.prototype.setQuantitytypeid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ComputationCursorType cursor = 5;
 * @return {!proto.claros.common.computation.ComputationCursorType}
 */
proto.claros.common.computation.Variable.prototype.getCursor = function() {
  return /** @type {!proto.claros.common.computation.ComputationCursorType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.claros.common.computation.ComputationCursorType} value */
proto.claros.common.computation.Variable.prototype.setCursor = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional uint32 cursorAbsolute = 6;
 * @return {number}
 */
proto.claros.common.computation.Variable.prototype.getCursorabsolute = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.claros.common.computation.Variable.prototype.setCursorabsolute = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional PropertySelectorType propertySelector = 7;
 * @return {!proto.claros.common.computation.PropertySelectorType}
 */
proto.claros.common.computation.Variable.prototype.getPropertyselector = function() {
  return /** @type {!proto.claros.common.computation.PropertySelectorType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {!proto.claros.common.computation.PropertySelectorType} value */
proto.claros.common.computation.Variable.prototype.setPropertyselector = function(value) {
  jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional uint32 suggestedParameterId = 8;
 * @return {number}
 */
proto.claros.common.computation.Variable.prototype.getSuggestedparameterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.claros.common.computation.Variable.prototype.setSuggestedparameterid = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint32 suggestedUnitId = 9;
 * @return {number}
 */
proto.claros.common.computation.Variable.prototype.getSuggestedunitid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.claros.common.computation.Variable.prototype.setSuggestedunitid = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 columnId = 10;
 * @return {number}
 */
proto.claros.common.computation.Variable.prototype.getColumnid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.claros.common.computation.Variable.prototype.setColumnid = function(value) {
  jspb.Message.setOneofField(this, 10, proto.claros.common.computation.Variable.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.claros.common.computation.Variable.prototype.clearColumnid = function() {
  jspb.Message.setOneofField(this, 10, proto.claros.common.computation.Variable.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.claros.common.computation.Variable.prototype.hasColumnid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 formFieldId = 11;
 * @return {number}
 */
proto.claros.common.computation.Variable.prototype.getFormfieldid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.claros.common.computation.Variable.prototype.setFormfieldid = function(value) {
  jspb.Message.setOneofField(this, 11, proto.claros.common.computation.Variable.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.claros.common.computation.Variable.prototype.clearFormfieldid = function() {
  jspb.Message.setOneofField(this, 11, proto.claros.common.computation.Variable.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.claros.common.computation.Variable.prototype.hasFormfieldid = function() {
  return jspb.Message.getField(this, 11) != null;
};


