<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: claros_instrument_measurement_data.proto

namespace Claros\Instrument\Measurement;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>claros.instrument.measurement.InstrumentMeasurementData</code>
 */
class InstrumentMeasurementData extends \Google\Protobuf\Internal\Message
{
    /**
     *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     *
     * Generated from protobuf field <code>string instrumentMeasurementId = 1;</code>
     */
    private $instrumentMeasurementId = '';
    /**
     * Generated from protobuf field <code>int32 channel = 2;</code>
     */
    private $channel = 0;
    /**
     * This is optional and may be populated to
     *
     * Generated from protobuf field <code>string fusionId = 3;</code>
     */
    private $fusionId = '';
    /**
     * Generated from protobuf field <code>.claros.common.core.Measurement measurement = 4;</code>
     */
    private $measurement = null;
    /**
     * Generated from protobuf field <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     */
    private $supportingMeasurements = null;
    /**
     * Generated from protobuf field <code>.claros.common.gis.GIS gis = 6;</code>
     */
    private $gis = null;
    /**
     * Generated from protobuf field <code>string measurementDataExtended = 7;</code>
     */
    private $measurementDataExtended = '';
    /**
     * Clean up ??????
     *
     * Generated from protobuf field <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     */
    private $measurementEvent = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $instrumentMeasurementId
     *          This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     *     @type int $channel
     *     @type string $fusionId
     *           This is optional and may be populated to
     *     @type \Claros\Common\Core\Measurement $measurement
     *     @type \Claros\Instrument\Measurement\InstrumentMeasurementData $supportingMeasurements
     *     @type \Claros\Common\Gis\GIS $gis
     *     @type string $measurementDataExtended
     *     @type \Claros\Instrument\Event\InstrumentEventData $measurementEvent
     *           Clean up ??????
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ClarosInstrumentMeasurementData::initOnce();
        parent::__construct($data);
    }

    /**
     *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     *
     * Generated from protobuf field <code>string instrumentMeasurementId = 1;</code>
     * @return string
     */
    public function getInstrumentMeasurementId()
    {
        return $this->instrumentMeasurementId;
    }

    /**
     *This is nullable.  In the case of Instrument Data this would be null until it reaches Claros.Instrument.Measurement
     *
     * Generated from protobuf field <code>string instrumentMeasurementId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setInstrumentMeasurementId($var)
    {
        GPBUtil::checkString($var, True);
        $this->instrumentMeasurementId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 channel = 2;</code>
     * @return int
     */
    public function getChannel()
    {
        return $this->channel;
    }

    /**
     * Generated from protobuf field <code>int32 channel = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setChannel($var)
    {
        GPBUtil::checkInt32($var);
        $this->channel = $var;

        return $this;
    }

    /**
     * This is optional and may be populated to
     *
     * Generated from protobuf field <code>string fusionId = 3;</code>
     * @return string
     */
    public function getFusionId()
    {
        return $this->fusionId;
    }

    /**
     * This is optional and may be populated to
     *
     * Generated from protobuf field <code>string fusionId = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setFusionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->fusionId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.claros.common.core.Measurement measurement = 4;</code>
     * @return \Claros\Common\Core\Measurement
     */
    public function getMeasurement()
    {
        return $this->measurement;
    }

    /**
     * Generated from protobuf field <code>.claros.common.core.Measurement measurement = 4;</code>
     * @param \Claros\Common\Core\Measurement $var
     * @return $this
     */
    public function setMeasurement($var)
    {
        GPBUtil::checkMessage($var, \Claros\Common\Core\Measurement::class);
        $this->measurement = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     * @return \Claros\Instrument\Measurement\InstrumentMeasurementData
     */
    public function getSupportingMeasurements()
    {
        return $this->supportingMeasurements;
    }

    /**
     * Generated from protobuf field <code>.claros.instrument.measurement.InstrumentMeasurementData supportingMeasurements = 5;</code>
     * @param \Claros\Instrument\Measurement\InstrumentMeasurementData $var
     * @return $this
     */
    public function setSupportingMeasurements($var)
    {
        GPBUtil::checkMessage($var, \Claros\Instrument\Measurement\InstrumentMeasurementData::class);
        $this->supportingMeasurements = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.claros.common.gis.GIS gis = 6;</code>
     * @return \Claros\Common\Gis\GIS
     */
    public function getGis()
    {
        return $this->gis;
    }

    /**
     * Generated from protobuf field <code>.claros.common.gis.GIS gis = 6;</code>
     * @param \Claros\Common\Gis\GIS $var
     * @return $this
     */
    public function setGis($var)
    {
        GPBUtil::checkMessage($var, \Claros\Common\Gis\GIS::class);
        $this->gis = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string measurementDataExtended = 7;</code>
     * @return string
     */
    public function getMeasurementDataExtended()
    {
        return $this->measurementDataExtended;
    }

    /**
     * Generated from protobuf field <code>string measurementDataExtended = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setMeasurementDataExtended($var)
    {
        GPBUtil::checkString($var, True);
        $this->measurementDataExtended = $var;

        return $this;
    }

    /**
     * Clean up ??????
     *
     * Generated from protobuf field <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     * @return \Claros\Instrument\Event\InstrumentEventData
     */
    public function getMeasurementEvent()
    {
        return $this->measurementEvent;
    }

    /**
     * Clean up ??????
     *
     * Generated from protobuf field <code>.claros.instrument.event.InstrumentEventData measurementEvent = 8;</code>
     * @param \Claros\Instrument\Event\InstrumentEventData $var
     * @return $this
     */
    public function setMeasurementEvent($var)
    {
        GPBUtil::checkMessage($var, \Claros\Instrument\Event\InstrumentEventData::class);
        $this->measurementEvent = $var;

        return $this;
    }

}

