<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: claros_instrument_calibration_data.proto

namespace Claros\Instrument\CalibrationData;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>claros.instrument.CalibrationData.CalibrationStandard</code>
 */
class CalibrationStandard extends \Google\Protobuf\Internal\Message
{
    /**
     *this is the primary value  (Concentration)
     *
     * Generated from protobuf field <code>.claros.instrument.CalibrationData.Value knownValue = 1;</code>
     */
    private $knownValue = null;
    /**
     *
     * Generated from protobuf field <code>.claros.instrument.CalibrationData.Value measuredValue = 2;</code>
     */
    private $measuredValue = null;
    /**
     * Generated from protobuf field <code>repeated .claros.instrument.CalibrationData.Value secondaryValue = 4;</code>
     */
    private $secondaryValue;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Claros\Instrument\CalibrationData\Value $knownValue
     *          this is the primary value  (Concentration)
     *     @type \Claros\Instrument\CalibrationData\Value $measuredValue
     *     @type \Claros\Instrument\CalibrationData\Value[]|\Google\Protobuf\Internal\RepeatedField $secondaryValue
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ClarosInstrumentCalibrationData::initOnce();
        parent::__construct($data);
    }

    /**
     *this is the primary value  (Concentration)
     *
     * Generated from protobuf field <code>.claros.instrument.CalibrationData.Value knownValue = 1;</code>
     * @return \Claros\Instrument\CalibrationData\Value
     */
    public function getKnownValue()
    {
        return $this->knownValue;
    }

    /**
     *this is the primary value  (Concentration)
     *
     * Generated from protobuf field <code>.claros.instrument.CalibrationData.Value knownValue = 1;</code>
     * @param \Claros\Instrument\CalibrationData\Value $var
     * @return $this
     */
    public function setKnownValue($var)
    {
        GPBUtil::checkMessage($var, \Claros\Instrument\CalibrationData_Value::class);
        $this->knownValue = $var;

        return $this;
    }

    /**
     *
     * Generated from protobuf field <code>.claros.instrument.CalibrationData.Value measuredValue = 2;</code>
     * @return \Claros\Instrument\CalibrationData\Value
     */
    public function getMeasuredValue()
    {
        return $this->measuredValue;
    }

    /**
     *
     * Generated from protobuf field <code>.claros.instrument.CalibrationData.Value measuredValue = 2;</code>
     * @param \Claros\Instrument\CalibrationData\Value $var
     * @return $this
     */
    public function setMeasuredValue($var)
    {
        GPBUtil::checkMessage($var, \Claros\Instrument\CalibrationData_Value::class);
        $this->measuredValue = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .claros.instrument.CalibrationData.Value secondaryValue = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSecondaryValue()
    {
        return $this->secondaryValue;
    }

    /**
     * Generated from protobuf field <code>repeated .claros.instrument.CalibrationData.Value secondaryValue = 4;</code>
     * @param \Claros\Instrument\CalibrationData\Value[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSecondaryValue($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Claros\Instrument\CalibrationData\Value::class);
        $this->secondaryValue = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(CalibrationStandard::class, \Claros\Instrument\CalibrationData_CalibrationStandard::class);

