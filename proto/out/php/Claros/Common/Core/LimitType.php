<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: claros_common_core_limit_type.proto

namespace Claros\Common\Core;

use UnexpectedValueException;

/**
 * Protobuf type <code>claros.common.core.LimitType</code>
 */
class LimitType
{
    /**
     * Generated from protobuf enum <code>LIMIT_UNKNOWN = 0;</code>
     */
    const LIMIT_UNKNOWN = 0;
    /**
     *
     * Generated from protobuf enum <code>LIMIT_HIGHALARM = 1;</code>
     */
    const LIMIT_HIGHALARM = 1;
    /**
     *
     * Generated from protobuf enum <code>LIMIT__HIGHNEAR = 2;</code>
     */
    const LIMIT__HIGHNEAR = 2;
    /**
     *
     * Generated from protobuf enum <code>LIMIT_LOWNEAR = 3;</code>
     */
    const LIMIT_LOWNEAR = 3;
    /**
     *
     * Generated from protobuf enum <code>LIMIT_LOWALARM = 4;</code>
     */
    const LIMIT_LOWALARM = 4;

    private static $valueToName = [
        self::LIMIT_UNKNOWN => 'LIMIT_UNKNOWN',
        self::LIMIT_HIGHALARM => 'LIMIT_HIGHALARM',
        self::LIMIT__HIGHNEAR => 'LIMIT__HIGHNEAR',
        self::LIMIT_LOWNEAR => 'LIMIT_LOWNEAR',
        self::LIMIT_LOWALARM => 'LIMIT_LOWALARM',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

