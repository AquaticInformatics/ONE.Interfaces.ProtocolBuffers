<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: claros_common_core_limit.proto

namespace Claros\Common\Core;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>claros.common.core.Limit</code>
 */
class Limit extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string i18nKey = 1;</code>
     */
    private $i18nKey = '';
    /**
     * Generated from protobuf field <code>.claros.common.core.LimitType limitType = 2;</code>
     */
    private $limitType = 0;
    /**
     * Generated from protobuf field <code>double value = 3;</code>
     */
    private $value = 0.0;
    /**
     * Generated from protobuf field <code>uint32 unitId = 4;</code>
     */
    private $unitId = 0;
    /**
     * Generated from protobuf field <code>.claros.common.core.Recurrence recurrence = 5;</code>
     */
    private $recurrence = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $i18nKey
     *     @type int $limitType
     *     @type float $value
     *     @type int $unitId
     *     @type \Claros\Common\Core\Recurrence $recurrence
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ClarosCommonCoreLimit::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string i18nKey = 1;</code>
     * @return string
     */
    public function getI18NKey()
    {
        return $this->i18nKey;
    }

    /**
     * Generated from protobuf field <code>string i18nKey = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setI18NKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->i18nKey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.claros.common.core.LimitType limitType = 2;</code>
     * @return int
     */
    public function getLimitType()
    {
        return $this->limitType;
    }

    /**
     * Generated from protobuf field <code>.claros.common.core.LimitType limitType = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLimitType($var)
    {
        GPBUtil::checkEnum($var, \Claros\Common\Core\LimitType::class);
        $this->limitType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double value = 3;</code>
     * @return float
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Generated from protobuf field <code>double value = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 unitId = 4;</code>
     * @return int
     */
    public function getUnitId()
    {
        return $this->unitId;
    }

    /**
     * Generated from protobuf field <code>uint32 unitId = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setUnitId($var)
    {
        GPBUtil::checkUint32($var);
        $this->unitId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.claros.common.core.Recurrence recurrence = 5;</code>
     * @return \Claros\Common\Core\Recurrence
     */
    public function getRecurrence()
    {
        return $this->recurrence;
    }

    /**
     * Generated from protobuf field <code>.claros.common.core.Recurrence recurrence = 5;</code>
     * @param \Claros\Common\Core\Recurrence $var
     * @return $this
     */
    public function setRecurrence($var)
    {
        GPBUtil::checkMessage($var, \Claros\Common\Core\Recurrence::class);
        $this->recurrence = $var;

        return $this;
    }

}

