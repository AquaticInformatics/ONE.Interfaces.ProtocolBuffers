// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claros_common_computation_variable.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Claros.Common.Computation {

  /// <summary>Holder for reflection information generated from claros_common_computation_variable.proto</summary>
  public static partial class ClarosCommonComputationVariableReflection {

    #region Descriptor
    /// <summary>File descriptor for claros_common_computation_variable.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClarosCommonComputationVariableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihjbGFyb3NfY29tbW9uX2NvbXB1dGF0aW9uX3ZhcmlhYmxlLnByb3RvEhlj",
            "bGFyb3MuY29tbW9uLmNvbXB1dGF0aW9uGitjbGFyb3NfY29tbW9uX2NvbXB1",
            "dGF0aW9uX2N1cnNvcl90eXBlLnByb3RvGjVjbGFyb3NfY29tbW9uX2NvbXB1",
            "dGF0aW9uX3Byb3BlcnR5c2VsZWN0b3JfdHlwZS5wcm90byLsAgoIVmFyaWFi",
            "bGUSDwoHaTE4bktleRgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0",
            "aW9uGAMgASgJEhYKDnF1YW50aXR5VHlwZUlkGAQgASgJEkQKCmN1cnNvclR5",
            "cGUYBSABKA4yMC5jbGFyb3MuY29tbW9uLmNvbXB1dGF0aW9uLkNvbXB1dGF0",
            "aW9uQ3Vyc29yVHlwZRIWCg5jdXJzb3JBYnNvbHV0ZRgGIAEoDRJJChBwcm9w",
            "ZXJ0eVNlbGVjdG9yGAcgASgOMi8uY2xhcm9zLmNvbW1vbi5jb21wdXRhdGlv",
            "bi5Qcm9wZXJ0eVNlbGVjdG9yVHlwZRIcChRzdWdnZXN0ZWRQYXJhbWV0ZXJJ",
            "ZBgIIAEoDRIXCg9zdWdnZXN0ZWRVbml0SWQYCSABKA0SEgoIY29sdW1uSWQY",
            "CiABKA1IABIVCgtmb3JtRmllbGRJZBgLIAEoDUgAQgkKB2JpbmRpbmdiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Claros.Common.Computation.ClarosCommonComputationCursorTypeReflection.Descriptor, global::Claros.Common.Computation.ClarosCommonComputationPropertyselectorTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Claros.Common.Computation.Variable), global::Claros.Common.Computation.Variable.Parser, new[]{ "I18NKey", "Name", "Description", "QuantityTypeId", "CursorType", "CursorAbsolute", "PropertySelector", "SuggestedParameterId", "SuggestedUnitId", "ColumnId", "FormFieldId" }, new[]{ "Binding" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Variable : pb::IMessage<Variable> {
    private static readonly pb::MessageParser<Variable> _parser = new pb::MessageParser<Variable>(() => new Variable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Variable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Claros.Common.Computation.ClarosCommonComputationVariableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable(Variable other) : this() {
      i18NKey_ = other.i18NKey_;
      name_ = other.name_;
      description_ = other.description_;
      quantityTypeId_ = other.quantityTypeId_;
      cursorType_ = other.cursorType_;
      cursorAbsolute_ = other.cursorAbsolute_;
      propertySelector_ = other.propertySelector_;
      suggestedParameterId_ = other.suggestedParameterId_;
      suggestedUnitId_ = other.suggestedUnitId_;
      switch (other.BindingCase) {
        case BindingOneofCase.ColumnId:
          ColumnId = other.ColumnId;
          break;
        case BindingOneofCase.FormFieldId:
          FormFieldId = other.FormFieldId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable Clone() {
      return new Variable(this);
    }

    /// <summary>Field number for the "i18nKey" field.</summary>
    public const int I18NKeyFieldNumber = 1;
    private string i18NKey_ = "";
    /// <summary>
    /// Use for translations of a global computation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string I18NKey {
      get { return i18NKey_; }
      set {
        i18NKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Tenant entered name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Tenant entered description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantityTypeId" field.</summary>
    public const int QuantityTypeIdFieldNumber = 4;
    private string quantityTypeId_ = "";
    /// <summary>
    /// FK to QuantityType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuantityTypeId {
      get { return quantityTypeId_; }
      set {
        quantityTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cursorType" field.</summary>
    public const int CursorTypeFieldNumber = 5;
    private global::Claros.Common.Computation.ComputationCursorType cursorType_ = 0;
    /// <summary>
    /// References adjacent rows
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Claros.Common.Computation.ComputationCursorType CursorType {
      get { return cursorType_; }
      set {
        cursorType_ = value;
      }
    }

    /// <summary>Field number for the "cursorAbsolute" field.</summary>
    public const int CursorAbsoluteFieldNumber = 6;
    private uint cursorAbsolute_;
    /// <summary>
    /// ??? is this meant to be relative???
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CursorAbsolute {
      get { return cursorAbsolute_; }
      set {
        cursorAbsolute_ = value;
      }
    }

    /// <summary>Field number for the "propertySelector" field.</summary>
    public const int PropertySelectorFieldNumber = 7;
    private global::Claros.Common.Computation.PropertySelectorType propertySelector_ = 0;
    /// <summary>
    /// What attribute of the cell or row??
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Claros.Common.Computation.PropertySelectorType PropertySelector {
      get { return propertySelector_; }
      set {
        propertySelector_ = value;
      }
    }

    /// <summary>Field number for the "suggestedParameterId" field.</summary>
    public const int SuggestedParameterIdFieldNumber = 8;
    private uint suggestedParameterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SuggestedParameterId {
      get { return suggestedParameterId_; }
      set {
        suggestedParameterId_ = value;
      }
    }

    /// <summary>Field number for the "suggestedUnitId" field.</summary>
    public const int SuggestedUnitIdFieldNumber = 9;
    private uint suggestedUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SuggestedUnitId {
      get { return suggestedUnitId_; }
      set {
        suggestedUnitId_ = value;
      }
    }

    /// <summary>Field number for the "columnId" field.</summary>
    public const int ColumnIdFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ColumnId {
      get { return bindingCase_ == BindingOneofCase.ColumnId ? (uint) binding_ : 0; }
      set {
        binding_ = value;
        bindingCase_ = BindingOneofCase.ColumnId;
      }
    }

    /// <summary>Field number for the "formFieldId" field.</summary>
    public const int FormFieldIdFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FormFieldId {
      get { return bindingCase_ == BindingOneofCase.FormFieldId ? (uint) binding_ : 0; }
      set {
        binding_ = value;
        bindingCase_ = BindingOneofCase.FormFieldId;
      }
    }

    private object binding_;
    /// <summary>Enum of possible cases for the "binding" oneof.</summary>
    public enum BindingOneofCase {
      None = 0,
      ColumnId = 10,
      FormFieldId = 11,
    }
    private BindingOneofCase bindingCase_ = BindingOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindingOneofCase BindingCase {
      get { return bindingCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBinding() {
      bindingCase_ = BindingOneofCase.None;
      binding_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Variable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Variable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (I18NKey != other.I18NKey) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (QuantityTypeId != other.QuantityTypeId) return false;
      if (CursorType != other.CursorType) return false;
      if (CursorAbsolute != other.CursorAbsolute) return false;
      if (PropertySelector != other.PropertySelector) return false;
      if (SuggestedParameterId != other.SuggestedParameterId) return false;
      if (SuggestedUnitId != other.SuggestedUnitId) return false;
      if (ColumnId != other.ColumnId) return false;
      if (FormFieldId != other.FormFieldId) return false;
      if (BindingCase != other.BindingCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (I18NKey.Length != 0) hash ^= I18NKey.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (QuantityTypeId.Length != 0) hash ^= QuantityTypeId.GetHashCode();
      if (CursorType != 0) hash ^= CursorType.GetHashCode();
      if (CursorAbsolute != 0) hash ^= CursorAbsolute.GetHashCode();
      if (PropertySelector != 0) hash ^= PropertySelector.GetHashCode();
      if (SuggestedParameterId != 0) hash ^= SuggestedParameterId.GetHashCode();
      if (SuggestedUnitId != 0) hash ^= SuggestedUnitId.GetHashCode();
      if (bindingCase_ == BindingOneofCase.ColumnId) hash ^= ColumnId.GetHashCode();
      if (bindingCase_ == BindingOneofCase.FormFieldId) hash ^= FormFieldId.GetHashCode();
      hash ^= (int) bindingCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (I18NKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(I18NKey);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (QuantityTypeId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(QuantityTypeId);
      }
      if (CursorType != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) CursorType);
      }
      if (CursorAbsolute != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(CursorAbsolute);
      }
      if (PropertySelector != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PropertySelector);
      }
      if (SuggestedParameterId != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(SuggestedParameterId);
      }
      if (SuggestedUnitId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(SuggestedUnitId);
      }
      if (bindingCase_ == BindingOneofCase.ColumnId) {
        output.WriteRawTag(80);
        output.WriteUInt32(ColumnId);
      }
      if (bindingCase_ == BindingOneofCase.FormFieldId) {
        output.WriteRawTag(88);
        output.WriteUInt32(FormFieldId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (I18NKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(I18NKey);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (QuantityTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuantityTypeId);
      }
      if (CursorType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CursorType);
      }
      if (CursorAbsolute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CursorAbsolute);
      }
      if (PropertySelector != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PropertySelector);
      }
      if (SuggestedParameterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SuggestedParameterId);
      }
      if (SuggestedUnitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SuggestedUnitId);
      }
      if (bindingCase_ == BindingOneofCase.ColumnId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ColumnId);
      }
      if (bindingCase_ == BindingOneofCase.FormFieldId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FormFieldId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Variable other) {
      if (other == null) {
        return;
      }
      if (other.I18NKey.Length != 0) {
        I18NKey = other.I18NKey;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.QuantityTypeId.Length != 0) {
        QuantityTypeId = other.QuantityTypeId;
      }
      if (other.CursorType != 0) {
        CursorType = other.CursorType;
      }
      if (other.CursorAbsolute != 0) {
        CursorAbsolute = other.CursorAbsolute;
      }
      if (other.PropertySelector != 0) {
        PropertySelector = other.PropertySelector;
      }
      if (other.SuggestedParameterId != 0) {
        SuggestedParameterId = other.SuggestedParameterId;
      }
      if (other.SuggestedUnitId != 0) {
        SuggestedUnitId = other.SuggestedUnitId;
      }
      switch (other.BindingCase) {
        case BindingOneofCase.ColumnId:
          ColumnId = other.ColumnId;
          break;
        case BindingOneofCase.FormFieldId:
          FormFieldId = other.FormFieldId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            I18NKey = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            QuantityTypeId = input.ReadString();
            break;
          }
          case 40: {
            CursorType = (global::Claros.Common.Computation.ComputationCursorType) input.ReadEnum();
            break;
          }
          case 48: {
            CursorAbsolute = input.ReadUInt32();
            break;
          }
          case 56: {
            PropertySelector = (global::Claros.Common.Computation.PropertySelectorType) input.ReadEnum();
            break;
          }
          case 64: {
            SuggestedParameterId = input.ReadUInt32();
            break;
          }
          case 72: {
            SuggestedUnitId = input.ReadUInt32();
            break;
          }
          case 80: {
            ColumnId = input.ReadUInt32();
            break;
          }
          case 88: {
            FormFieldId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
