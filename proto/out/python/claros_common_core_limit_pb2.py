# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: claros_common_core_limit.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import claros_common_core_limit_type_pb2 as claros__common__core__limit__type__pb2
import claros_common_recurrence_recurrence_pb2 as claros__common__recurrence__recurrence__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='claros_common_core_limit.proto',
  package='claros.common.core',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x1e\x63laros_common_core_limit.proto\x12\x12\x63laros.common.core\x1a#claros_common_core_limit_type.proto\x1a)claros_common_recurrence_recurrence.proto\"\xa3\x01\n\x05Limit\x12\x0f\n\x07i18nKey\x18\x01 \x01(\t\x12\x30\n\tlimitType\x18\x02 \x01(\x0e\x32\x1d.claros.common.core.LimitType\x12\r\n\x05value\x18\x03 \x01(\x01\x12\x0e\n\x06unitId\x18\x04 \x01(\r\x12\x38\n\nrecurrence\x18\x05 \x01(\x0b\x32$.claros.common.recurrence.Recurrenceb\x06proto3')
  ,
  dependencies=[claros__common__core__limit__type__pb2.DESCRIPTOR,claros__common__recurrence__recurrence__pb2.DESCRIPTOR,])




_LIMIT = _descriptor.Descriptor(
  name='Limit',
  full_name='claros.common.core.Limit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i18nKey', full_name='claros.common.core.Limit.i18nKey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='limitType', full_name='claros.common.core.Limit.limitType', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='claros.common.core.Limit.value', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unitId', full_name='claros.common.core.Limit.unitId', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='recurrence', full_name='claros.common.core.Limit.recurrence', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=135,
  serialized_end=298,
)

_LIMIT.fields_by_name['limitType'].enum_type = claros__common__core__limit__type__pb2._LIMITTYPE
_LIMIT.fields_by_name['recurrence'].message_type = claros__common__recurrence__recurrence__pb2._RECURRENCE
DESCRIPTOR.message_types_by_name['Limit'] = _LIMIT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Limit = _reflection.GeneratedProtocolMessageType('Limit', (_message.Message,), dict(
  DESCRIPTOR = _LIMIT,
  __module__ = 'claros_common_core_limit_pb2'
  # @@protoc_insertion_point(class_scope:claros.common.core.Limit)
  ))
_sym_db.RegisterMessage(Limit)


# @@protoc_insertion_point(module_scope)
