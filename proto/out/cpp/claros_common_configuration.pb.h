// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_configuration.proto

#ifndef PROTOBUF_INCLUDED_claros_5fcommon_5fconfiguration_2eproto
#define PROTOBUF_INCLUDED_claros_5fcommon_5fconfiguration_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "claros_common_datetime.pb.h"
#include "claros_common_enum_entitytype.pb.h"
#include "claros_common_privileges.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fconfiguration_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5fcommon_5fconfiguration_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5fcommon_5fconfiguration_2eproto();
namespace claros {
namespace common {
namespace configuration {
class Configuration;
class ConfigurationDefaultTypeInternal;
extern ConfigurationDefaultTypeInternal _Configuration_default_instance_;
}  // namespace configuration
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::common::configuration::Configuration* Arena::CreateMaybeMessage<::claros::common::configuration::Configuration>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace common {
namespace configuration {

// ===================================================================

class Configuration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.common.configuration.Configuration) */ {
 public:
  Configuration();
  virtual ~Configuration();

  Configuration(const Configuration& from);

  inline Configuration& operator=(const Configuration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Configuration(Configuration&& from) noexcept
    : Configuration() {
    *this = ::std::move(from);
  }

  inline Configuration& operator=(Configuration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Configuration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Configuration* internal_default_instance() {
    return reinterpret_cast<const Configuration*>(
               &_Configuration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Configuration* other);
  friend void swap(Configuration& a, Configuration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Configuration* New() const final {
    return CreateMaybeMessage<Configuration>(nullptr);
  }

  Configuration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Configuration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Configuration& from);
  void MergeFrom(const Configuration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Configuration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .claros.common.configuration.Privileges privileges = 13;
  int privileges_size() const;
  void clear_privileges();
  static const int kPrivilegesFieldNumber = 13;
  ::claros::common::configuration::Privileges* mutable_privileges(int index);
  ::google::protobuf::RepeatedPtrField< ::claros::common::configuration::Privileges >*
      mutable_privileges();
  const ::claros::common::configuration::Privileges& privileges(int index) const;
  ::claros::common::configuration::Privileges* add_privileges();
  const ::google::protobuf::RepeatedPtrField< ::claros::common::configuration::Privileges >&
      privileges() const;

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string createdById = 2;
  void clear_createdbyid();
  static const int kCreatedByIdFieldNumber = 2;
  const ::std::string& createdbyid() const;
  void set_createdbyid(const ::std::string& value);
  #if LANG_CXX11
  void set_createdbyid(::std::string&& value);
  #endif
  void set_createdbyid(const char* value);
  void set_createdbyid(const char* value, size_t size);
  ::std::string* mutable_createdbyid();
  ::std::string* release_createdbyid();
  void set_allocated_createdbyid(::std::string* createdbyid);

  // string modifiedById = 4;
  void clear_modifiedbyid();
  static const int kModifiedByIdFieldNumber = 4;
  const ::std::string& modifiedbyid() const;
  void set_modifiedbyid(const ::std::string& value);
  #if LANG_CXX11
  void set_modifiedbyid(::std::string&& value);
  #endif
  void set_modifiedbyid(const char* value);
  void set_modifiedbyid(const char* value, size_t size);
  ::std::string* mutable_modifiedbyid();
  ::std::string* release_modifiedbyid();
  void set_allocated_modifiedbyid(::std::string* modifiedbyid);

  // string configurationData = 6;
  void clear_configurationdata();
  static const int kConfigurationDataFieldNumber = 6;
  const ::std::string& configurationdata() const;
  void set_configurationdata(const ::std::string& value);
  #if LANG_CXX11
  void set_configurationdata(::std::string&& value);
  #endif
  void set_configurationdata(const char* value);
  void set_configurationdata(const char* value, size_t size);
  ::std::string* mutable_configurationdata();
  ::std::string* release_configurationdata();
  void set_allocated_configurationdata(::std::string* configurationdata);

  // string filterById = 8;
  void clear_filterbyid();
  static const int kFilterByIdFieldNumber = 8;
  const ::std::string& filterbyid() const;
  void set_filterbyid(const ::std::string& value);
  #if LANG_CXX11
  void set_filterbyid(::std::string&& value);
  #endif
  void set_filterbyid(const char* value);
  void set_filterbyid(const char* value, size_t size);
  ::std::string* mutable_filterbyid();
  ::std::string* release_filterbyid();
  void set_allocated_filterbyid(::std::string* filterbyid);

  // string tenantId = 9;
  void clear_tenantid();
  static const int kTenantIdFieldNumber = 9;
  const ::std::string& tenantid() const;
  void set_tenantid(const ::std::string& value);
  #if LANG_CXX11
  void set_tenantid(::std::string&& value);
  #endif
  void set_tenantid(const char* value);
  void set_tenantid(const char* value, size_t size);
  ::std::string* mutable_tenantid();
  ::std::string* release_tenantid();
  void set_allocated_tenantid(::std::string* tenantid);

  // string ownerId = 10;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 10;
  const ::std::string& ownerid() const;
  void set_ownerid(const ::std::string& value);
  #if LANG_CXX11
  void set_ownerid(::std::string&& value);
  #endif
  void set_ownerid(const char* value);
  void set_ownerid(const char* value, size_t size);
  ::std::string* mutable_ownerid();
  ::std::string* release_ownerid();
  void set_allocated_ownerid(::std::string* ownerid);

  // .claros.common.DateTime createdOn = 3;
  bool has_createdon() const;
  void clear_createdon();
  static const int kCreatedOnFieldNumber = 3;
  const ::claros::common::DateTime& createdon() const;
  ::claros::common::DateTime* release_createdon();
  ::claros::common::DateTime* mutable_createdon();
  void set_allocated_createdon(::claros::common::DateTime* createdon);

  // .claros.common.DateTime modifiedOn = 5;
  bool has_modifiedon() const;
  void clear_modifiedon();
  static const int kModifiedOnFieldNumber = 5;
  const ::claros::common::DateTime& modifiedon() const;
  ::claros::common::DateTime* release_modifiedon();
  ::claros::common::DateTime* mutable_modifiedon();
  void set_allocated_modifiedon(::claros::common::DateTime* modifiedon);

  // .claros.common.configuration.EntityType entityTypeId = 7;
  void clear_entitytypeid();
  static const int kEntityTypeIdFieldNumber = 7;
  ::claros::common::configuration::EntityType entitytypeid() const;
  void set_entitytypeid(::claros::common::configuration::EntityType value);

  // bool public = 11;
  void clear_public_();
  static const int kPublicFieldNumber = 11;
  bool public_() const;
  void set_public_(bool value);

  // uint32 version = 12;
  void clear_version();
  static const int kVersionFieldNumber = 12;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:claros.common.configuration.Configuration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::claros::common::configuration::Privileges > privileges_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr createdbyid_;
  ::google::protobuf::internal::ArenaStringPtr modifiedbyid_;
  ::google::protobuf::internal::ArenaStringPtr configurationdata_;
  ::google::protobuf::internal::ArenaStringPtr filterbyid_;
  ::google::protobuf::internal::ArenaStringPtr tenantid_;
  ::google::protobuf::internal::ArenaStringPtr ownerid_;
  ::claros::common::DateTime* createdon_;
  ::claros::common::DateTime* modifiedon_;
  int entitytypeid_;
  bool public__;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5fcommon_5fconfiguration_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Configuration

// string id = 1;
inline void Configuration::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::id() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.id)
  return id_.GetNoArena();
}
inline void Configuration::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.id)
}
#if LANG_CXX11
inline void Configuration::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.configuration.Configuration.id)
}
#endif
inline void Configuration::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.configuration.Configuration.id)
}
inline void Configuration::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.configuration.Configuration.id)
}
inline ::std::string* Configuration::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_id() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.id)
}

// string createdById = 2;
inline void Configuration::clear_createdbyid() {
  createdbyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::createdbyid() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.createdById)
  return createdbyid_.GetNoArena();
}
inline void Configuration::set_createdbyid(const ::std::string& value) {
  
  createdbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.createdById)
}
#if LANG_CXX11
inline void Configuration::set_createdbyid(::std::string&& value) {
  
  createdbyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.configuration.Configuration.createdById)
}
#endif
inline void Configuration::set_createdbyid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  createdbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.configuration.Configuration.createdById)
}
inline void Configuration::set_createdbyid(const char* value, size_t size) {
  
  createdbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.configuration.Configuration.createdById)
}
inline ::std::string* Configuration::mutable_createdbyid() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.createdById)
  return createdbyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_createdbyid() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.createdById)
  
  return createdbyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_createdbyid(::std::string* createdbyid) {
  if (createdbyid != nullptr) {
    
  } else {
    
  }
  createdbyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createdbyid);
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.createdById)
}

// .claros.common.DateTime createdOn = 3;
inline bool Configuration::has_createdon() const {
  return this != internal_default_instance() && createdon_ != nullptr;
}
inline const ::claros::common::DateTime& Configuration::createdon() const {
  const ::claros::common::DateTime* p = createdon_;
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.createdOn)
  return p != nullptr ? *p : *reinterpret_cast<const ::claros::common::DateTime*>(
      &::claros::common::_DateTime_default_instance_);
}
inline ::claros::common::DateTime* Configuration::release_createdon() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.createdOn)
  
  ::claros::common::DateTime* temp = createdon_;
  createdon_ = nullptr;
  return temp;
}
inline ::claros::common::DateTime* Configuration::mutable_createdon() {
  
  if (createdon_ == nullptr) {
    auto* p = CreateMaybeMessage<::claros::common::DateTime>(GetArenaNoVirtual());
    createdon_ = p;
  }
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.createdOn)
  return createdon_;
}
inline void Configuration::set_allocated_createdon(::claros::common::DateTime* createdon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(createdon_);
  }
  if (createdon) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      createdon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, createdon, submessage_arena);
    }
    
  } else {
    
  }
  createdon_ = createdon;
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.createdOn)
}

// string modifiedById = 4;
inline void Configuration::clear_modifiedbyid() {
  modifiedbyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::modifiedbyid() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.modifiedById)
  return modifiedbyid_.GetNoArena();
}
inline void Configuration::set_modifiedbyid(const ::std::string& value) {
  
  modifiedbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.modifiedById)
}
#if LANG_CXX11
inline void Configuration::set_modifiedbyid(::std::string&& value) {
  
  modifiedbyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.configuration.Configuration.modifiedById)
}
#endif
inline void Configuration::set_modifiedbyid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  modifiedbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.configuration.Configuration.modifiedById)
}
inline void Configuration::set_modifiedbyid(const char* value, size_t size) {
  
  modifiedbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.configuration.Configuration.modifiedById)
}
inline ::std::string* Configuration::mutable_modifiedbyid() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.modifiedById)
  return modifiedbyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_modifiedbyid() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.modifiedById)
  
  return modifiedbyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_modifiedbyid(::std::string* modifiedbyid) {
  if (modifiedbyid != nullptr) {
    
  } else {
    
  }
  modifiedbyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modifiedbyid);
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.modifiedById)
}

// .claros.common.DateTime modifiedOn = 5;
inline bool Configuration::has_modifiedon() const {
  return this != internal_default_instance() && modifiedon_ != nullptr;
}
inline const ::claros::common::DateTime& Configuration::modifiedon() const {
  const ::claros::common::DateTime* p = modifiedon_;
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.modifiedOn)
  return p != nullptr ? *p : *reinterpret_cast<const ::claros::common::DateTime*>(
      &::claros::common::_DateTime_default_instance_);
}
inline ::claros::common::DateTime* Configuration::release_modifiedon() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.modifiedOn)
  
  ::claros::common::DateTime* temp = modifiedon_;
  modifiedon_ = nullptr;
  return temp;
}
inline ::claros::common::DateTime* Configuration::mutable_modifiedon() {
  
  if (modifiedon_ == nullptr) {
    auto* p = CreateMaybeMessage<::claros::common::DateTime>(GetArenaNoVirtual());
    modifiedon_ = p;
  }
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.modifiedOn)
  return modifiedon_;
}
inline void Configuration::set_allocated_modifiedon(::claros::common::DateTime* modifiedon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(modifiedon_);
  }
  if (modifiedon) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      modifiedon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, modifiedon, submessage_arena);
    }
    
  } else {
    
  }
  modifiedon_ = modifiedon;
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.modifiedOn)
}

// string configurationData = 6;
inline void Configuration::clear_configurationdata() {
  configurationdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::configurationdata() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.configurationData)
  return configurationdata_.GetNoArena();
}
inline void Configuration::set_configurationdata(const ::std::string& value) {
  
  configurationdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.configurationData)
}
#if LANG_CXX11
inline void Configuration::set_configurationdata(::std::string&& value) {
  
  configurationdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.configuration.Configuration.configurationData)
}
#endif
inline void Configuration::set_configurationdata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  configurationdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.configuration.Configuration.configurationData)
}
inline void Configuration::set_configurationdata(const char* value, size_t size) {
  
  configurationdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.configuration.Configuration.configurationData)
}
inline ::std::string* Configuration::mutable_configurationdata() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.configurationData)
  return configurationdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_configurationdata() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.configurationData)
  
  return configurationdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_configurationdata(::std::string* configurationdata) {
  if (configurationdata != nullptr) {
    
  } else {
    
  }
  configurationdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), configurationdata);
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.configurationData)
}

// .claros.common.configuration.EntityType entityTypeId = 7;
inline void Configuration::clear_entitytypeid() {
  entitytypeid_ = 0;
}
inline ::claros::common::configuration::EntityType Configuration::entitytypeid() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.entityTypeId)
  return static_cast< ::claros::common::configuration::EntityType >(entitytypeid_);
}
inline void Configuration::set_entitytypeid(::claros::common::configuration::EntityType value) {
  
  entitytypeid_ = value;
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.entityTypeId)
}

// string filterById = 8;
inline void Configuration::clear_filterbyid() {
  filterbyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::filterbyid() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.filterById)
  return filterbyid_.GetNoArena();
}
inline void Configuration::set_filterbyid(const ::std::string& value) {
  
  filterbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.filterById)
}
#if LANG_CXX11
inline void Configuration::set_filterbyid(::std::string&& value) {
  
  filterbyid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.configuration.Configuration.filterById)
}
#endif
inline void Configuration::set_filterbyid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filterbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.configuration.Configuration.filterById)
}
inline void Configuration::set_filterbyid(const char* value, size_t size) {
  
  filterbyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.configuration.Configuration.filterById)
}
inline ::std::string* Configuration::mutable_filterbyid() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.filterById)
  return filterbyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_filterbyid() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.filterById)
  
  return filterbyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_filterbyid(::std::string* filterbyid) {
  if (filterbyid != nullptr) {
    
  } else {
    
  }
  filterbyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filterbyid);
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.filterById)
}

// string tenantId = 9;
inline void Configuration::clear_tenantid() {
  tenantid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::tenantid() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.tenantId)
  return tenantid_.GetNoArena();
}
inline void Configuration::set_tenantid(const ::std::string& value) {
  
  tenantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.tenantId)
}
#if LANG_CXX11
inline void Configuration::set_tenantid(::std::string&& value) {
  
  tenantid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.configuration.Configuration.tenantId)
}
#endif
inline void Configuration::set_tenantid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tenantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.configuration.Configuration.tenantId)
}
inline void Configuration::set_tenantid(const char* value, size_t size) {
  
  tenantid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.configuration.Configuration.tenantId)
}
inline ::std::string* Configuration::mutable_tenantid() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.tenantId)
  return tenantid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_tenantid() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.tenantId)
  
  return tenantid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_tenantid(::std::string* tenantid) {
  if (tenantid != nullptr) {
    
  } else {
    
  }
  tenantid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tenantid);
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.tenantId)
}

// string ownerId = 10;
inline void Configuration::clear_ownerid() {
  ownerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Configuration::ownerid() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.ownerId)
  return ownerid_.GetNoArena();
}
inline void Configuration::set_ownerid(const ::std::string& value) {
  
  ownerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.ownerId)
}
#if LANG_CXX11
inline void Configuration::set_ownerid(::std::string&& value) {
  
  ownerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.configuration.Configuration.ownerId)
}
#endif
inline void Configuration::set_ownerid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ownerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.configuration.Configuration.ownerId)
}
inline void Configuration::set_ownerid(const char* value, size_t size) {
  
  ownerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.configuration.Configuration.ownerId)
}
inline ::std::string* Configuration::mutable_ownerid() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.ownerId)
  return ownerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Configuration::release_ownerid() {
  // @@protoc_insertion_point(field_release:claros.common.configuration.Configuration.ownerId)
  
  return ownerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Configuration::set_allocated_ownerid(::std::string* ownerid) {
  if (ownerid != nullptr) {
    
  } else {
    
  }
  ownerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownerid);
  // @@protoc_insertion_point(field_set_allocated:claros.common.configuration.Configuration.ownerId)
}

// bool public = 11;
inline void Configuration::clear_public_() {
  public__ = false;
}
inline bool Configuration::public_() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.public)
  return public__;
}
inline void Configuration::set_public_(bool value) {
  
  public__ = value;
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.public)
}

// uint32 version = 12;
inline void Configuration::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 Configuration::version() const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.version)
  return version_;
}
inline void Configuration::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:claros.common.configuration.Configuration.version)
}

// repeated .claros.common.configuration.Privileges privileges = 13;
inline int Configuration::privileges_size() const {
  return privileges_.size();
}
inline ::claros::common::configuration::Privileges* Configuration::mutable_privileges(int index) {
  // @@protoc_insertion_point(field_mutable:claros.common.configuration.Configuration.privileges)
  return privileges_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::claros::common::configuration::Privileges >*
Configuration::mutable_privileges() {
  // @@protoc_insertion_point(field_mutable_list:claros.common.configuration.Configuration.privileges)
  return &privileges_;
}
inline const ::claros::common::configuration::Privileges& Configuration::privileges(int index) const {
  // @@protoc_insertion_point(field_get:claros.common.configuration.Configuration.privileges)
  return privileges_.Get(index);
}
inline ::claros::common::configuration::Privileges* Configuration::add_privileges() {
  // @@protoc_insertion_point(field_add:claros.common.configuration.Configuration.privileges)
  return privileges_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::claros::common::configuration::Privileges >&
Configuration::privileges() const {
  // @@protoc_insertion_point(field_list:claros.common.configuration.Configuration.privileges)
  return privileges_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace configuration
}  // namespace common
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5fcommon_5fconfiguration_2eproto
