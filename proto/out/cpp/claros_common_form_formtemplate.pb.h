// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_form_formtemplate.proto

#ifndef PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformtemplate_2eproto
#define PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformtemplate_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "claros_common_form_formtemplateconfiguration.pb.h"
#include "claros_common_configuration_rights.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fformtemplate_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5fcommon_5fform_5fformtemplate_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5fcommon_5fform_5fformtemplate_2eproto();
namespace claros {
namespace common {
namespace form {
class FormTemplate;
class FormTemplateDefaultTypeInternal;
extern FormTemplateDefaultTypeInternal _FormTemplate_default_instance_;
class FormTemplate_PrivilegesEntry_DoNotUse;
class FormTemplate_PrivilegesEntry_DoNotUseDefaultTypeInternal;
extern FormTemplate_PrivilegesEntry_DoNotUseDefaultTypeInternal _FormTemplate_PrivilegesEntry_DoNotUse_default_instance_;
}  // namespace form
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::common::form::FormTemplate* Arena::CreateMaybeMessage<::claros::common::form::FormTemplate>(Arena*);
template<> ::claros::common::form::FormTemplate_PrivilegesEntry_DoNotUse* Arena::CreateMaybeMessage<::claros::common::form::FormTemplate_PrivilegesEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace common {
namespace form {

// ===================================================================

class FormTemplate_PrivilegesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<FormTemplate_PrivilegesEntry_DoNotUse, 
    ::std::string, ::claros::common::configuration::Rights,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<FormTemplate_PrivilegesEntry_DoNotUse, 
    ::std::string, ::claros::common::configuration::Rights,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  FormTemplate_PrivilegesEntry_DoNotUse();
  FormTemplate_PrivilegesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const FormTemplate_PrivilegesEntry_DoNotUse& other);
  static const FormTemplate_PrivilegesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const FormTemplate_PrivilegesEntry_DoNotUse*>(&_FormTemplate_PrivilegesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class FormTemplate :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.common.form.FormTemplate) */ {
 public:
  FormTemplate();
  virtual ~FormTemplate();

  FormTemplate(const FormTemplate& from);

  inline FormTemplate& operator=(const FormTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FormTemplate(FormTemplate&& from) noexcept
    : FormTemplate() {
    *this = ::std::move(from);
  }

  inline FormTemplate& operator=(FormTemplate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FormTemplate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FormTemplate* internal_default_instance() {
    return reinterpret_cast<const FormTemplate*>(
               &_FormTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FormTemplate* other);
  friend void swap(FormTemplate& a, FormTemplate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FormTemplate* New() const final {
    return CreateMaybeMessage<FormTemplate>(nullptr);
  }

  FormTemplate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FormTemplate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FormTemplate& from);
  void MergeFrom(const FormTemplate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FormTemplate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .claros.common.configuration.Rights> privileges = 5;
  int privileges_size() const;
  void clear_privileges();
  static const int kPrivilegesFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >&
      privileges() const;
  ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >*
      mutable_privileges();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string ownerId = 2;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 2;
  const ::std::string& ownerid() const;
  void set_ownerid(const ::std::string& value);
  #if LANG_CXX11
  void set_ownerid(::std::string&& value);
  #endif
  void set_ownerid(const char* value);
  void set_ownerid(const char* value, size_t size);
  ::std::string* mutable_ownerid();
  ::std::string* release_ownerid();
  void set_allocated_ownerid(::std::string* ownerid);

  // .claros.common.form.FormTemplateConfiguration formTemplateConfiguration = 6;
  bool has_formtemplateconfiguration() const;
  void clear_formtemplateconfiguration();
  static const int kFormTemplateConfigurationFieldNumber = 6;
  const ::claros::common::form::FormTemplateConfiguration& formtemplateconfiguration() const;
  ::claros::common::form::FormTemplateConfiguration* release_formtemplateconfiguration();
  ::claros::common::form::FormTemplateConfiguration* mutable_formtemplateconfiguration();
  void set_allocated_formtemplateconfiguration(::claros::common::form::FormTemplateConfiguration* formtemplateconfiguration);

  // bool public = 3;
  void clear_public_();
  static const int kPublicFieldNumber = 3;
  bool public_() const;
  void set_public_(bool value);

  // uint32 version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:claros.common.form.FormTemplate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      FormTemplate_PrivilegesEntry_DoNotUse,
      ::std::string, ::claros::common::configuration::Rights,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > privileges_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr ownerid_;
  ::claros::common::form::FormTemplateConfiguration* formtemplateconfiguration_;
  bool public__;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5fcommon_5fform_5fformtemplate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FormTemplate

// string id = 1;
inline void FormTemplate::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FormTemplate::id() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplate.id)
  return id_.GetNoArena();
}
inline void FormTemplate::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.form.FormTemplate.id)
}
#if LANG_CXX11
inline void FormTemplate::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.form.FormTemplate.id)
}
#endif
inline void FormTemplate::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.form.FormTemplate.id)
}
inline void FormTemplate::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.form.FormTemplate.id)
}
inline ::std::string* FormTemplate::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormTemplate.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FormTemplate::release_id() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormTemplate.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FormTemplate::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormTemplate.id)
}

// string ownerId = 2;
inline void FormTemplate::clear_ownerid() {
  ownerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FormTemplate::ownerid() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplate.ownerId)
  return ownerid_.GetNoArena();
}
inline void FormTemplate::set_ownerid(const ::std::string& value) {
  
  ownerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.form.FormTemplate.ownerId)
}
#if LANG_CXX11
inline void FormTemplate::set_ownerid(::std::string&& value) {
  
  ownerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.form.FormTemplate.ownerId)
}
#endif
inline void FormTemplate::set_ownerid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ownerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.form.FormTemplate.ownerId)
}
inline void FormTemplate::set_ownerid(const char* value, size_t size) {
  
  ownerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.form.FormTemplate.ownerId)
}
inline ::std::string* FormTemplate::mutable_ownerid() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormTemplate.ownerId)
  return ownerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FormTemplate::release_ownerid() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormTemplate.ownerId)
  
  return ownerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FormTemplate::set_allocated_ownerid(::std::string* ownerid) {
  if (ownerid != nullptr) {
    
  } else {
    
  }
  ownerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ownerid);
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormTemplate.ownerId)
}

// bool public = 3;
inline void FormTemplate::clear_public_() {
  public__ = false;
}
inline bool FormTemplate::public_() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplate.public)
  return public__;
}
inline void FormTemplate::set_public_(bool value) {
  
  public__ = value;
  // @@protoc_insertion_point(field_set:claros.common.form.FormTemplate.public)
}

// uint32 version = 4;
inline void FormTemplate::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 FormTemplate::version() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplate.version)
  return version_;
}
inline void FormTemplate::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:claros.common.form.FormTemplate.version)
}

// map<string, .claros.common.configuration.Rights> privileges = 5;
inline int FormTemplate::privileges_size() const {
  return privileges_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >&
FormTemplate::privileges() const {
  // @@protoc_insertion_point(field_map:claros.common.form.FormTemplate.privileges)
  return privileges_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >*
FormTemplate::mutable_privileges() {
  // @@protoc_insertion_point(field_mutable_map:claros.common.form.FormTemplate.privileges)
  return privileges_.MutableMap();
}

// .claros.common.form.FormTemplateConfiguration formTemplateConfiguration = 6;
inline bool FormTemplate::has_formtemplateconfiguration() const {
  return this != internal_default_instance() && formtemplateconfiguration_ != nullptr;
}
inline const ::claros::common::form::FormTemplateConfiguration& FormTemplate::formtemplateconfiguration() const {
  const ::claros::common::form::FormTemplateConfiguration* p = formtemplateconfiguration_;
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplate.formTemplateConfiguration)
  return p != nullptr ? *p : *reinterpret_cast<const ::claros::common::form::FormTemplateConfiguration*>(
      &::claros::common::form::_FormTemplateConfiguration_default_instance_);
}
inline ::claros::common::form::FormTemplateConfiguration* FormTemplate::release_formtemplateconfiguration() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormTemplate.formTemplateConfiguration)
  
  ::claros::common::form::FormTemplateConfiguration* temp = formtemplateconfiguration_;
  formtemplateconfiguration_ = nullptr;
  return temp;
}
inline ::claros::common::form::FormTemplateConfiguration* FormTemplate::mutable_formtemplateconfiguration() {
  
  if (formtemplateconfiguration_ == nullptr) {
    auto* p = CreateMaybeMessage<::claros::common::form::FormTemplateConfiguration>(GetArenaNoVirtual());
    formtemplateconfiguration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormTemplate.formTemplateConfiguration)
  return formtemplateconfiguration_;
}
inline void FormTemplate::set_allocated_formtemplateconfiguration(::claros::common::form::FormTemplateConfiguration* formtemplateconfiguration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(formtemplateconfiguration_);
  }
  if (formtemplateconfiguration) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      formtemplateconfiguration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, formtemplateconfiguration, submessage_arena);
    }
    
  } else {
    
  }
  formtemplateconfiguration_ = formtemplateconfiguration;
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormTemplate.formTemplateConfiguration)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace form
}  // namespace common
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformtemplate_2eproto
