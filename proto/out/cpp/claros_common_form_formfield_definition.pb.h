// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_form_formfield_definition.proto

#ifndef PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto
#define PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "claros_common_form_formdataentry_type.pb.h"
#include "claros_common_form_field_worksheet_column_UTC.pb.h"
#include "claros_common_form_field_text_repeated.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto();
namespace claros {
namespace common {
namespace form {
class FormFieldDefinition;
class FormFieldDefinitionDefaultTypeInternal;
extern FormFieldDefinitionDefaultTypeInternal _FormFieldDefinition_default_instance_;
}  // namespace form
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::common::form::FormFieldDefinition* Arena::CreateMaybeMessage<::claros::common::form::FormFieldDefinition>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace common {
namespace form {

// ===================================================================

class FormFieldDefinition :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.common.form.FormFieldDefinition) */ {
 public:
  FormFieldDefinition();
  virtual ~FormFieldDefinition();

  FormFieldDefinition(const FormFieldDefinition& from);

  inline FormFieldDefinition& operator=(const FormFieldDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FormFieldDefinition(FormFieldDefinition&& from) noexcept
    : FormFieldDefinition() {
    *this = ::std::move(from);
  }

  inline FormFieldDefinition& operator=(FormFieldDefinition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FormFieldDefinition& default_instance();

  enum FieldDefinitionCase {
    kColumn = 5,
    kTextRepeated = 6,
    FIELDDEFINITION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FormFieldDefinition* internal_default_instance() {
    return reinterpret_cast<const FormFieldDefinition*>(
               &_FormFieldDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FormFieldDefinition* other);
  friend void swap(FormFieldDefinition& a, FormFieldDefinition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FormFieldDefinition* New() const final {
    return CreateMaybeMessage<FormFieldDefinition>(nullptr);
  }

  FormFieldDefinition* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FormFieldDefinition>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FormFieldDefinition& from);
  void MergeFrom(const FormFieldDefinition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FormFieldDefinition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // string name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .claros.common.form.FormDataEntryType formDataEntryType = 2;
  void clear_formdataentrytype();
  static const int kFormDataEntryTypeFieldNumber = 2;
  ::claros::common::form::FormDataEntryType formdataentrytype() const;
  void set_formdataentrytype(::claros::common::form::FormDataEntryType value);

  // bool isDataEntryTypeLocked = 3;
  void clear_isdataentrytypelocked();
  static const int kIsDataEntryTypeLockedFieldNumber = 3;
  bool isdataentrytypelocked() const;
  void set_isdataentrytypelocked(bool value);

  // .claros.common.form.FormFieldWorksheetColumnUTC column = 5;
  bool has_column() const;
  void clear_column();
  static const int kColumnFieldNumber = 5;
  const ::claros::common::form::FormFieldWorksheetColumnUTC& column() const;
  ::claros::common::form::FormFieldWorksheetColumnUTC* release_column();
  ::claros::common::form::FormFieldWorksheetColumnUTC* mutable_column();
  void set_allocated_column(::claros::common::form::FormFieldWorksheetColumnUTC* column);

  // .claros.common.form.FormFieldTextRepeated textRepeated = 6;
  bool has_textrepeated() const;
  void clear_textrepeated();
  static const int kTextRepeatedFieldNumber = 6;
  const ::claros::common::form::FormFieldTextRepeated& textrepeated() const;
  ::claros::common::form::FormFieldTextRepeated* release_textrepeated();
  ::claros::common::form::FormFieldTextRepeated* mutable_textrepeated();
  void set_allocated_textrepeated(::claros::common::form::FormFieldTextRepeated* textrepeated);

  void clear_fieldDefinition();
  FieldDefinitionCase fieldDefinition_case() const;
  // @@protoc_insertion_point(class_scope:claros.common.form.FormFieldDefinition)
 private:
  class HasBitSetters;
  void set_has_column();
  void set_has_textrepeated();

  inline bool has_fieldDefinition() const;
  inline void clear_has_fieldDefinition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int formdataentrytype_;
  bool isdataentrytypelocked_;
  union FieldDefinitionUnion {
    FieldDefinitionUnion() {}
    ::claros::common::form::FormFieldWorksheetColumnUTC* column_;
    ::claros::common::form::FormFieldTextRepeated* textrepeated_;
  } fieldDefinition_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FormFieldDefinition

// string guid = 1;
inline void FormFieldDefinition::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FormFieldDefinition::guid() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormFieldDefinition.guid)
  return guid_.GetNoArena();
}
inline void FormFieldDefinition::set_guid(const ::std::string& value) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.form.FormFieldDefinition.guid)
}
#if LANG_CXX11
inline void FormFieldDefinition::set_guid(::std::string&& value) {
  
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.form.FormFieldDefinition.guid)
}
#endif
inline void FormFieldDefinition::set_guid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.form.FormFieldDefinition.guid)
}
inline void FormFieldDefinition::set_guid(const char* value, size_t size) {
  
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.form.FormFieldDefinition.guid)
}
inline ::std::string* FormFieldDefinition::mutable_guid() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormFieldDefinition.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FormFieldDefinition::release_guid() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormFieldDefinition.guid)
  
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FormFieldDefinition::set_allocated_guid(::std::string* guid) {
  if (guid != nullptr) {
    
  } else {
    
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormFieldDefinition.guid)
}

// .claros.common.form.FormDataEntryType formDataEntryType = 2;
inline void FormFieldDefinition::clear_formdataentrytype() {
  formdataentrytype_ = 0;
}
inline ::claros::common::form::FormDataEntryType FormFieldDefinition::formdataentrytype() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormFieldDefinition.formDataEntryType)
  return static_cast< ::claros::common::form::FormDataEntryType >(formdataentrytype_);
}
inline void FormFieldDefinition::set_formdataentrytype(::claros::common::form::FormDataEntryType value) {
  
  formdataentrytype_ = value;
  // @@protoc_insertion_point(field_set:claros.common.form.FormFieldDefinition.formDataEntryType)
}

// bool isDataEntryTypeLocked = 3;
inline void FormFieldDefinition::clear_isdataentrytypelocked() {
  isdataentrytypelocked_ = false;
}
inline bool FormFieldDefinition::isdataentrytypelocked() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormFieldDefinition.isDataEntryTypeLocked)
  return isdataentrytypelocked_;
}
inline void FormFieldDefinition::set_isdataentrytypelocked(bool value) {
  
  isdataentrytypelocked_ = value;
  // @@protoc_insertion_point(field_set:claros.common.form.FormFieldDefinition.isDataEntryTypeLocked)
}

// string name = 4;
inline void FormFieldDefinition::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FormFieldDefinition::name() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormFieldDefinition.name)
  return name_.GetNoArena();
}
inline void FormFieldDefinition::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.form.FormFieldDefinition.name)
}
#if LANG_CXX11
inline void FormFieldDefinition::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.form.FormFieldDefinition.name)
}
#endif
inline void FormFieldDefinition::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.form.FormFieldDefinition.name)
}
inline void FormFieldDefinition::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.form.FormFieldDefinition.name)
}
inline ::std::string* FormFieldDefinition::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormFieldDefinition.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FormFieldDefinition::release_name() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormFieldDefinition.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FormFieldDefinition::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormFieldDefinition.name)
}

// .claros.common.form.FormFieldWorksheetColumnUTC column = 5;
inline bool FormFieldDefinition::has_column() const {
  return fieldDefinition_case() == kColumn;
}
inline void FormFieldDefinition::set_has_column() {
  _oneof_case_[0] = kColumn;
}
inline ::claros::common::form::FormFieldWorksheetColumnUTC* FormFieldDefinition::release_column() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormFieldDefinition.column)
  if (has_column()) {
    clear_has_fieldDefinition();
      ::claros::common::form::FormFieldWorksheetColumnUTC* temp = fieldDefinition_.column_;
    fieldDefinition_.column_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::claros::common::form::FormFieldWorksheetColumnUTC& FormFieldDefinition::column() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormFieldDefinition.column)
  return has_column()
      ? *fieldDefinition_.column_
      : *reinterpret_cast< ::claros::common::form::FormFieldWorksheetColumnUTC*>(&::claros::common::form::_FormFieldWorksheetColumnUTC_default_instance_);
}
inline ::claros::common::form::FormFieldWorksheetColumnUTC* FormFieldDefinition::mutable_column() {
  if (!has_column()) {
    clear_fieldDefinition();
    set_has_column();
    fieldDefinition_.column_ = CreateMaybeMessage< ::claros::common::form::FormFieldWorksheetColumnUTC >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormFieldDefinition.column)
  return fieldDefinition_.column_;
}

// .claros.common.form.FormFieldTextRepeated textRepeated = 6;
inline bool FormFieldDefinition::has_textrepeated() const {
  return fieldDefinition_case() == kTextRepeated;
}
inline void FormFieldDefinition::set_has_textrepeated() {
  _oneof_case_[0] = kTextRepeated;
}
inline ::claros::common::form::FormFieldTextRepeated* FormFieldDefinition::release_textrepeated() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormFieldDefinition.textRepeated)
  if (has_textrepeated()) {
    clear_has_fieldDefinition();
      ::claros::common::form::FormFieldTextRepeated* temp = fieldDefinition_.textrepeated_;
    fieldDefinition_.textrepeated_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::claros::common::form::FormFieldTextRepeated& FormFieldDefinition::textrepeated() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormFieldDefinition.textRepeated)
  return has_textrepeated()
      ? *fieldDefinition_.textrepeated_
      : *reinterpret_cast< ::claros::common::form::FormFieldTextRepeated*>(&::claros::common::form::_FormFieldTextRepeated_default_instance_);
}
inline ::claros::common::form::FormFieldTextRepeated* FormFieldDefinition::mutable_textrepeated() {
  if (!has_textrepeated()) {
    clear_fieldDefinition();
    set_has_textrepeated();
    fieldDefinition_.textrepeated_ = CreateMaybeMessage< ::claros::common::form::FormFieldTextRepeated >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormFieldDefinition.textRepeated)
  return fieldDefinition_.textrepeated_;
}

inline bool FormFieldDefinition::has_fieldDefinition() const {
  return fieldDefinition_case() != FIELDDEFINITION_NOT_SET;
}
inline void FormFieldDefinition::clear_has_fieldDefinition() {
  _oneof_case_[0] = FIELDDEFINITION_NOT_SET;
}
inline FormFieldDefinition::FieldDefinitionCase FormFieldDefinition::fieldDefinition_case() const {
  return FormFieldDefinition::FieldDefinitionCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace form
}  // namespace common
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto
