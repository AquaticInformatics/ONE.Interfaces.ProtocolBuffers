// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_core_networkdata.proto

#include "claros_common_core_networkdata.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fclarosdatetime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClarosDateTime_claros_5fcommon_5fcore_5fclarosdatetime_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fnetworkdata_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_NetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fnote_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Note_claros_5fcommon_5fcore_5fnote_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fform_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Form_claros_5fcommon_5fform_5fform_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fformtemplate_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FormTemplate_claros_5fcommon_5fform_5fformtemplate_2eproto;
namespace claros {
namespace common {
namespace core {
class NetworkData_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkData_Response> _instance;
  const ::claros::common::form::FormTemplate* formtemplate_;
  const ::claros::common::form::Form* form_;
  const ::claros::common::core::ClarosDateTime* datetime_;
  const ::claros::common::core::Note* note_;
} _NetworkData_Response_default_instance_;
class NetworkDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkData> _instance;
} _NetworkData_default_instance_;
}  // namespace core
}  // namespace common
}  // namespace claros
static void InitDefaultsNetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::common::core::_NetworkData_Response_default_instance_;
    new (ptr) ::claros::common::core::NetworkData_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::common::core::NetworkData_Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_NetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsNetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto}, {
      &scc_info_FormTemplate_claros_5fcommon_5fform_5fformtemplate_2eproto.base,
      &scc_info_Form_claros_5fcommon_5fform_5fform_2eproto.base,
      &scc_info_ClarosDateTime_claros_5fcommon_5fcore_5fclarosdatetime_2eproto.base,
      &scc_info_Note_claros_5fcommon_5fcore_5fnote_2eproto.base,}};

static void InitDefaultsNetworkData_claros_5fcommon_5fcore_5fnetworkdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::common::core::_NetworkData_default_instance_;
    new (ptr) ::claros::common::core::NetworkData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::common::core::NetworkData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NetworkData_claros_5fcommon_5fcore_5fnetworkdata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNetworkData_claros_5fcommon_5fcore_5fnetworkdata_2eproto}, {
      &scc_info_NetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto.base,}};

void InitDefaults_claros_5fcommon_5fcore_5fnetworkdata_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetworkData_claros_5fcommon_5fcore_5fnetworkdata_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5fcommon_5fcore_5fnetworkdata_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5fcommon_5fcore_5fnetworkdata_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5fcommon_5fcore_5fnetworkdata_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5fcommon_5fcore_5fnetworkdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::common::core::NetworkData_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::claros::common::core::NetworkData_Response, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::claros::common::core::NetworkData_ResponseDefaultTypeInternal, formtemplate_),
  offsetof(::claros::common::core::NetworkData_ResponseDefaultTypeInternal, form_),
  offsetof(::claros::common::core::NetworkData_ResponseDefaultTypeInternal, datetime_),
  offsetof(::claros::common::core::NetworkData_ResponseDefaultTypeInternal, note_),
  PROTOBUF_FIELD_OFFSET(::claros::common::core::NetworkData_Response, response_one_of_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::common::core::NetworkData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::common::core::NetworkData, responses_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::common::core::NetworkData_Response)},
  { 10, -1, sizeof(::claros::common::core::NetworkData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::common::core::_NetworkData_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::common::core::_NetworkData_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5fcommon_5fcore_5fnetworkdata_2eproto = {
  {}, AddDescriptors_claros_5fcommon_5fcore_5fnetworkdata_2eproto, "claros_common_core_networkdata.proto", schemas,
  file_default_instances, TableStruct_claros_5fcommon_5fcore_5fnetworkdata_2eproto::offsets,
  file_level_metadata_claros_5fcommon_5fcore_5fnetworkdata_2eproto, 2, file_level_enum_descriptors_claros_5fcommon_5fcore_5fnetworkdata_2eproto, file_level_service_descriptors_claros_5fcommon_5fcore_5fnetworkdata_2eproto,
};

const char descriptor_table_protodef_claros_5fcommon_5fcore_5fnetworkdata_2eproto[] =
  "\n$claros_common_core_networkdata.proto\022\022"
  "claros.common.core\032%claros_common_form_f"
  "ormtemplate.proto\032\035claros_common_form_fo"
  "rm.proto\032\'claros_common_core_clarosdatet"
  "ime.proto\032\035claros_common_core_note.proto"
  "\"\260\002\n\013NetworkData\022;\n\tresponses\030\001 \003(\0132(.cl"
  "aros.common.core.NetworkData.Response\032\343\001"
  "\n\010Response\0228\n\014formTemplate\030\002 \001(\0132 .claro"
  "s.common.form.FormTemplateH\000\022(\n\004form\030\003 \001"
  "(\0132\030.claros.common.form.FormH\000\0226\n\010dateTi"
  "me\030\004 \001(\0132\".claros.common.core.ClarosDate"
  "TimeH\000\022(\n\004note\030\005 \001(\0132\030.claros.common.cor"
  "e.NoteH\000B\021\n\017response_one_ofb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5fcommon_5fcore_5fnetworkdata_2eproto = {
  false, InitDefaults_claros_5fcommon_5fcore_5fnetworkdata_2eproto, 
  descriptor_table_protodef_claros_5fcommon_5fcore_5fnetworkdata_2eproto,
  "claros_common_core_networkdata.proto", &assign_descriptors_table_claros_5fcommon_5fcore_5fnetworkdata_2eproto, 515,
};

void AddDescriptors_claros_5fcommon_5fcore_5fnetworkdata_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[4] =
  {
    ::AddDescriptors_claros_5fcommon_5fform_5fformtemplate_2eproto,
    ::AddDescriptors_claros_5fcommon_5fform_5fform_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcore_5fclarosdatetime_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcore_5fnote_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5fcommon_5fcore_5fnetworkdata_2eproto, deps, 4);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5fcommon_5fcore_5fnetworkdata_2eproto = []() { AddDescriptors_claros_5fcommon_5fcore_5fnetworkdata_2eproto(); return true; }();
namespace claros {
namespace common {
namespace core {

// ===================================================================

void NetworkData_Response::InitAsDefaultInstance() {
  ::claros::common::core::_NetworkData_Response_default_instance_.formtemplate_ = const_cast< ::claros::common::form::FormTemplate*>(
      ::claros::common::form::FormTemplate::internal_default_instance());
  ::claros::common::core::_NetworkData_Response_default_instance_.form_ = const_cast< ::claros::common::form::Form*>(
      ::claros::common::form::Form::internal_default_instance());
  ::claros::common::core::_NetworkData_Response_default_instance_.datetime_ = const_cast< ::claros::common::core::ClarosDateTime*>(
      ::claros::common::core::ClarosDateTime::internal_default_instance());
  ::claros::common::core::_NetworkData_Response_default_instance_.note_ = const_cast< ::claros::common::core::Note*>(
      ::claros::common::core::Note::internal_default_instance());
}
class NetworkData_Response::HasBitSetters {
 public:
  static const ::claros::common::form::FormTemplate& formtemplate(const NetworkData_Response* msg);
  static const ::claros::common::form::Form& form(const NetworkData_Response* msg);
  static const ::claros::common::core::ClarosDateTime& datetime(const NetworkData_Response* msg);
  static const ::claros::common::core::Note& note(const NetworkData_Response* msg);
};

const ::claros::common::form::FormTemplate&
NetworkData_Response::HasBitSetters::formtemplate(const NetworkData_Response* msg) {
  return *msg->response_one_of_.formtemplate_;
}
const ::claros::common::form::Form&
NetworkData_Response::HasBitSetters::form(const NetworkData_Response* msg) {
  return *msg->response_one_of_.form_;
}
const ::claros::common::core::ClarosDateTime&
NetworkData_Response::HasBitSetters::datetime(const NetworkData_Response* msg) {
  return *msg->response_one_of_.datetime_;
}
const ::claros::common::core::Note&
NetworkData_Response::HasBitSetters::note(const NetworkData_Response* msg) {
  return *msg->response_one_of_.note_;
}
void NetworkData_Response::set_allocated_formtemplate(::claros::common::form::FormTemplate* formtemplate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response_one_of();
  if (formtemplate) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      formtemplate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, formtemplate, submessage_arena);
    }
    set_has_formtemplate();
    response_one_of_.formtemplate_ = formtemplate;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.common.core.NetworkData.Response.formTemplate)
}
void NetworkData_Response::clear_formtemplate() {
  if (has_formtemplate()) {
    delete response_one_of_.formtemplate_;
    clear_has_response_one_of();
  }
}
void NetworkData_Response::set_allocated_form(::claros::common::form::Form* form) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response_one_of();
  if (form) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      form = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, form, submessage_arena);
    }
    set_has_form();
    response_one_of_.form_ = form;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.common.core.NetworkData.Response.form)
}
void NetworkData_Response::clear_form() {
  if (has_form()) {
    delete response_one_of_.form_;
    clear_has_response_one_of();
  }
}
void NetworkData_Response::set_allocated_datetime(::claros::common::core::ClarosDateTime* datetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response_one_of();
  if (datetime) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      datetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, datetime, submessage_arena);
    }
    set_has_datetime();
    response_one_of_.datetime_ = datetime;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.common.core.NetworkData.Response.dateTime)
}
void NetworkData_Response::clear_datetime() {
  if (has_datetime()) {
    delete response_one_of_.datetime_;
    clear_has_response_one_of();
  }
}
void NetworkData_Response::set_allocated_note(::claros::common::core::Note* note) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_response_one_of();
  if (note) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      note = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, note, submessage_arena);
    }
    set_has_note();
    response_one_of_.note_ = note;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.common.core.NetworkData.Response.note)
}
void NetworkData_Response::clear_note() {
  if (has_note()) {
    delete response_one_of_.note_;
    clear_has_response_one_of();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkData_Response::kFormTemplateFieldNumber;
const int NetworkData_Response::kFormFieldNumber;
const int NetworkData_Response::kDateTimeFieldNumber;
const int NetworkData_Response::kNoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkData_Response::NetworkData_Response()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.common.core.NetworkData.Response)
}
NetworkData_Response::NetworkData_Response(const NetworkData_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response_one_of();
  switch (from.response_one_of_case()) {
    case kFormTemplate: {
      mutable_formtemplate()->::claros::common::form::FormTemplate::MergeFrom(from.formtemplate());
      break;
    }
    case kForm: {
      mutable_form()->::claros::common::form::Form::MergeFrom(from.form());
      break;
    }
    case kDateTime: {
      mutable_datetime()->::claros::common::core::ClarosDateTime::MergeFrom(from.datetime());
      break;
    }
    case kNote: {
      mutable_note()->::claros::common::core::Note::MergeFrom(from.note());
      break;
    }
    case RESPONSE_ONE_OF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:claros.common.core.NetworkData.Response)
}

void NetworkData_Response::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto.base);
  clear_has_response_one_of();
}

NetworkData_Response::~NetworkData_Response() {
  // @@protoc_insertion_point(destructor:claros.common.core.NetworkData.Response)
  SharedDtor();
}

void NetworkData_Response::SharedDtor() {
  if (has_response_one_of()) {
    clear_response_one_of();
  }
}

void NetworkData_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkData_Response& NetworkData_Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NetworkData_Response_claros_5fcommon_5fcore_5fnetworkdata_2eproto.base);
  return *internal_default_instance();
}


void NetworkData_Response::clear_response_one_of() {
// @@protoc_insertion_point(one_of_clear_start:claros.common.core.NetworkData.Response)
  switch (response_one_of_case()) {
    case kFormTemplate: {
      delete response_one_of_.formtemplate_;
      break;
    }
    case kForm: {
      delete response_one_of_.form_;
      break;
    }
    case kDateTime: {
      delete response_one_of_.datetime_;
      break;
    }
    case kNote: {
      delete response_one_of_.note_;
      break;
    }
    case RESPONSE_ONE_OF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_ONE_OF_NOT_SET;
}


void NetworkData_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.common.core.NetworkData.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response_one_of();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkData_Response::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NetworkData_Response*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .claros.common.form.FormTemplate formTemplate = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::form::FormTemplate::_InternalParse;
        object = msg->mutable_formtemplate();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .claros.common.form.Form form = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::form::Form::_InternalParse;
        object = msg->mutable_form();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .claros.common.core.ClarosDateTime dateTime = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::core::ClarosDateTime::_InternalParse;
        object = msg->mutable_datetime();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .claros.common.core.Note note = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::core::Note::_InternalParse;
        object = msg->mutable_note();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkData_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.common.core.NetworkData.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .claros.common.form.FormTemplate formTemplate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_formtemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.form.Form form = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.core.ClarosDateTime dateTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_datetime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.core.Note note = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_note()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.common.core.NetworkData.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.common.core.NetworkData.Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkData_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.common.core.NetworkData.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .claros.common.form.FormTemplate formTemplate = 2;
  if (has_formtemplate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::formtemplate(this), output);
  }

  // .claros.common.form.Form form = 3;
  if (has_form()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::form(this), output);
  }

  // .claros.common.core.ClarosDateTime dateTime = 4;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::datetime(this), output);
  }

  // .claros.common.core.Note note = 5;
  if (has_note()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::note(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.common.core.NetworkData.Response)
}

::google::protobuf::uint8* NetworkData_Response::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.common.core.NetworkData.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .claros.common.form.FormTemplate formTemplate = 2;
  if (has_formtemplate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::formtemplate(this), target);
  }

  // .claros.common.form.Form form = 3;
  if (has_form()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::form(this), target);
  }

  // .claros.common.core.ClarosDateTime dateTime = 4;
  if (has_datetime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::datetime(this), target);
  }

  // .claros.common.core.Note note = 5;
  if (has_note()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::note(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.common.core.NetworkData.Response)
  return target;
}

size_t NetworkData_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.common.core.NetworkData.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (response_one_of_case()) {
    // .claros.common.form.FormTemplate formTemplate = 2;
    case kFormTemplate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_one_of_.formtemplate_);
      break;
    }
    // .claros.common.form.Form form = 3;
    case kForm: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_one_of_.form_);
      break;
    }
    // .claros.common.core.ClarosDateTime dateTime = 4;
    case kDateTime: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_one_of_.datetime_);
      break;
    }
    // .claros.common.core.Note note = 5;
    case kNote: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *response_one_of_.note_);
      break;
    }
    case RESPONSE_ONE_OF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkData_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.common.core.NetworkData.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkData_Response* source =
      ::google::protobuf::DynamicCastToGenerated<NetworkData_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.common.core.NetworkData.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.common.core.NetworkData.Response)
    MergeFrom(*source);
  }
}

void NetworkData_Response::MergeFrom(const NetworkData_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.common.core.NetworkData.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_one_of_case()) {
    case kFormTemplate: {
      mutable_formtemplate()->::claros::common::form::FormTemplate::MergeFrom(from.formtemplate());
      break;
    }
    case kForm: {
      mutable_form()->::claros::common::form::Form::MergeFrom(from.form());
      break;
    }
    case kDateTime: {
      mutable_datetime()->::claros::common::core::ClarosDateTime::MergeFrom(from.datetime());
      break;
    }
    case kNote: {
      mutable_note()->::claros::common::core::Note::MergeFrom(from.note());
      break;
    }
    case RESPONSE_ONE_OF_NOT_SET: {
      break;
    }
  }
}

void NetworkData_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.common.core.NetworkData.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkData_Response::CopyFrom(const NetworkData_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.common.core.NetworkData.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkData_Response::IsInitialized() const {
  return true;
}

void NetworkData_Response::Swap(NetworkData_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkData_Response::InternalSwap(NetworkData_Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(response_one_of_, other->response_one_of_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata NetworkData_Response::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fcore_5fnetworkdata_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fcore_5fnetworkdata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void NetworkData::InitAsDefaultInstance() {
}
class NetworkData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkData::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkData::NetworkData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.common.core.NetworkData)
}
NetworkData::NetworkData(const NetworkData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:claros.common.core.NetworkData)
}

void NetworkData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_NetworkData_claros_5fcommon_5fcore_5fnetworkdata_2eproto.base);
}

NetworkData::~NetworkData() {
  // @@protoc_insertion_point(destructor:claros.common.core.NetworkData)
  SharedDtor();
}

void NetworkData::SharedDtor() {
}

void NetworkData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkData& NetworkData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_NetworkData_claros_5fcommon_5fcore_5fnetworkdata_2eproto.base);
  return *internal_default_instance();
}


void NetworkData::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.common.core.NetworkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NetworkData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<NetworkData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .claros.common.core.NetworkData.Response responses = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::core::NetworkData_Response::_InternalParse;
          object = msg->add_responses();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NetworkData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.common.core.NetworkData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .claros.common.core.NetworkData.Response responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.common.core.NetworkData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.common.core.NetworkData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NetworkData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.common.core.NetworkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .claros.common.core.NetworkData.Response responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.common.core.NetworkData)
}

::google::protobuf::uint8* NetworkData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.common.core.NetworkData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .claros.common.core.NetworkData.Response responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.common.core.NetworkData)
  return target;
}

size_t NetworkData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.common.core.NetworkData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .claros.common.core.NetworkData.Response responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.common.core.NetworkData)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkData* source =
      ::google::protobuf::DynamicCastToGenerated<NetworkData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.common.core.NetworkData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.common.core.NetworkData)
    MergeFrom(*source);
  }
}

void NetworkData::MergeFrom(const NetworkData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.common.core.NetworkData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void NetworkData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.common.core.NetworkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkData::CopyFrom(const NetworkData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.common.core.NetworkData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkData::IsInitialized() const {
  return true;
}

void NetworkData::Swap(NetworkData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkData::InternalSwap(NetworkData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
}

::google::protobuf::Metadata NetworkData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fcore_5fnetworkdata_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fcore_5fnetworkdata_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::common::core::NetworkData_Response* Arena::CreateMaybeMessage< ::claros::common::core::NetworkData_Response >(Arena* arena) {
  return Arena::CreateInternal< ::claros::common::core::NetworkData_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::claros::common::core::NetworkData* Arena::CreateMaybeMessage< ::claros::common::core::NetworkData >(Arena* arena) {
  return Arena::CreateInternal< ::claros::common::core::NetworkData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
