// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_prognosys_data.proto

#include "claros_instrument_prognosys_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5finstrument_5fprognosys_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PrognosysData_Prognosys_claros_5finstrument_5fprognosys_5fdata_2eproto;
namespace claros {
namespace instrument {
class PrognosysData_PrognosysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrognosysData_Prognosys> _instance;
} _PrognosysData_Prognosys_default_instance_;
class PrognosysDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrognosysData> _instance;
} _PrognosysData_default_instance_;
}  // namespace instrument
}  // namespace claros
static void InitDefaultsPrognosysData_Prognosys_claros_5finstrument_5fprognosys_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::instrument::_PrognosysData_Prognosys_default_instance_;
    new (ptr) ::claros::instrument::PrognosysData_Prognosys();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::instrument::PrognosysData_Prognosys::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrognosysData_Prognosys_claros_5finstrument_5fprognosys_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPrognosysData_Prognosys_claros_5finstrument_5fprognosys_5fdata_2eproto}, {}};

static void InitDefaultsPrognosysData_claros_5finstrument_5fprognosys_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::instrument::_PrognosysData_default_instance_;
    new (ptr) ::claros::instrument::PrognosysData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::instrument::PrognosysData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PrognosysData_claros_5finstrument_5fprognosys_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPrognosysData_claros_5finstrument_5fprognosys_5fdata_2eproto}, {
      &scc_info_PrognosysData_Prognosys_claros_5finstrument_5fprognosys_5fdata_2eproto.base,}};

void InitDefaults_claros_5finstrument_5fprognosys_5fdata_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_PrognosysData_Prognosys_claros_5finstrument_5fprognosys_5fdata_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrognosysData_claros_5finstrument_5fprognosys_5fdata_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5finstrument_5fprognosys_5fdata_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5finstrument_5fprognosys_5fdata_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5finstrument_5fprognosys_5fdata_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5finstrument_5fprognosys_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::instrument::PrognosysData_Prognosys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::instrument::PrognosysData_Prognosys, id_),
  PROTOBUF_FIELD_OFFSET(::claros::instrument::PrognosysData_Prognosys, percent_),
  PROTOBUF_FIELD_OFFSET(::claros::instrument::PrognosysData_Prognosys, days_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::instrument::PrognosysData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::instrument::PrognosysData, prognoses_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::instrument::PrognosysData_Prognosys)},
  { 8, -1, sizeof(::claros::instrument::PrognosysData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::instrument::_PrognosysData_Prognosys_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::instrument::_PrognosysData_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5finstrument_5fprognosys_5fdata_2eproto = {
  {}, AddDescriptors_claros_5finstrument_5fprognosys_5fdata_2eproto, "claros_instrument_prognosys_data.proto", schemas,
  file_default_instances, TableStruct_claros_5finstrument_5fprognosys_5fdata_2eproto::offsets,
  file_level_metadata_claros_5finstrument_5fprognosys_5fdata_2eproto, 2, file_level_enum_descriptors_claros_5finstrument_5fprognosys_5fdata_2eproto, file_level_service_descriptors_claros_5finstrument_5fprognosys_5fdata_2eproto,
};

const char descriptor_table_protodef_claros_5finstrument_5fprognosys_5fdata_2eproto[] =
  "\n&claros_instrument_prognosys_data.proto"
  "\022\021claros.instrument\"\206\001\n\rPrognosysData\022=\n"
  "\tprognoses\030\001 \003(\0132*.claros.instrument.Pro"
  "gnosysData.Prognosys\0326\n\tPrognosys\022\n\n\002id\030"
  "\001 \001(\005\022\017\n\007percent\030\002 \001(\002\022\014\n\004days\030\003 \001(\005b\006pr"
  "oto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5finstrument_5fprognosys_5fdata_2eproto = {
  false, InitDefaults_claros_5finstrument_5fprognosys_5fdata_2eproto, 
  descriptor_table_protodef_claros_5finstrument_5fprognosys_5fdata_2eproto,
  "claros_instrument_prognosys_data.proto", &assign_descriptors_table_claros_5finstrument_5fprognosys_5fdata_2eproto, 204,
};

void AddDescriptors_claros_5finstrument_5fprognosys_5fdata_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5finstrument_5fprognosys_5fdata_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5finstrument_5fprognosys_5fdata_2eproto = []() { AddDescriptors_claros_5finstrument_5fprognosys_5fdata_2eproto(); return true; }();
namespace claros {
namespace instrument {

// ===================================================================

void PrognosysData_Prognosys::InitAsDefaultInstance() {
}
class PrognosysData_Prognosys::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrognosysData_Prognosys::kIdFieldNumber;
const int PrognosysData_Prognosys::kPercentFieldNumber;
const int PrognosysData_Prognosys::kDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrognosysData_Prognosys::PrognosysData_Prognosys()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.instrument.PrognosysData.Prognosys)
}
PrognosysData_Prognosys::PrognosysData_Prognosys(const PrognosysData_Prognosys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&days_) -
    reinterpret_cast<char*>(&id_)) + sizeof(days_));
  // @@protoc_insertion_point(copy_constructor:claros.instrument.PrognosysData.Prognosys)
}

void PrognosysData_Prognosys::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_) -
      reinterpret_cast<char*>(&id_)) + sizeof(days_));
}

PrognosysData_Prognosys::~PrognosysData_Prognosys() {
  // @@protoc_insertion_point(destructor:claros.instrument.PrognosysData.Prognosys)
  SharedDtor();
}

void PrognosysData_Prognosys::SharedDtor() {
}

void PrognosysData_Prognosys::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrognosysData_Prognosys& PrognosysData_Prognosys::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PrognosysData_Prognosys_claros_5finstrument_5fprognosys_5fdata_2eproto.base);
  return *internal_default_instance();
}


void PrognosysData_Prognosys::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.instrument.PrognosysData.Prognosys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&days_) -
      reinterpret_cast<char*>(&id_)) + sizeof(days_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrognosysData_Prognosys::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PrognosysData_Prognosys*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // float percent = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_percent(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      // int32 days = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_days(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrognosysData_Prognosys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.instrument.PrognosysData.Prognosys)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 days = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.instrument.PrognosysData.Prognosys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.instrument.PrognosysData.Prognosys)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrognosysData_Prognosys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.instrument.PrognosysData.Prognosys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // float percent = 2;
  if (this->percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->percent(), output);
  }

  // int32 days = 3;
  if (this->days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->days(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.instrument.PrognosysData.Prognosys)
}

::google::protobuf::uint8* PrognosysData_Prognosys::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.instrument.PrognosysData.Prognosys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // float percent = 2;
  if (this->percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->percent(), target);
  }

  // int32 days = 3;
  if (this->days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->days(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.instrument.PrognosysData.Prognosys)
  return target;
}

size_t PrognosysData_Prognosys::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.instrument.PrognosysData.Prognosys)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // float percent = 2;
  if (this->percent() != 0) {
    total_size += 1 + 4;
  }

  // int32 days = 3;
  if (this->days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrognosysData_Prognosys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.instrument.PrognosysData.Prognosys)
  GOOGLE_DCHECK_NE(&from, this);
  const PrognosysData_Prognosys* source =
      ::google::protobuf::DynamicCastToGenerated<PrognosysData_Prognosys>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.instrument.PrognosysData.Prognosys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.instrument.PrognosysData.Prognosys)
    MergeFrom(*source);
  }
}

void PrognosysData_Prognosys::MergeFrom(const PrognosysData_Prognosys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.instrument.PrognosysData.Prognosys)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.percent() != 0) {
    set_percent(from.percent());
  }
  if (from.days() != 0) {
    set_days(from.days());
  }
}

void PrognosysData_Prognosys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.instrument.PrognosysData.Prognosys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrognosysData_Prognosys::CopyFrom(const PrognosysData_Prognosys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.instrument.PrognosysData.Prognosys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrognosysData_Prognosys::IsInitialized() const {
  return true;
}

void PrognosysData_Prognosys::Swap(PrognosysData_Prognosys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrognosysData_Prognosys::InternalSwap(PrognosysData_Prognosys* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(percent_, other->percent_);
  swap(days_, other->days_);
}

::google::protobuf::Metadata PrognosysData_Prognosys::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5finstrument_5fprognosys_5fdata_2eproto);
  return ::file_level_metadata_claros_5finstrument_5fprognosys_5fdata_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PrognosysData::InitAsDefaultInstance() {
}
class PrognosysData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrognosysData::kPrognosesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrognosysData::PrognosysData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.instrument.PrognosysData)
}
PrognosysData::PrognosysData(const PrognosysData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      prognoses_(from.prognoses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:claros.instrument.PrognosysData)
}

void PrognosysData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PrognosysData_claros_5finstrument_5fprognosys_5fdata_2eproto.base);
}

PrognosysData::~PrognosysData() {
  // @@protoc_insertion_point(destructor:claros.instrument.PrognosysData)
  SharedDtor();
}

void PrognosysData::SharedDtor() {
}

void PrognosysData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrognosysData& PrognosysData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PrognosysData_claros_5finstrument_5fprognosys_5fdata_2eproto.base);
  return *internal_default_instance();
}


void PrognosysData::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.instrument.PrognosysData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prognoses_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PrognosysData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PrognosysData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .claros.instrument.PrognosysData.Prognosys prognoses = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::instrument::PrognosysData_Prognosys::_InternalParse;
          object = msg->add_prognoses();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PrognosysData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.instrument.PrognosysData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .claros.instrument.PrognosysData.Prognosys prognoses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_prognoses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.instrument.PrognosysData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.instrument.PrognosysData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PrognosysData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.instrument.PrognosysData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .claros.instrument.PrognosysData.Prognosys prognoses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prognoses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->prognoses(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.instrument.PrognosysData)
}

::google::protobuf::uint8* PrognosysData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.instrument.PrognosysData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .claros.instrument.PrognosysData.Prognosys prognoses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prognoses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->prognoses(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.instrument.PrognosysData)
  return target;
}

size_t PrognosysData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.instrument.PrognosysData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .claros.instrument.PrognosysData.Prognosys prognoses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->prognoses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->prognoses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrognosysData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.instrument.PrognosysData)
  GOOGLE_DCHECK_NE(&from, this);
  const PrognosysData* source =
      ::google::protobuf::DynamicCastToGenerated<PrognosysData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.instrument.PrognosysData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.instrument.PrognosysData)
    MergeFrom(*source);
  }
}

void PrognosysData::MergeFrom(const PrognosysData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.instrument.PrognosysData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prognoses_.MergeFrom(from.prognoses_);
}

void PrognosysData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.instrument.PrognosysData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrognosysData::CopyFrom(const PrognosysData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.instrument.PrognosysData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrognosysData::IsInitialized() const {
  return true;
}

void PrognosysData::Swap(PrognosysData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrognosysData::InternalSwap(PrognosysData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&prognoses_)->InternalSwap(CastToBase(&other->prognoses_));
}

::google::protobuf::Metadata PrognosysData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5finstrument_5fprognosys_5fdata_2eproto);
  return ::file_level_metadata_claros_5finstrument_5fprognosys_5fdata_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace instrument
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::instrument::PrognosysData_Prognosys* Arena::CreateMaybeMessage< ::claros::instrument::PrognosysData_Prognosys >(Arena* arena) {
  return Arena::CreateInternal< ::claros::instrument::PrognosysData_Prognosys >(arena);
}
template<> PROTOBUF_NOINLINE ::claros::instrument::PrognosysData* Arena::CreateMaybeMessage< ::claros::instrument::PrognosysData >(Arena* arena) {
  return Arena::CreateInternal< ::claros::instrument::PrognosysData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
