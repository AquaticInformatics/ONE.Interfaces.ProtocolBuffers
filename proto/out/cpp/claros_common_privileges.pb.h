// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_privileges.proto

#ifndef PROTOBUF_INCLUDED_claros_5fcommon_5fprivileges_2eproto
#define PROTOBUF_INCLUDED_claros_5fcommon_5fprivileges_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "claros_common_rights.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fprivileges_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5fcommon_5fprivileges_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5fcommon_5fprivileges_2eproto();
namespace claros {
namespace common {
namespace configuration {
class Privileges;
class PrivilegesDefaultTypeInternal;
extern PrivilegesDefaultTypeInternal _Privileges_default_instance_;
class Privileges_PrivilegeEntry_DoNotUse;
class Privileges_PrivilegeEntry_DoNotUseDefaultTypeInternal;
extern Privileges_PrivilegeEntry_DoNotUseDefaultTypeInternal _Privileges_PrivilegeEntry_DoNotUse_default_instance_;
}  // namespace configuration
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::common::configuration::Privileges* Arena::CreateMaybeMessage<::claros::common::configuration::Privileges>(Arena*);
template<> ::claros::common::configuration::Privileges_PrivilegeEntry_DoNotUse* Arena::CreateMaybeMessage<::claros::common::configuration::Privileges_PrivilegeEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace common {
namespace configuration {

// ===================================================================

class Privileges_PrivilegeEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Privileges_PrivilegeEntry_DoNotUse, 
    ::std::string, ::claros::common::configuration::Rights,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Privileges_PrivilegeEntry_DoNotUse, 
    ::std::string, ::claros::common::configuration::Rights,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Privileges_PrivilegeEntry_DoNotUse();
  Privileges_PrivilegeEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Privileges_PrivilegeEntry_DoNotUse& other);
  static const Privileges_PrivilegeEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Privileges_PrivilegeEntry_DoNotUse*>(&_Privileges_PrivilegeEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Privileges :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.common.configuration.Privileges) */ {
 public:
  Privileges();
  virtual ~Privileges();

  Privileges(const Privileges& from);

  inline Privileges& operator=(const Privileges& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Privileges(Privileges&& from) noexcept
    : Privileges() {
    *this = ::std::move(from);
  }

  inline Privileges& operator=(Privileges&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Privileges& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Privileges* internal_default_instance() {
    return reinterpret_cast<const Privileges*>(
               &_Privileges_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Privileges* other);
  friend void swap(Privileges& a, Privileges& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Privileges* New() const final {
    return CreateMaybeMessage<Privileges>(nullptr);
  }

  Privileges* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Privileges>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Privileges& from);
  void MergeFrom(const Privileges& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Privileges* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .claros.common.configuration.Rights> privilege = 1;
  int privilege_size() const;
  void clear_privilege();
  static const int kPrivilegeFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >&
      privilege() const;
  ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >*
      mutable_privilege();

  // @@protoc_insertion_point(class_scope:claros.common.configuration.Privileges)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Privileges_PrivilegeEntry_DoNotUse,
      ::std::string, ::claros::common::configuration::Rights,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > privilege_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5fcommon_5fprivileges_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Privileges

// map<string, .claros.common.configuration.Rights> privilege = 1;
inline int Privileges::privilege_size() const {
  return privilege_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >&
Privileges::privilege() const {
  // @@protoc_insertion_point(field_map:claros.common.configuration.Privileges.privilege)
  return privilege_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::claros::common::configuration::Rights >*
Privileges::mutable_privilege() {
  // @@protoc_insertion_point(field_mutable_map:claros.common.configuration.Privileges.privilege)
  return privilege_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace configuration
}  // namespace common
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5fcommon_5fprivileges_2eproto
