// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_operations_spreadsheet_worksheet_row.proto

#ifndef PROTOBUF_INCLUDED_claros_5foperations_5fspreadsheet_5fworksheet_5frow_2eproto
#define PROTOBUF_INCLUDED_claros_5foperations_5fspreadsheet_5fworksheet_5frow_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "claros_common_core_timewindow.pb.h"
#include "claros_operations_spreadsheet_worksheet_cell.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5foperations_5fspreadsheet_5fworksheet_5frow_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5foperations_5fspreadsheet_5fworksheet_5frow_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5foperations_5fspreadsheet_5fworksheet_5frow_2eproto();
namespace claros {
namespace operations {
namespace spreadsheet {
class Row;
class RowDefaultTypeInternal;
extern RowDefaultTypeInternal _Row_default_instance_;
}  // namespace spreadsheet
}  // namespace operations
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::operations::spreadsheet::Row* Arena::CreateMaybeMessage<::claros::operations::spreadsheet::Row>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace operations {
namespace spreadsheet {

// ===================================================================

class Row :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.operations.spreadsheet.Row) */ {
 public:
  Row();
  virtual ~Row();

  Row(const Row& from);

  inline Row& operator=(const Row& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Row(Row&& from) noexcept
    : Row() {
    *this = ::std::move(from);
  }

  inline Row& operator=(Row&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Row& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Row* internal_default_instance() {
    return reinterpret_cast<const Row*>(
               &_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Row* other);
  friend void swap(Row& a, Row& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Row* New() const final {
    return CreateMaybeMessage<Row>(nullptr);
  }

  Row* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Row>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Row& from);
  void MergeFrom(const Row& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Row* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .claros.operations.spreadsheet.Cell cells = 3;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 3;
  ::claros::operations::spreadsheet::Cell* mutable_cells(int index);
  ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Cell >*
      mutable_cells();
  const ::claros::operations::spreadsheet::Cell& cells(int index) const;
  ::claros::operations::spreadsheet::Cell* add_cells();
  const ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Cell >&
      cells() const;

  // .claros.common.core.TimeWindow UTCTimeWindow = 2;
  bool has_utctimewindow() const;
  void clear_utctimewindow();
  static const int kUTCTimeWindowFieldNumber = 2;
  const ::claros::common::core::TimeWindow& utctimewindow() const;
  ::claros::common::core::TimeWindow* release_utctimewindow();
  ::claros::common::core::TimeWindow* mutable_utctimewindow();
  void set_allocated_utctimewindow(::claros::common::core::TimeWindow* utctimewindow);

  // uint32 rowNumber = 1;
  void clear_rownumber();
  static const int kRowNumberFieldNumber = 1;
  ::google::protobuf::uint32 rownumber() const;
  void set_rownumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:claros.operations.spreadsheet.Row)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Cell > cells_;
  ::claros::common::core::TimeWindow* utctimewindow_;
  ::google::protobuf::uint32 rownumber_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5foperations_5fspreadsheet_5fworksheet_5frow_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Row

// uint32 rowNumber = 1;
inline void Row::clear_rownumber() {
  rownumber_ = 0u;
}
inline ::google::protobuf::uint32 Row::rownumber() const {
  // @@protoc_insertion_point(field_get:claros.operations.spreadsheet.Row.rowNumber)
  return rownumber_;
}
inline void Row::set_rownumber(::google::protobuf::uint32 value) {
  
  rownumber_ = value;
  // @@protoc_insertion_point(field_set:claros.operations.spreadsheet.Row.rowNumber)
}

// .claros.common.core.TimeWindow UTCTimeWindow = 2;
inline bool Row::has_utctimewindow() const {
  return this != internal_default_instance() && utctimewindow_ != nullptr;
}
inline const ::claros::common::core::TimeWindow& Row::utctimewindow() const {
  const ::claros::common::core::TimeWindow* p = utctimewindow_;
  // @@protoc_insertion_point(field_get:claros.operations.spreadsheet.Row.UTCTimeWindow)
  return p != nullptr ? *p : *reinterpret_cast<const ::claros::common::core::TimeWindow*>(
      &::claros::common::core::_TimeWindow_default_instance_);
}
inline ::claros::common::core::TimeWindow* Row::release_utctimewindow() {
  // @@protoc_insertion_point(field_release:claros.operations.spreadsheet.Row.UTCTimeWindow)
  
  ::claros::common::core::TimeWindow* temp = utctimewindow_;
  utctimewindow_ = nullptr;
  return temp;
}
inline ::claros::common::core::TimeWindow* Row::mutable_utctimewindow() {
  
  if (utctimewindow_ == nullptr) {
    auto* p = CreateMaybeMessage<::claros::common::core::TimeWindow>(GetArenaNoVirtual());
    utctimewindow_ = p;
  }
  // @@protoc_insertion_point(field_mutable:claros.operations.spreadsheet.Row.UTCTimeWindow)
  return utctimewindow_;
}
inline void Row::set_allocated_utctimewindow(::claros::common::core::TimeWindow* utctimewindow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(utctimewindow_);
  }
  if (utctimewindow) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      utctimewindow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, utctimewindow, submessage_arena);
    }
    
  } else {
    
  }
  utctimewindow_ = utctimewindow;
  // @@protoc_insertion_point(field_set_allocated:claros.operations.spreadsheet.Row.UTCTimeWindow)
}

// repeated .claros.operations.spreadsheet.Cell cells = 3;
inline int Row::cells_size() const {
  return cells_.size();
}
inline ::claros::operations::spreadsheet::Cell* Row::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:claros.operations.spreadsheet.Row.cells)
  return cells_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Cell >*
Row::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:claros.operations.spreadsheet.Row.cells)
  return &cells_;
}
inline const ::claros::operations::spreadsheet::Cell& Row::cells(int index) const {
  // @@protoc_insertion_point(field_get:claros.operations.spreadsheet.Row.cells)
  return cells_.Get(index);
}
inline ::claros::operations::spreadsheet::Cell* Row::add_cells() {
  // @@protoc_insertion_point(field_add:claros.operations.spreadsheet.Row.cells)
  return cells_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Cell >&
Row::cells() const {
  // @@protoc_insertion_point(field_list:claros.operations.spreadsheet.Row.cells)
  return cells_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace spreadsheet
}  // namespace operations
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5foperations_5fspreadsheet_5fworksheet_5frow_2eproto
