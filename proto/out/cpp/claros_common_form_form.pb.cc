// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_form_form.proto

#include "claros_common_form_form.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fauditevent_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AuditEvent_claros_5fcommon_5fcore_5fauditevent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fnote_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Note_claros_5fcommon_5fcore_5fnote_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5ftimewindow_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TimeWindow_claros_5fcommon_5fcore_5ftimewindow_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fformfield_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FormField_claros_5fcommon_5fform_5fformfield_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FormFieldDefinition_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fformtemplate_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FormTemplate_claros_5fcommon_5fform_5fformtemplate_2eproto;
namespace claros {
namespace common {
namespace form {
class FormDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Form> _instance;
} _Form_default_instance_;
}  // namespace form
}  // namespace common
}  // namespace claros
static void InitDefaultsForm_claros_5fcommon_5fform_5fform_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::common::form::_Form_default_instance_;
    new (ptr) ::claros::common::form::Form();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::common::form::Form::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Form_claros_5fcommon_5fform_5fform_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsForm_claros_5fcommon_5fform_5fform_2eproto}, {
      &scc_info_TimeWindow_claros_5fcommon_5fcore_5ftimewindow_2eproto.base,
      &scc_info_FormTemplate_claros_5fcommon_5fform_5fformtemplate_2eproto.base,
      &scc_info_FormFieldDefinition_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto.base,
      &scc_info_FormField_claros_5fcommon_5fform_5fformfield_2eproto.base,
      &scc_info_Note_claros_5fcommon_5fcore_5fnote_2eproto.base,
      &scc_info_AuditEvent_claros_5fcommon_5fcore_5fauditevent_2eproto.base,}};

void InitDefaults_claros_5fcommon_5fform_5fform_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Form_claros_5fcommon_5fform_5fform_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5fcommon_5fform_5fform_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5fcommon_5fform_5fform_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5fcommon_5fform_5fform_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5fcommon_5fform_5fform_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, id_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, name_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, timewindow_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, formtemplate_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, adhocformfielddefinitions_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, templateformfields_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, adhocformfields_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, notes_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::Form, auditevents_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::common::form::Form)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::common::form::_Form_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5fcommon_5fform_5fform_2eproto = {
  {}, AddDescriptors_claros_5fcommon_5fform_5fform_2eproto, "claros_common_form_form.proto", schemas,
  file_default_instances, TableStruct_claros_5fcommon_5fform_5fform_2eproto::offsets,
  file_level_metadata_claros_5fcommon_5fform_5fform_2eproto, 1, file_level_enum_descriptors_claros_5fcommon_5fform_5fform_2eproto, file_level_service_descriptors_claros_5fcommon_5fform_5fform_2eproto,
};

const char descriptor_table_protodef_claros_5fcommon_5fform_5fform_2eproto[] =
  "\n\035claros_common_form_form.proto\022\022claros."
  "common.form\032#claros_common_core_timewind"
  "ow.proto\032\035claros_common_core_note.proto\032"
  "#claros_common_core_auditevent.proto\032\"cl"
  "aros_common_form_formfield.proto\032%claros"
  "_common_form_formtemplate.proto\032-claros_"
  "common_form_formfield_definition.proto\"\251"
  "\003\n\004Form\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\0222\n\ntim"
  "eWindow\030\003 \001(\0132\036.claros.common.core.TimeW"
  "indow\0226\n\014formTemplate\030\004 \001(\0132 .claros.com"
  "mon.form.FormTemplate\022J\n\031adHocFormFieldD"
  "efinitions\030\005 \003(\0132\'.claros.common.form.Fo"
  "rmFieldDefinition\0229\n\022templateFormFields\030"
  "\006 \003(\0132\035.claros.common.form.FormField\0226\n\017"
  "adhocFormFields\030\007 \003(\0132\035.claros.common.fo"
  "rm.FormField\022\'\n\005notes\030\010 \003(\0132\030.claros.com"
  "mon.core.Note\0223\n\013auditEvents\030c \003(\0132\036.cla"
  "ros.common.core.AuditEventb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5fcommon_5fform_5fform_2eproto = {
  false, InitDefaults_claros_5fcommon_5fform_5fform_2eproto, 
  descriptor_table_protodef_claros_5fcommon_5fform_5fform_2eproto,
  "claros_common_form_form.proto", &assign_descriptors_table_claros_5fcommon_5fform_5fform_2eproto, 714,
};

void AddDescriptors_claros_5fcommon_5fform_5fform_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[6] =
  {
    ::AddDescriptors_claros_5fcommon_5fcore_5ftimewindow_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcore_5fnote_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcore_5fauditevent_2eproto,
    ::AddDescriptors_claros_5fcommon_5fform_5fformfield_2eproto,
    ::AddDescriptors_claros_5fcommon_5fform_5fformtemplate_2eproto,
    ::AddDescriptors_claros_5fcommon_5fform_5fformfield_5fdefinition_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5fcommon_5fform_5fform_2eproto, deps, 6);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5fcommon_5fform_5fform_2eproto = []() { AddDescriptors_claros_5fcommon_5fform_5fform_2eproto(); return true; }();
namespace claros {
namespace common {
namespace form {

// ===================================================================

void Form::InitAsDefaultInstance() {
  ::claros::common::form::_Form_default_instance_._instance.get_mutable()->timewindow_ = const_cast< ::claros::common::core::TimeWindow*>(
      ::claros::common::core::TimeWindow::internal_default_instance());
  ::claros::common::form::_Form_default_instance_._instance.get_mutable()->formtemplate_ = const_cast< ::claros::common::form::FormTemplate*>(
      ::claros::common::form::FormTemplate::internal_default_instance());
}
class Form::HasBitSetters {
 public:
  static const ::claros::common::core::TimeWindow& timewindow(const Form* msg);
  static const ::claros::common::form::FormTemplate& formtemplate(const Form* msg);
};

const ::claros::common::core::TimeWindow&
Form::HasBitSetters::timewindow(const Form* msg) {
  return *msg->timewindow_;
}
const ::claros::common::form::FormTemplate&
Form::HasBitSetters::formtemplate(const Form* msg) {
  return *msg->formtemplate_;
}
void Form::clear_timewindow() {
  if (GetArenaNoVirtual() == nullptr && timewindow_ != nullptr) {
    delete timewindow_;
  }
  timewindow_ = nullptr;
}
void Form::clear_formtemplate() {
  if (GetArenaNoVirtual() == nullptr && formtemplate_ != nullptr) {
    delete formtemplate_;
  }
  formtemplate_ = nullptr;
}
void Form::clear_adhocformfielddefinitions() {
  adhocformfielddefinitions_.Clear();
}
void Form::clear_templateformfields() {
  templateformfields_.Clear();
}
void Form::clear_adhocformfields() {
  adhocformfields_.Clear();
}
void Form::clear_notes() {
  notes_.Clear();
}
void Form::clear_auditevents() {
  auditevents_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Form::kIdFieldNumber;
const int Form::kNameFieldNumber;
const int Form::kTimeWindowFieldNumber;
const int Form::kFormTemplateFieldNumber;
const int Form::kAdHocFormFieldDefinitionsFieldNumber;
const int Form::kTemplateFormFieldsFieldNumber;
const int Form::kAdhocFormFieldsFieldNumber;
const int Form::kNotesFieldNumber;
const int Form::kAuditEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Form::Form()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.common.form.Form)
}
Form::Form(const Form& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      adhocformfielddefinitions_(from.adhocformfielddefinitions_),
      templateformfields_(from.templateformfields_),
      adhocformfields_(from.adhocformfields_),
      notes_(from.notes_),
      auditevents_(from.auditevents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_timewindow()) {
    timewindow_ = new ::claros::common::core::TimeWindow(*from.timewindow_);
  } else {
    timewindow_ = nullptr;
  }
  if (from.has_formtemplate()) {
    formtemplate_ = new ::claros::common::form::FormTemplate(*from.formtemplate_);
  } else {
    formtemplate_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:claros.common.form.Form)
}

void Form::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Form_claros_5fcommon_5fform_5fform_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timewindow_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&formtemplate_) -
      reinterpret_cast<char*>(&timewindow_)) + sizeof(formtemplate_));
}

Form::~Form() {
  // @@protoc_insertion_point(destructor:claros.common.form.Form)
  SharedDtor();
}

void Form::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timewindow_;
  if (this != internal_default_instance()) delete formtemplate_;
}

void Form::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Form& Form::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Form_claros_5fcommon_5fform_5fform_2eproto.base);
  return *internal_default_instance();
}


void Form::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.common.form.Form)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  adhocformfielddefinitions_.Clear();
  templateformfields_.Clear();
  adhocformfields_.Clear();
  notes_.Clear();
  auditevents_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && timewindow_ != nullptr) {
    delete timewindow_;
  }
  timewindow_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && formtemplate_ != nullptr) {
    delete formtemplate_;
  }
  formtemplate_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Form::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Form*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.form.Form.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.form.Form.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .claros.common.core.TimeWindow timeWindow = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::core::TimeWindow::_InternalParse;
        object = msg->mutable_timewindow();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .claros.common.form.FormTemplate formTemplate = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::form::FormTemplate::_InternalParse;
        object = msg->mutable_formtemplate();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .claros.common.form.FormFieldDefinition adHocFormFieldDefinitions = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::form::FormFieldDefinition::_InternalParse;
          object = msg->add_adhocformfielddefinitions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated .claros.common.form.FormField templateFormFields = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::form::FormField::_InternalParse;
          object = msg->add_templateformfields();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // repeated .claros.common.form.FormField adhocFormFields = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::form::FormField::_InternalParse;
          object = msg->add_adhocformfields();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      // repeated .claros.common.core.Note notes = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::core::Note::_InternalParse;
          object = msg->add_notes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      // repeated .claros.common.core.AuditEvent auditEvents = 99;
      case 99: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::core::AuditEvent::_InternalParse;
          object = msg->add_auditevents();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 65535) == 1690 && (ptr += 2));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Form::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.common.form.Form)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.form.Form.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.form.Form.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.core.TimeWindow timeWindow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timewindow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.form.FormTemplate formTemplate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_formtemplate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.form.FormFieldDefinition adHocFormFieldDefinitions = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_adhocformfielddefinitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.form.FormField templateFormFields = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_templateformfields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.form.FormField adhocFormFields = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_adhocformfields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.core.Note notes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_notes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.core.AuditEvent auditEvents = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (794 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_auditevents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.common.form.Form)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.common.form.Form)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Form::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.common.form.Form)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.Form.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.Form.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .claros.common.core.TimeWindow timeWindow = 3;
  if (this->has_timewindow()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::timewindow(this), output);
  }

  // .claros.common.form.FormTemplate formTemplate = 4;
  if (this->has_formtemplate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::formtemplate(this), output);
  }

  // repeated .claros.common.form.FormFieldDefinition adHocFormFieldDefinitions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->adhocformfielddefinitions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->adhocformfielddefinitions(static_cast<int>(i)),
      output);
  }

  // repeated .claros.common.form.FormField templateFormFields = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templateformfields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->templateformfields(static_cast<int>(i)),
      output);
  }

  // repeated .claros.common.form.FormField adhocFormFields = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->adhocformfields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->adhocformfields(static_cast<int>(i)),
      output);
  }

  // repeated .claros.common.core.Note notes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->notes(static_cast<int>(i)),
      output);
  }

  // repeated .claros.common.core.AuditEvent auditEvents = 99;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auditevents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      99,
      this->auditevents(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.common.form.Form)
}

::google::protobuf::uint8* Form::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.common.form.Form)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.Form.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.Form.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .claros.common.core.TimeWindow timeWindow = 3;
  if (this->has_timewindow()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::timewindow(this), target);
  }

  // .claros.common.form.FormTemplate formTemplate = 4;
  if (this->has_formtemplate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::formtemplate(this), target);
  }

  // repeated .claros.common.form.FormFieldDefinition adHocFormFieldDefinitions = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->adhocformfielddefinitions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->adhocformfielddefinitions(static_cast<int>(i)), target);
  }

  // repeated .claros.common.form.FormField templateFormFields = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templateformfields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->templateformfields(static_cast<int>(i)), target);
  }

  // repeated .claros.common.form.FormField adhocFormFields = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->adhocformfields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->adhocformfields(static_cast<int>(i)), target);
  }

  // repeated .claros.common.core.Note notes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->notes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->notes(static_cast<int>(i)), target);
  }

  // repeated .claros.common.core.AuditEvent auditEvents = 99;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->auditevents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        99, this->auditevents(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.common.form.Form)
  return target;
}

size_t Form::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.common.form.Form)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .claros.common.form.FormFieldDefinition adHocFormFieldDefinitions = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->adhocformfielddefinitions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->adhocformfielddefinitions(static_cast<int>(i)));
    }
  }

  // repeated .claros.common.form.FormField templateFormFields = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->templateformfields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->templateformfields(static_cast<int>(i)));
    }
  }

  // repeated .claros.common.form.FormField adhocFormFields = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->adhocformfields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->adhocformfields(static_cast<int>(i)));
    }
  }

  // repeated .claros.common.core.Note notes = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->notes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->notes(static_cast<int>(i)));
    }
  }

  // repeated .claros.common.core.AuditEvent auditEvents = 99;
  {
    unsigned int count = static_cast<unsigned int>(this->auditevents_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->auditevents(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .claros.common.core.TimeWindow timeWindow = 3;
  if (this->has_timewindow()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timewindow_);
  }

  // .claros.common.form.FormTemplate formTemplate = 4;
  if (this->has_formtemplate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *formtemplate_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Form::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.common.form.Form)
  GOOGLE_DCHECK_NE(&from, this);
  const Form* source =
      ::google::protobuf::DynamicCastToGenerated<Form>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.common.form.Form)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.common.form.Form)
    MergeFrom(*source);
  }
}

void Form::MergeFrom(const Form& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.common.form.Form)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  adhocformfielddefinitions_.MergeFrom(from.adhocformfielddefinitions_);
  templateformfields_.MergeFrom(from.templateformfields_);
  adhocformfields_.MergeFrom(from.adhocformfields_);
  notes_.MergeFrom(from.notes_);
  auditevents_.MergeFrom(from.auditevents_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_timewindow()) {
    mutable_timewindow()->::claros::common::core::TimeWindow::MergeFrom(from.timewindow());
  }
  if (from.has_formtemplate()) {
    mutable_formtemplate()->::claros::common::form::FormTemplate::MergeFrom(from.formtemplate());
  }
}

void Form::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.common.form.Form)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Form::CopyFrom(const Form& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.common.form.Form)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Form::IsInitialized() const {
  return true;
}

void Form::Swap(Form* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Form::InternalSwap(Form* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&adhocformfielddefinitions_)->InternalSwap(CastToBase(&other->adhocformfielddefinitions_));
  CastToBase(&templateformfields_)->InternalSwap(CastToBase(&other->templateformfields_));
  CastToBase(&adhocformfields_)->InternalSwap(CastToBase(&other->adhocformfields_));
  CastToBase(&notes_)->InternalSwap(CastToBase(&other->notes_));
  CastToBase(&auditevents_)->InternalSwap(CastToBase(&other->auditevents_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timewindow_, other->timewindow_);
  swap(formtemplate_, other->formtemplate_);
}

::google::protobuf::Metadata Form::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fform_5fform_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fform_5fform_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace form
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::common::form::Form* Arena::CreateMaybeMessage< ::claros::common::form::Form >(Arena* arena) {
  return Arena::CreateInternal< ::claros::common::form::Form >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
