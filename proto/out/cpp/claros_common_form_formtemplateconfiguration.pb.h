// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_form_formtemplateconfiguration.proto

#ifndef PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformtemplateconfiguration_2eproto
#define PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformtemplateconfiguration_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "claros_common_form_formtemplate_type.pb.h"
#include "claros_common_recurrence_recurrence.pb.h"
#include "claros_common_form_formlayout.pb.h"
#include "claros_common_form_formfield_definition.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fform_5fformtemplateconfiguration_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5fcommon_5fform_5fformtemplateconfiguration_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5fcommon_5fform_5fformtemplateconfiguration_2eproto();
namespace claros {
namespace common {
namespace form {
class FormTemplateConfiguration;
class FormTemplateConfigurationDefaultTypeInternal;
extern FormTemplateConfigurationDefaultTypeInternal _FormTemplateConfiguration_default_instance_;
}  // namespace form
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::common::form::FormTemplateConfiguration* Arena::CreateMaybeMessage<::claros::common::form::FormTemplateConfiguration>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace common {
namespace form {

// ===================================================================

class FormTemplateConfiguration :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.common.form.FormTemplateConfiguration) */ {
 public:
  FormTemplateConfiguration();
  virtual ~FormTemplateConfiguration();

  FormTemplateConfiguration(const FormTemplateConfiguration& from);

  inline FormTemplateConfiguration& operator=(const FormTemplateConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FormTemplateConfiguration(FormTemplateConfiguration&& from) noexcept
    : FormTemplateConfiguration() {
    *this = ::std::move(from);
  }

  inline FormTemplateConfiguration& operator=(FormTemplateConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FormTemplateConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FormTemplateConfiguration* internal_default_instance() {
    return reinterpret_cast<const FormTemplateConfiguration*>(
               &_FormTemplateConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FormTemplateConfiguration* other);
  friend void swap(FormTemplateConfiguration& a, FormTemplateConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FormTemplateConfiguration* New() const final {
    return CreateMaybeMessage<FormTemplateConfiguration>(nullptr);
  }

  FormTemplateConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FormTemplateConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FormTemplateConfiguration& from);
  void MergeFrom(const FormTemplateConfiguration& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FormTemplateConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .claros.common.form.FormFieldDefinition formFieldDefinitions = 4;
  int formfielddefinitions_size() const;
  void clear_formfielddefinitions();
  static const int kFormFieldDefinitionsFieldNumber = 4;
  ::claros::common::form::FormFieldDefinition* mutable_formfielddefinitions(int index);
  ::google::protobuf::RepeatedPtrField< ::claros::common::form::FormFieldDefinition >*
      mutable_formfielddefinitions();
  const ::claros::common::form::FormFieldDefinition& formfielddefinitions(int index) const;
  ::claros::common::form::FormFieldDefinition* add_formfielddefinitions();
  const ::google::protobuf::RepeatedPtrField< ::claros::common::form::FormFieldDefinition >&
      formfielddefinitions() const;

  // .claros.common.recurrence.Recurrence recurrence = 2;
  bool has_recurrence() const;
  void clear_recurrence();
  static const int kRecurrenceFieldNumber = 2;
  const ::claros::common::recurrence::Recurrence& recurrence() const;
  ::claros::common::recurrence::Recurrence* release_recurrence();
  ::claros::common::recurrence::Recurrence* mutable_recurrence();
  void set_allocated_recurrence(::claros::common::recurrence::Recurrence* recurrence);

  // .claros.common.form.FormLayout formLayout = 3;
  bool has_formlayout() const;
  void clear_formlayout();
  static const int kFormLayoutFieldNumber = 3;
  const ::claros::common::form::FormLayout& formlayout() const;
  ::claros::common::form::FormLayout* release_formlayout();
  ::claros::common::form::FormLayout* mutable_formlayout();
  void set_allocated_formlayout(::claros::common::form::FormLayout* formlayout);

  // .claros.common.form.FormTemplateType formTemplateType = 1;
  void clear_formtemplatetype();
  static const int kFormTemplateTypeFieldNumber = 1;
  ::claros::common::form::FormTemplateType formtemplatetype() const;
  void set_formtemplatetype(::claros::common::form::FormTemplateType value);

  // @@protoc_insertion_point(class_scope:claros.common.form.FormTemplateConfiguration)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::claros::common::form::FormFieldDefinition > formfielddefinitions_;
  ::claros::common::recurrence::Recurrence* recurrence_;
  ::claros::common::form::FormLayout* formlayout_;
  int formtemplatetype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5fcommon_5fform_5fformtemplateconfiguration_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FormTemplateConfiguration

// .claros.common.form.FormTemplateType formTemplateType = 1;
inline void FormTemplateConfiguration::clear_formtemplatetype() {
  formtemplatetype_ = 0;
}
inline ::claros::common::form::FormTemplateType FormTemplateConfiguration::formtemplatetype() const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplateConfiguration.formTemplateType)
  return static_cast< ::claros::common::form::FormTemplateType >(formtemplatetype_);
}
inline void FormTemplateConfiguration::set_formtemplatetype(::claros::common::form::FormTemplateType value) {
  
  formtemplatetype_ = value;
  // @@protoc_insertion_point(field_set:claros.common.form.FormTemplateConfiguration.formTemplateType)
}

// .claros.common.recurrence.Recurrence recurrence = 2;
inline bool FormTemplateConfiguration::has_recurrence() const {
  return this != internal_default_instance() && recurrence_ != nullptr;
}
inline const ::claros::common::recurrence::Recurrence& FormTemplateConfiguration::recurrence() const {
  const ::claros::common::recurrence::Recurrence* p = recurrence_;
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplateConfiguration.recurrence)
  return p != nullptr ? *p : *reinterpret_cast<const ::claros::common::recurrence::Recurrence*>(
      &::claros::common::recurrence::_Recurrence_default_instance_);
}
inline ::claros::common::recurrence::Recurrence* FormTemplateConfiguration::release_recurrence() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormTemplateConfiguration.recurrence)
  
  ::claros::common::recurrence::Recurrence* temp = recurrence_;
  recurrence_ = nullptr;
  return temp;
}
inline ::claros::common::recurrence::Recurrence* FormTemplateConfiguration::mutable_recurrence() {
  
  if (recurrence_ == nullptr) {
    auto* p = CreateMaybeMessage<::claros::common::recurrence::Recurrence>(GetArenaNoVirtual());
    recurrence_ = p;
  }
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormTemplateConfiguration.recurrence)
  return recurrence_;
}
inline void FormTemplateConfiguration::set_allocated_recurrence(::claros::common::recurrence::Recurrence* recurrence) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(recurrence_);
  }
  if (recurrence) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      recurrence = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, recurrence, submessage_arena);
    }
    
  } else {
    
  }
  recurrence_ = recurrence;
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormTemplateConfiguration.recurrence)
}

// .claros.common.form.FormLayout formLayout = 3;
inline bool FormTemplateConfiguration::has_formlayout() const {
  return this != internal_default_instance() && formlayout_ != nullptr;
}
inline const ::claros::common::form::FormLayout& FormTemplateConfiguration::formlayout() const {
  const ::claros::common::form::FormLayout* p = formlayout_;
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplateConfiguration.formLayout)
  return p != nullptr ? *p : *reinterpret_cast<const ::claros::common::form::FormLayout*>(
      &::claros::common::form::_FormLayout_default_instance_);
}
inline ::claros::common::form::FormLayout* FormTemplateConfiguration::release_formlayout() {
  // @@protoc_insertion_point(field_release:claros.common.form.FormTemplateConfiguration.formLayout)
  
  ::claros::common::form::FormLayout* temp = formlayout_;
  formlayout_ = nullptr;
  return temp;
}
inline ::claros::common::form::FormLayout* FormTemplateConfiguration::mutable_formlayout() {
  
  if (formlayout_ == nullptr) {
    auto* p = CreateMaybeMessage<::claros::common::form::FormLayout>(GetArenaNoVirtual());
    formlayout_ = p;
  }
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormTemplateConfiguration.formLayout)
  return formlayout_;
}
inline void FormTemplateConfiguration::set_allocated_formlayout(::claros::common::form::FormLayout* formlayout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(formlayout_);
  }
  if (formlayout) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      formlayout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, formlayout, submessage_arena);
    }
    
  } else {
    
  }
  formlayout_ = formlayout;
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormTemplateConfiguration.formLayout)
}

// repeated .claros.common.form.FormFieldDefinition formFieldDefinitions = 4;
inline int FormTemplateConfiguration::formfielddefinitions_size() const {
  return formfielddefinitions_.size();
}
inline ::claros::common::form::FormFieldDefinition* FormTemplateConfiguration::mutable_formfielddefinitions(int index) {
  // @@protoc_insertion_point(field_mutable:claros.common.form.FormTemplateConfiguration.formFieldDefinitions)
  return formfielddefinitions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::claros::common::form::FormFieldDefinition >*
FormTemplateConfiguration::mutable_formfielddefinitions() {
  // @@protoc_insertion_point(field_mutable_list:claros.common.form.FormTemplateConfiguration.formFieldDefinitions)
  return &formfielddefinitions_;
}
inline const ::claros::common::form::FormFieldDefinition& FormTemplateConfiguration::formfielddefinitions(int index) const {
  // @@protoc_insertion_point(field_get:claros.common.form.FormTemplateConfiguration.formFieldDefinitions)
  return formfielddefinitions_.Get(index);
}
inline ::claros::common::form::FormFieldDefinition* FormTemplateConfiguration::add_formfielddefinitions() {
  // @@protoc_insertion_point(field_add:claros.common.form.FormTemplateConfiguration.formFieldDefinitions)
  return formfielddefinitions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::claros::common::form::FormFieldDefinition >&
FormTemplateConfiguration::formfielddefinitions() const {
  // @@protoc_insertion_point(field_list:claros.common.form.FormTemplateConfiguration.formFieldDefinitions)
  return formfielddefinitions_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace form
}  // namespace common
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5fcommon_5fform_5fformtemplateconfiguration_2eproto
