// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_setting_data.proto

#ifndef PROTOBUF_INCLUDED_claros_5finstrument_5fsetting_5fdata_2eproto
#define PROTOBUF_INCLUDED_claros_5finstrument_5fsetting_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5finstrument_5fsetting_5fdata_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5finstrument_5fsetting_5fdata_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5finstrument_5fsetting_5fdata_2eproto();
namespace claros {
namespace instrument {
class Setting;
class SettingDefaultTypeInternal;
extern SettingDefaultTypeInternal _Setting_default_instance_;
class Setting_SettingsEntry_DoNotUse;
class Setting_SettingsEntry_DoNotUseDefaultTypeInternal;
extern Setting_SettingsEntry_DoNotUseDefaultTypeInternal _Setting_SettingsEntry_DoNotUse_default_instance_;
class Settings;
class SettingsDefaultTypeInternal;
extern SettingsDefaultTypeInternal _Settings_default_instance_;
}  // namespace instrument
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::instrument::Setting* Arena::CreateMaybeMessage<::claros::instrument::Setting>(Arena*);
template<> ::claros::instrument::Setting_SettingsEntry_DoNotUse* Arena::CreateMaybeMessage<::claros::instrument::Setting_SettingsEntry_DoNotUse>(Arena*);
template<> ::claros::instrument::Settings* Arena::CreateMaybeMessage<::claros::instrument::Settings>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace instrument {

// ===================================================================

class Settings :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.instrument.Settings) */ {
 public:
  Settings();
  virtual ~Settings();

  Settings(const Settings& from);

  inline Settings& operator=(const Settings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Settings(Settings&& from) noexcept
    : Settings() {
    *this = ::std::move(from);
  }

  inline Settings& operator=(Settings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Settings& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Settings* internal_default_instance() {
    return reinterpret_cast<const Settings*>(
               &_Settings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Settings* other);
  friend void swap(Settings& a, Settings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Settings* New() const final {
    return CreateMaybeMessage<Settings>(nullptr);
  }

  Settings* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Settings>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Settings& from);
  void MergeFrom(const Settings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Settings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .claros.instrument.Setting settings = 1;
  int settings_size() const;
  void clear_settings();
  static const int kSettingsFieldNumber = 1;
  ::claros::instrument::Setting* mutable_settings(int index);
  ::google::protobuf::RepeatedPtrField< ::claros::instrument::Setting >*
      mutable_settings();
  const ::claros::instrument::Setting& settings(int index) const;
  ::claros::instrument::Setting* add_settings();
  const ::google::protobuf::RepeatedPtrField< ::claros::instrument::Setting >&
      settings() const;

  // @@protoc_insertion_point(class_scope:claros.instrument.Settings)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::claros::instrument::Setting > settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5finstrument_5fsetting_5fdata_2eproto;
};
// -------------------------------------------------------------------

class Setting_SettingsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Setting_SettingsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
static bool _ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  typedef ::google::protobuf::internal::MapEntry<Setting_SettingsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Setting_SettingsEntry_DoNotUse();
  Setting_SettingsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Setting_SettingsEntry_DoNotUse& other);
  static const Setting_SettingsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Setting_SettingsEntry_DoNotUse*>(&_Setting_SettingsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Setting :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.instrument.Setting) */ {
 public:
  Setting();
  virtual ~Setting();

  Setting(const Setting& from);

  inline Setting& operator=(const Setting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Setting(Setting&& from) noexcept
    : Setting() {
    *this = ::std::move(from);
  }

  inline Setting& operator=(Setting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Setting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Setting* internal_default_instance() {
    return reinterpret_cast<const Setting*>(
               &_Setting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Setting* other);
  friend void swap(Setting& a, Setting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Setting* New() const final {
    return CreateMaybeMessage<Setting>(nullptr);
  }

  Setting* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Setting>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Setting& from);
  void MergeFrom(const Setting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Setting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> settings = 1;
  int settings_size() const;
  void clear_settings();
  static const int kSettingsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      settings() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_settings();

  // @@protoc_insertion_point(class_scope:claros.instrument.Setting)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Setting_SettingsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > settings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5finstrument_5fsetting_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Settings

// repeated .claros.instrument.Setting settings = 1;
inline int Settings::settings_size() const {
  return settings_.size();
}
inline void Settings::clear_settings() {
  settings_.Clear();
}
inline ::claros::instrument::Setting* Settings::mutable_settings(int index) {
  // @@protoc_insertion_point(field_mutable:claros.instrument.Settings.settings)
  return settings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::claros::instrument::Setting >*
Settings::mutable_settings() {
  // @@protoc_insertion_point(field_mutable_list:claros.instrument.Settings.settings)
  return &settings_;
}
inline const ::claros::instrument::Setting& Settings::settings(int index) const {
  // @@protoc_insertion_point(field_get:claros.instrument.Settings.settings)
  return settings_.Get(index);
}
inline ::claros::instrument::Setting* Settings::add_settings() {
  // @@protoc_insertion_point(field_add:claros.instrument.Settings.settings)
  return settings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::claros::instrument::Setting >&
Settings::settings() const {
  // @@protoc_insertion_point(field_list:claros.instrument.Settings.settings)
  return settings_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Setting

// map<string, string> settings = 1;
inline int Setting::settings_size() const {
  return settings_.size();
}
inline void Setting::clear_settings() {
  settings_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Setting::settings() const {
  // @@protoc_insertion_point(field_map:claros.instrument.Setting.settings)
  return settings_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Setting::mutable_settings() {
  // @@protoc_insertion_point(field_mutable_map:claros.instrument.Setting.settings)
  return settings_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace instrument
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5finstrument_5fsetting_5fdata_2eproto
