// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_task_definition.proto

#include "claros_common_task_definition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5ftask_5fdefinition_5fbinding_5finstrument_5fmaintenance_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BindingInstrumentMaintenance_claros_5fcommon_5ftask_5fdefinition_5fbinding_5finstrument_5fmaintenance_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5ftask_5fdefinition_5fsource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TaskDefinitionSource_claros_5fcommon_5ftask_5fdefinition_5fsource_2eproto;
namespace claros {
namespace common {
namespace task {
class TaskDefinitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TaskDefinition> _instance;
  const ::claros::common::task::BindingInstrumentMaintenance* bindinginstrumentmaintenance_;
} _TaskDefinition_default_instance_;
}  // namespace task
}  // namespace common
}  // namespace claros
static void InitDefaultsTaskDefinition_claros_5fcommon_5ftask_5fdefinition_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::common::task::_TaskDefinition_default_instance_;
    new (ptr) ::claros::common::task::TaskDefinition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::common::task::TaskDefinition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TaskDefinition_claros_5fcommon_5ftask_5fdefinition_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTaskDefinition_claros_5fcommon_5ftask_5fdefinition_2eproto}, {
      &scc_info_TaskDefinitionSource_claros_5fcommon_5ftask_5fdefinition_5fsource_2eproto.base,
      &scc_info_BindingInstrumentMaintenance_claros_5fcommon_5ftask_5fdefinition_5fbinding_5finstrument_5fmaintenance_2eproto.base,}};

void InitDefaults_claros_5fcommon_5ftask_5fdefinition_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_TaskDefinition_claros_5fcommon_5ftask_5fdefinition_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5fcommon_5ftask_5fdefinition_2eproto[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_claros_5fcommon_5ftask_5fdefinition_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5fcommon_5ftask_5fdefinition_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5fcommon_5ftask_5fdefinition_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::common::task::TaskDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::claros::common::task::TaskDefinition, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::common::task::TaskDefinition, tasksource_),
  PROTOBUF_FIELD_OFFSET(::claros::common::task::TaskDefinition, triggertype_),
  offsetof(::claros::common::task::TaskDefinitionDefaultTypeInternal, bindinginstrumentmaintenance_),
  PROTOBUF_FIELD_OFFSET(::claros::common::task::TaskDefinition, binding_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::common::task::TaskDefinition)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::common::task::_TaskDefinition_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5fcommon_5ftask_5fdefinition_2eproto = {
  {}, AddDescriptors_claros_5fcommon_5ftask_5fdefinition_2eproto, "claros_common_task_definition.proto", schemas,
  file_default_instances, TableStruct_claros_5fcommon_5ftask_5fdefinition_2eproto::offsets,
  file_level_metadata_claros_5fcommon_5ftask_5fdefinition_2eproto, 1, file_level_enum_descriptors_claros_5fcommon_5ftask_5fdefinition_2eproto, file_level_service_descriptors_claros_5fcommon_5ftask_5fdefinition_2eproto,
};

const char descriptor_table_protodef_claros_5fcommon_5ftask_5fdefinition_2eproto[] =
  "\n#claros_common_task_definition.proto\022\022c"
  "laros.common.task\032Bclaros_common_task_de"
  "finition_binding_instrument_maintenance."
  "proto\032*claros_common_task_definition_sou"
  "rce.proto\"\245\003\n\016TaskDefinition\022<\n\ntaskSour"
  "ce\030\001 \003(\0132(.claros.common.task.TaskDefini"
  "tionSource\022N\n\013triggerType\030\002 \001(\01629.claros"
  ".common.task.TaskDefinition.MaintenanceT"
  "riggerType\022X\n\034bindingInstrumentMaintenan"
  "ce\030\003 \001(\01320.claros.common.task.BindingIns"
  "trumentMaintenanceH\000\"\237\001\n\026MaintenanceTrig"
  "gerType\022\037\n\033MAINTENANCE_TRIGGER_UNKNOWN\020\000"
  "\022!\n\035MAINTENANCE_TRIGGER_SCHEDULED\020\001\022!\n\035M"
  "AINTENANCE_TRIGGER_PROGNOSYS\020\002\022\036\n\032MAINTE"
  "NANCE_TRIGGER_MANUAL\020\003B\t\n\007bindingb\006proto"
  "3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5fcommon_5ftask_5fdefinition_2eproto = {
  false, InitDefaults_claros_5fcommon_5ftask_5fdefinition_2eproto, 
  descriptor_table_protodef_claros_5fcommon_5ftask_5fdefinition_2eproto,
  "claros_common_task_definition.proto", &assign_descriptors_table_claros_5fcommon_5ftask_5fdefinition_2eproto, 601,
};

void AddDescriptors_claros_5fcommon_5ftask_5fdefinition_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_claros_5fcommon_5ftask_5fdefinition_5fbinding_5finstrument_5fmaintenance_2eproto,
    ::AddDescriptors_claros_5fcommon_5ftask_5fdefinition_5fsource_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5fcommon_5ftask_5fdefinition_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5fcommon_5ftask_5fdefinition_2eproto = []() { AddDescriptors_claros_5fcommon_5ftask_5fdefinition_2eproto(); return true; }();
namespace claros {
namespace common {
namespace task {
const ::google::protobuf::EnumDescriptor* TaskDefinition_MaintenanceTriggerType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_claros_5fcommon_5ftask_5fdefinition_2eproto);
  return file_level_enum_descriptors_claros_5fcommon_5ftask_5fdefinition_2eproto[0];
}
bool TaskDefinition_MaintenanceTriggerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TaskDefinition_MaintenanceTriggerType TaskDefinition::MAINTENANCE_TRIGGER_UNKNOWN;
const TaskDefinition_MaintenanceTriggerType TaskDefinition::MAINTENANCE_TRIGGER_SCHEDULED;
const TaskDefinition_MaintenanceTriggerType TaskDefinition::MAINTENANCE_TRIGGER_PROGNOSYS;
const TaskDefinition_MaintenanceTriggerType TaskDefinition::MAINTENANCE_TRIGGER_MANUAL;
const TaskDefinition_MaintenanceTriggerType TaskDefinition::MaintenanceTriggerType_MIN;
const TaskDefinition_MaintenanceTriggerType TaskDefinition::MaintenanceTriggerType_MAX;
const int TaskDefinition::MaintenanceTriggerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TaskDefinition::InitAsDefaultInstance() {
  ::claros::common::task::_TaskDefinition_default_instance_.bindinginstrumentmaintenance_ = const_cast< ::claros::common::task::BindingInstrumentMaintenance*>(
      ::claros::common::task::BindingInstrumentMaintenance::internal_default_instance());
}
class TaskDefinition::HasBitSetters {
 public:
  static const ::claros::common::task::BindingInstrumentMaintenance& bindinginstrumentmaintenance(const TaskDefinition* msg);
};

const ::claros::common::task::BindingInstrumentMaintenance&
TaskDefinition::HasBitSetters::bindinginstrumentmaintenance(const TaskDefinition* msg) {
  return *msg->binding_.bindinginstrumentmaintenance_;
}
void TaskDefinition::clear_tasksource() {
  tasksource_.Clear();
}
void TaskDefinition::set_allocated_bindinginstrumentmaintenance(::claros::common::task::BindingInstrumentMaintenance* bindinginstrumentmaintenance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_binding();
  if (bindinginstrumentmaintenance) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bindinginstrumentmaintenance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bindinginstrumentmaintenance, submessage_arena);
    }
    set_has_bindinginstrumentmaintenance();
    binding_.bindinginstrumentmaintenance_ = bindinginstrumentmaintenance;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.common.task.TaskDefinition.bindingInstrumentMaintenance)
}
void TaskDefinition::clear_bindinginstrumentmaintenance() {
  if (has_bindinginstrumentmaintenance()) {
    delete binding_.bindinginstrumentmaintenance_;
    clear_has_binding();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TaskDefinition::kTaskSourceFieldNumber;
const int TaskDefinition::kTriggerTypeFieldNumber;
const int TaskDefinition::kBindingInstrumentMaintenanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TaskDefinition::TaskDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.common.task.TaskDefinition)
}
TaskDefinition::TaskDefinition(const TaskDefinition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      tasksource_(from.tasksource_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  triggertype_ = from.triggertype_;
  clear_has_binding();
  switch (from.binding_case()) {
    case kBindingInstrumentMaintenance: {
      mutable_bindinginstrumentmaintenance()->::claros::common::task::BindingInstrumentMaintenance::MergeFrom(from.bindinginstrumentmaintenance());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:claros.common.task.TaskDefinition)
}

void TaskDefinition::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TaskDefinition_claros_5fcommon_5ftask_5fdefinition_2eproto.base);
  triggertype_ = 0;
  clear_has_binding();
}

TaskDefinition::~TaskDefinition() {
  // @@protoc_insertion_point(destructor:claros.common.task.TaskDefinition)
  SharedDtor();
}

void TaskDefinition::SharedDtor() {
  if (has_binding()) {
    clear_binding();
  }
}

void TaskDefinition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TaskDefinition& TaskDefinition::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TaskDefinition_claros_5fcommon_5ftask_5fdefinition_2eproto.base);
  return *internal_default_instance();
}


void TaskDefinition::clear_binding() {
// @@protoc_insertion_point(one_of_clear_start:claros.common.task.TaskDefinition)
  switch (binding_case()) {
    case kBindingInstrumentMaintenance: {
      delete binding_.bindinginstrumentmaintenance_;
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BINDING_NOT_SET;
}


void TaskDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.common.task.TaskDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tasksource_.Clear();
  triggertype_ = 0;
  clear_binding();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TaskDefinition::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TaskDefinition*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .claros.common.task.TaskDefinitionSource taskSource = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::task::TaskDefinitionSource::_InternalParse;
          object = msg->add_tasksource();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .claros.common.task.TaskDefinition.MaintenanceTriggerType triggerType = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_triggertype(static_cast<::claros::common::task::TaskDefinition_MaintenanceTriggerType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .claros.common.task.BindingInstrumentMaintenance bindingInstrumentMaintenance = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::task::BindingInstrumentMaintenance::_InternalParse;
        object = msg->mutable_bindinginstrumentmaintenance();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TaskDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.common.task.TaskDefinition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .claros.common.task.TaskDefinitionSource taskSource = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tasksource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.task.TaskDefinition.MaintenanceTriggerType triggerType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_triggertype(static_cast< ::claros::common::task::TaskDefinition_MaintenanceTriggerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.task.BindingInstrumentMaintenance bindingInstrumentMaintenance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bindinginstrumentmaintenance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.common.task.TaskDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.common.task.TaskDefinition)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TaskDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.common.task.TaskDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .claros.common.task.TaskDefinitionSource taskSource = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasksource_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->tasksource(static_cast<int>(i)),
      output);
  }

  // .claros.common.task.TaskDefinition.MaintenanceTriggerType triggerType = 2;
  if (this->triggertype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->triggertype(), output);
  }

  // .claros.common.task.BindingInstrumentMaintenance bindingInstrumentMaintenance = 3;
  if (has_bindinginstrumentmaintenance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::bindinginstrumentmaintenance(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.common.task.TaskDefinition)
}

::google::protobuf::uint8* TaskDefinition::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.common.task.TaskDefinition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .claros.common.task.TaskDefinitionSource taskSource = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tasksource_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->tasksource(static_cast<int>(i)), target);
  }

  // .claros.common.task.TaskDefinition.MaintenanceTriggerType triggerType = 2;
  if (this->triggertype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->triggertype(), target);
  }

  // .claros.common.task.BindingInstrumentMaintenance bindingInstrumentMaintenance = 3;
  if (has_bindinginstrumentmaintenance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::bindinginstrumentmaintenance(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.common.task.TaskDefinition)
  return target;
}

size_t TaskDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.common.task.TaskDefinition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .claros.common.task.TaskDefinitionSource taskSource = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->tasksource_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tasksource(static_cast<int>(i)));
    }
  }

  // .claros.common.task.TaskDefinition.MaintenanceTriggerType triggerType = 2;
  if (this->triggertype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->triggertype());
  }

  switch (binding_case()) {
    // .claros.common.task.BindingInstrumentMaintenance bindingInstrumentMaintenance = 3;
    case kBindingInstrumentMaintenance: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *binding_.bindinginstrumentmaintenance_);
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TaskDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.common.task.TaskDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  const TaskDefinition* source =
      ::google::protobuf::DynamicCastToGenerated<TaskDefinition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.common.task.TaskDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.common.task.TaskDefinition)
    MergeFrom(*source);
  }
}

void TaskDefinition::MergeFrom(const TaskDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.common.task.TaskDefinition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasksource_.MergeFrom(from.tasksource_);
  if (from.triggertype() != 0) {
    set_triggertype(from.triggertype());
  }
  switch (from.binding_case()) {
    case kBindingInstrumentMaintenance: {
      mutable_bindinginstrumentmaintenance()->::claros::common::task::BindingInstrumentMaintenance::MergeFrom(from.bindinginstrumentmaintenance());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
}

void TaskDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.common.task.TaskDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskDefinition::CopyFrom(const TaskDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.common.task.TaskDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskDefinition::IsInitialized() const {
  return true;
}

void TaskDefinition::Swap(TaskDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TaskDefinition::InternalSwap(TaskDefinition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&tasksource_)->InternalSwap(CastToBase(&other->tasksource_));
  swap(triggertype_, other->triggertype_);
  swap(binding_, other->binding_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata TaskDefinition::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5ftask_5fdefinition_2eproto);
  return ::file_level_metadata_claros_5fcommon_5ftask_5fdefinition_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace task
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::common::task::TaskDefinition* Arena::CreateMaybeMessage< ::claros::common::task::TaskDefinition >(Arena* arena) {
  return Arena::CreateInternal< ::claros::common::task::TaskDefinition >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
