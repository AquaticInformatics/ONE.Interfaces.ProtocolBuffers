// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_computation_computation.proto

#include "claros_common_computation_computation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcomputation_5fexpressionline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExpressionLine_claros_5fcommon_5fcomputation_5fexpressionline_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcomputation_5fvariable_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Variable_claros_5fcommon_5fcomputation_5fvariable_2eproto;
namespace claros {
namespace common {
namespace computation {
class ComputationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Computation> _instance;
  ::google::protobuf::internal::ArenaStringPtr ledgerid_;
  ::google::protobuf::internal::ArenaStringPtr formid_;
} _Computation_default_instance_;
}  // namespace computation
}  // namespace common
}  // namespace claros
static void InitDefaultsComputation_claros_5fcommon_5fcomputation_5fcomputation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::common::computation::_Computation_default_instance_;
    new (ptr) ::claros::common::computation::Computation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::common::computation::Computation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Computation_claros_5fcommon_5fcomputation_5fcomputation_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsComputation_claros_5fcommon_5fcomputation_5fcomputation_2eproto}, {
      &scc_info_Variable_claros_5fcommon_5fcomputation_5fvariable_2eproto.base,
      &scc_info_ExpressionLine_claros_5fcommon_5fcomputation_5fexpressionline_2eproto.base,}};

void InitDefaults_claros_5fcommon_5fcomputation_5fcomputation_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Computation_claros_5fcommon_5fcomputation_5fcomputation_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5fcommon_5fcomputation_5fcomputation_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5fcommon_5fcomputation_5fcomputation_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5fcommon_5fcomputation_5fcomputation_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5fcommon_5fcomputation_5fcomputation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, i18nkey_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, name_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, description_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, inputvariables_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, outputvariables_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, expressionlines_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, isactive_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, isvalid_),
  offsetof(::claros::common::computation::ComputationDefaultTypeInternal, ledgerid_),
  offsetof(::claros::common::computation::ComputationDefaultTypeInternal, formid_),
  PROTOBUF_FIELD_OFFSET(::claros::common::computation::Computation, binding_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::common::computation::Computation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::common::computation::_Computation_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5fcommon_5fcomputation_5fcomputation_2eproto = {
  {}, AddDescriptors_claros_5fcommon_5fcomputation_5fcomputation_2eproto, "claros_common_computation_computation.proto", schemas,
  file_default_instances, TableStruct_claros_5fcommon_5fcomputation_5fcomputation_2eproto::offsets,
  file_level_metadata_claros_5fcommon_5fcomputation_5fcomputation_2eproto, 1, file_level_enum_descriptors_claros_5fcommon_5fcomputation_5fcomputation_2eproto, file_level_service_descriptors_claros_5fcommon_5fcomputation_5fcomputation_2eproto,
};

const char descriptor_table_protodef_claros_5fcommon_5fcomputation_5fcomputation_2eproto[] =
  "\n+claros_common_computation_computation."
  "proto\022\031claros.common.computation\032(claros"
  "_common_computation_variable.proto\032.clar"
  "os_common_computation_expressionline.pro"
  "to\"\324\002\n\013Computation\022\017\n\007i18nKey\030\001 \001(\t\022\014\n\004n"
  "ame\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022;\n\016inputV"
  "ariables\030\004 \003(\0132#.claros.common.computati"
  "on.Variable\022<\n\017outputVariables\030\005 \003(\0132#.c"
  "laros.common.computation.Variable\022B\n\017exp"
  "ressionLines\030\006 \003(\0132).claros.common.compu"
  "tation.ExpressionLine\022\020\n\010isActive\030\007 \001(\010\022"
  "\017\n\007isValid\030\010 \001(\010\022\022\n\010ledgerId\030\t \001(\tH\000\022\020\n\006"
  "formId\030\n \001(\tH\000B\t\n\007bindingb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5fcommon_5fcomputation_5fcomputation_2eproto = {
  false, InitDefaults_claros_5fcommon_5fcomputation_5fcomputation_2eproto, 
  descriptor_table_protodef_claros_5fcommon_5fcomputation_5fcomputation_2eproto,
  "claros_common_computation_computation.proto", &assign_descriptors_table_claros_5fcommon_5fcomputation_5fcomputation_2eproto, 513,
};

void AddDescriptors_claros_5fcommon_5fcomputation_5fcomputation_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_claros_5fcommon_5fcomputation_5fvariable_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcomputation_5fexpressionline_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5fcommon_5fcomputation_5fcomputation_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5fcommon_5fcomputation_5fcomputation_2eproto = []() { AddDescriptors_claros_5fcommon_5fcomputation_5fcomputation_2eproto(); return true; }();
namespace claros {
namespace common {
namespace computation {

// ===================================================================

void Computation::InitAsDefaultInstance() {
  ::claros::common::computation::_Computation_default_instance_.ledgerid_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::claros::common::computation::_Computation_default_instance_.formid_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class Computation::HasBitSetters {
 public:
};

void Computation::clear_inputvariables() {
  inputvariables_.Clear();
}
void Computation::clear_outputvariables() {
  outputvariables_.Clear();
}
void Computation::clear_expressionlines() {
  expressionlines_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Computation::kI18NKeyFieldNumber;
const int Computation::kNameFieldNumber;
const int Computation::kDescriptionFieldNumber;
const int Computation::kInputVariablesFieldNumber;
const int Computation::kOutputVariablesFieldNumber;
const int Computation::kExpressionLinesFieldNumber;
const int Computation::kIsActiveFieldNumber;
const int Computation::kIsValidFieldNumber;
const int Computation::kLedgerIdFieldNumber;
const int Computation::kFormIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Computation::Computation()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.common.computation.Computation)
}
Computation::Computation(const Computation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      inputvariables_(from.inputvariables_),
      outputvariables_(from.outputvariables_),
      expressionlines_(from.expressionlines_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  i18nkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.i18nkey().size() > 0) {
    i18nkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.i18nkey_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&isactive_, &from.isactive_,
    static_cast<size_t>(reinterpret_cast<char*>(&isvalid_) -
    reinterpret_cast<char*>(&isactive_)) + sizeof(isvalid_));
  clear_has_binding();
  switch (from.binding_case()) {
    case kLedgerId: {
      set_ledgerid(from.ledgerid());
      break;
    }
    case kFormId: {
      set_formid(from.formid());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:claros.common.computation.Computation)
}

void Computation::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Computation_claros_5fcommon_5fcomputation_5fcomputation_2eproto.base);
  i18nkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isactive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isvalid_) -
      reinterpret_cast<char*>(&isactive_)) + sizeof(isvalid_));
  clear_has_binding();
}

Computation::~Computation() {
  // @@protoc_insertion_point(destructor:claros.common.computation.Computation)
  SharedDtor();
}

void Computation::SharedDtor() {
  i18nkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_binding()) {
    clear_binding();
  }
}

void Computation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Computation& Computation::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Computation_claros_5fcommon_5fcomputation_5fcomputation_2eproto.base);
  return *internal_default_instance();
}


void Computation::clear_binding() {
// @@protoc_insertion_point(one_of_clear_start:claros.common.computation.Computation)
  switch (binding_case()) {
    case kLedgerId: {
      binding_.ledgerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFormId: {
      binding_.formid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BINDING_NOT_SET;
}


void Computation::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.common.computation.Computation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputvariables_.Clear();
  outputvariables_.Clear();
  expressionlines_.Clear();
  i18nkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&isactive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isvalid_) -
      reinterpret_cast<char*>(&isactive_)) + sizeof(isvalid_));
  clear_binding();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Computation::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Computation*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string i18nKey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.computation.Computation.i18nKey");
        object = msg->mutable_i18nkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.computation.Computation.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.computation.Computation.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .claros.common.computation.Variable inputVariables = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::computation::Variable::_InternalParse;
          object = msg->add_inputvariables();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .claros.common.computation.Variable outputVariables = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::computation::Variable::_InternalParse;
          object = msg->add_outputvariables();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated .claros.common.computation.ExpressionLine expressionLines = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::computation::ExpressionLine::_InternalParse;
          object = msg->add_expressionlines();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // bool isActive = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_isactive(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool isValid = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_isvalid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string ledgerId = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.computation.Computation.ledgerId");
        object = msg->mutable_ledgerid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string formId = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.computation.Computation.formId");
        object = msg->mutable_formid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Computation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.common.computation.Computation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string i18nKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_i18nkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->i18nkey().data(), static_cast<int>(this->i18nkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.computation.Computation.i18nKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.computation.Computation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.computation.Computation.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.computation.Variable inputVariables = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputvariables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.computation.Variable outputVariables = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_outputvariables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.computation.ExpressionLine expressionLines = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_expressionlines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isActive = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isValid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ledgerId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ledgerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ledgerid().data(), static_cast<int>(this->ledgerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.computation.Computation.ledgerId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string formId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->formid().data(), static_cast<int>(this->formid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.computation.Computation.formId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.common.computation.Computation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.common.computation.Computation)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Computation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.common.computation.Computation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string i18nKey = 1;
  if (this->i18nkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->i18nkey().data(), static_cast<int>(this->i18nkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.i18nKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->i18nkey(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // repeated .claros.common.computation.Variable inputVariables = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputvariables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->inputvariables(static_cast<int>(i)),
      output);
  }

  // repeated .claros.common.computation.Variable outputVariables = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputvariables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->outputvariables(static_cast<int>(i)),
      output);
  }

  // repeated .claros.common.computation.ExpressionLine expressionLines = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressionlines_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->expressionlines(static_cast<int>(i)),
      output);
  }

  // bool isActive = 7;
  if (this->isactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isactive(), output);
  }

  // bool isValid = 8;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isvalid(), output);
  }

  // string ledgerId = 9;
  if (has_ledgerid()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ledgerid().data(), static_cast<int>(this->ledgerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.ledgerId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ledgerid(), output);
  }

  // string formId = 10;
  if (has_formid()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formid().data(), static_cast<int>(this->formid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.formId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->formid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.common.computation.Computation)
}

::google::protobuf::uint8* Computation::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.common.computation.Computation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string i18nKey = 1;
  if (this->i18nkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->i18nkey().data(), static_cast<int>(this->i18nkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.i18nKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->i18nkey(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // repeated .claros.common.computation.Variable inputVariables = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputvariables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->inputvariables(static_cast<int>(i)), target);
  }

  // repeated .claros.common.computation.Variable outputVariables = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputvariables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->outputvariables(static_cast<int>(i)), target);
  }

  // repeated .claros.common.computation.ExpressionLine expressionLines = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressionlines_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->expressionlines(static_cast<int>(i)), target);
  }

  // bool isActive = 7;
  if (this->isactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isactive(), target);
  }

  // bool isValid = 8;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->isvalid(), target);
  }

  // string ledgerId = 9;
  if (has_ledgerid()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ledgerid().data(), static_cast<int>(this->ledgerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.ledgerId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ledgerid(), target);
  }

  // string formId = 10;
  if (has_formid()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formid().data(), static_cast<int>(this->formid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.computation.Computation.formId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->formid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.common.computation.Computation)
  return target;
}

size_t Computation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.common.computation.Computation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .claros.common.computation.Variable inputVariables = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->inputvariables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputvariables(static_cast<int>(i)));
    }
  }

  // repeated .claros.common.computation.Variable outputVariables = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->outputvariables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputvariables(static_cast<int>(i)));
    }
  }

  // repeated .claros.common.computation.ExpressionLine expressionLines = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->expressionlines_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->expressionlines(static_cast<int>(i)));
    }
  }

  // string i18nKey = 1;
  if (this->i18nkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->i18nkey());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // bool isActive = 7;
  if (this->isactive() != 0) {
    total_size += 1 + 1;
  }

  // bool isValid = 8;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  switch (binding_case()) {
    // string ledgerId = 9;
    case kLedgerId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ledgerid());
      break;
    }
    // string formId = 10;
    case kFormId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->formid());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Computation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.common.computation.Computation)
  GOOGLE_DCHECK_NE(&from, this);
  const Computation* source =
      ::google::protobuf::DynamicCastToGenerated<Computation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.common.computation.Computation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.common.computation.Computation)
    MergeFrom(*source);
  }
}

void Computation::MergeFrom(const Computation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.common.computation.Computation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputvariables_.MergeFrom(from.inputvariables_);
  outputvariables_.MergeFrom(from.outputvariables_);
  expressionlines_.MergeFrom(from.expressionlines_);
  if (from.i18nkey().size() > 0) {

    i18nkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.i18nkey_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.isactive() != 0) {
    set_isactive(from.isactive());
  }
  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  switch (from.binding_case()) {
    case kLedgerId: {
      set_ledgerid(from.ledgerid());
      break;
    }
    case kFormId: {
      set_formid(from.formid());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
}

void Computation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.common.computation.Computation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Computation::CopyFrom(const Computation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.common.computation.Computation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Computation::IsInitialized() const {
  return true;
}

void Computation::Swap(Computation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Computation::InternalSwap(Computation* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&inputvariables_)->InternalSwap(CastToBase(&other->inputvariables_));
  CastToBase(&outputvariables_)->InternalSwap(CastToBase(&other->outputvariables_));
  CastToBase(&expressionlines_)->InternalSwap(CastToBase(&other->expressionlines_));
  i18nkey_.Swap(&other->i18nkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(isactive_, other->isactive_);
  swap(isvalid_, other->isvalid_);
  swap(binding_, other->binding_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Computation::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fcomputation_5fcomputation_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fcomputation_5fcomputation_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace computation
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::common::computation::Computation* Arena::CreateMaybeMessage< ::claros::common::computation::Computation >(Arena* arena) {
  return Arena::CreateInternal< ::claros::common::computation::Computation >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
