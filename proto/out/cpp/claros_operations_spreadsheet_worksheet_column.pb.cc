// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_operations_spreadsheet_worksheet_column.proto

#include "claros_operations_spreadsheet_worksheet_column.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcomputation_5fbinding_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ComputationBinding_claros_5fcommon_5fcomputation_5fbinding_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5flimit_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Limit_claros_5fcommon_5fcore_5flimit_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5freportablequalifierdefinition_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReportableQualifierDefinition_claros_5fcommon_5fcore_5freportablequalifierdefinition_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5finstrument_5fmeasurement_5fbinding_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InstrumentMeasurementBinding_claros_5finstrument_5fmeasurement_5fbinding_2eproto;
namespace claros {
namespace operations {
namespace spreadsheet {
class ColumnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Column> _instance;
  const ::claros::instrument::InstrumentMeasurementBinding* instrumentmeasurementbinding_;
  const ::claros::common::computation::ComputationBinding* computationbinding_;
} _Column_default_instance_;
}  // namespace spreadsheet
}  // namespace operations
}  // namespace claros
static void InitDefaultsColumn_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::operations::spreadsheet::_Column_default_instance_;
    new (ptr) ::claros::operations::spreadsheet::Column();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::operations::spreadsheet::Column::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Column_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsColumn_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto}, {
      &scc_info_Limit_claros_5fcommon_5fcore_5flimit_2eproto.base,
      &scc_info_InstrumentMeasurementBinding_claros_5finstrument_5fmeasurement_5fbinding_2eproto.base,
      &scc_info_ComputationBinding_claros_5fcommon_5fcomputation_5fbinding_2eproto.base,
      &scc_info_ReportableQualifierDefinition_claros_5fcommon_5fcore_5freportablequalifierdefinition_2eproto.base,}};

void InitDefaults_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Column_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, columnnumber_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, name_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, description_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, parameterid_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, displayunitid_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, locationid_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, isactive_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, limits_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, datasourcetype_),
  offsetof(::claros::operations::spreadsheet::ColumnDefaultTypeInternal, instrumentmeasurementbinding_),
  offsetof(::claros::operations::spreadsheet::ColumnDefaultTypeInternal, computationbinding_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, reportablequaliferdefinition_),
  PROTOBUF_FIELD_OFFSET(::claros::operations::spreadsheet::Column, binding_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::operations::spreadsheet::Column)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::operations::spreadsheet::_Column_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto = {
  {}, AddDescriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto, "claros_operations_spreadsheet_worksheet_column.proto", schemas,
  file_default_instances, TableStruct_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto::offsets,
  file_level_metadata_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto, 1, file_level_enum_descriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto, file_level_service_descriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto,
};

const char descriptor_table_protodef_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto[] =
  "\n4claros_operations_spreadsheet_workshee"
  "t_column.proto\022\035claros.operations.spread"
  "sheet\032(claros_common_core_datasource_typ"
  "e.proto\032\036claros_common_core_limit.proto\032"
  "+claros_instrument_measurement_binding.p"
  "roto\032\'claros_common_computation_binding."
  "proto\0326claros_common_core_reportablequal"
  "ifierdefinition.proto\"\204\004\n\006Column\022\024\n\014colu"
  "mnNumber\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\023\n\013descript"
  "ion\030\003 \001(\t\022\023\n\013parameterId\030\004 \001(\r\022\025\n\rdispla"
  "yUnitId\030\005 \001(\r\022\022\n\nlocationId\030\006 \001(\t\022\020\n\010isA"
  "ctive\030\007 \001(\010\022)\n\006limits\030\010 \003(\0132\031.claros.com"
  "mon.core.Limit\022:\n\016dataSourceType\030\t \001(\0162\""
  ".claros.common.core.DataSourceType\022W\n\034in"
  "strumentMeasurementBinding\030\n \001(\0132/.claro"
  "s.instrument.InstrumentMeasurementBindin"
  "gH\000\022K\n\022computationBinding\030\013 \001(\0132-.claros"
  ".common.computation.ComputationBindingH\000"
  "\022W\n\034reportableQualiferDefinition\030\014 \003(\01321"
  ".claros.common.core.ReportableQualifierD"
  "efinitionB\t\n\007bindingb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto = {
  false, InitDefaults_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto, 
  descriptor_table_protodef_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto,
  "claros_operations_spreadsheet_worksheet_column.proto", &assign_descriptors_table_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto, 828,
};

void AddDescriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[5] =
  {
    ::AddDescriptors_claros_5fcommon_5fcore_5fdatasource_5ftype_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcore_5flimit_2eproto,
    ::AddDescriptors_claros_5finstrument_5fmeasurement_5fbinding_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcomputation_5fbinding_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcore_5freportablequalifierdefinition_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto, deps, 5);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto = []() { AddDescriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto(); return true; }();
namespace claros {
namespace operations {
namespace spreadsheet {

// ===================================================================

void Column::InitAsDefaultInstance() {
  ::claros::operations::spreadsheet::_Column_default_instance_.instrumentmeasurementbinding_ = const_cast< ::claros::instrument::InstrumentMeasurementBinding*>(
      ::claros::instrument::InstrumentMeasurementBinding::internal_default_instance());
  ::claros::operations::spreadsheet::_Column_default_instance_.computationbinding_ = const_cast< ::claros::common::computation::ComputationBinding*>(
      ::claros::common::computation::ComputationBinding::internal_default_instance());
}
class Column::HasBitSetters {
 public:
  static const ::claros::instrument::InstrumentMeasurementBinding& instrumentmeasurementbinding(const Column* msg);
  static const ::claros::common::computation::ComputationBinding& computationbinding(const Column* msg);
};

const ::claros::instrument::InstrumentMeasurementBinding&
Column::HasBitSetters::instrumentmeasurementbinding(const Column* msg) {
  return *msg->binding_.instrumentmeasurementbinding_;
}
const ::claros::common::computation::ComputationBinding&
Column::HasBitSetters::computationbinding(const Column* msg) {
  return *msg->binding_.computationbinding_;
}
void Column::clear_limits() {
  limits_.Clear();
}
void Column::set_allocated_instrumentmeasurementbinding(::claros::instrument::InstrumentMeasurementBinding* instrumentmeasurementbinding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_binding();
  if (instrumentmeasurementbinding) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      instrumentmeasurementbinding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instrumentmeasurementbinding, submessage_arena);
    }
    set_has_instrumentmeasurementbinding();
    binding_.instrumentmeasurementbinding_ = instrumentmeasurementbinding;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.operations.spreadsheet.Column.instrumentMeasurementBinding)
}
void Column::clear_instrumentmeasurementbinding() {
  if (has_instrumentmeasurementbinding()) {
    delete binding_.instrumentmeasurementbinding_;
    clear_has_binding();
  }
}
void Column::set_allocated_computationbinding(::claros::common::computation::ComputationBinding* computationbinding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_binding();
  if (computationbinding) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      computationbinding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, computationbinding, submessage_arena);
    }
    set_has_computationbinding();
    binding_.computationbinding_ = computationbinding;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.operations.spreadsheet.Column.computationBinding)
}
void Column::clear_computationbinding() {
  if (has_computationbinding()) {
    delete binding_.computationbinding_;
    clear_has_binding();
  }
}
void Column::clear_reportablequaliferdefinition() {
  reportablequaliferdefinition_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Column::kColumnNumberFieldNumber;
const int Column::kNameFieldNumber;
const int Column::kDescriptionFieldNumber;
const int Column::kParameterIdFieldNumber;
const int Column::kDisplayUnitIdFieldNumber;
const int Column::kLocationIdFieldNumber;
const int Column::kIsActiveFieldNumber;
const int Column::kLimitsFieldNumber;
const int Column::kDataSourceTypeFieldNumber;
const int Column::kInstrumentMeasurementBindingFieldNumber;
const int Column::kComputationBindingFieldNumber;
const int Column::kReportableQualiferDefinitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Column::Column()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.operations.spreadsheet.Column)
}
Column::Column(const Column& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      limits_(from.limits_),
      reportablequaliferdefinition_(from.reportablequaliferdefinition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locationid().size() > 0) {
    locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
  }
  ::memcpy(&columnnumber_, &from.columnnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&datasourcetype_) -
    reinterpret_cast<char*>(&columnnumber_)) + sizeof(datasourcetype_));
  clear_has_binding();
  switch (from.binding_case()) {
    case kInstrumentMeasurementBinding: {
      mutable_instrumentmeasurementbinding()->::claros::instrument::InstrumentMeasurementBinding::MergeFrom(from.instrumentmeasurementbinding());
      break;
    }
    case kComputationBinding: {
      mutable_computationbinding()->::claros::common::computation::ComputationBinding::MergeFrom(from.computationbinding());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:claros.operations.spreadsheet.Column)
}

void Column::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Column_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locationid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&columnnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datasourcetype_) -
      reinterpret_cast<char*>(&columnnumber_)) + sizeof(datasourcetype_));
  clear_has_binding();
}

Column::~Column() {
  // @@protoc_insertion_point(destructor:claros.operations.spreadsheet.Column)
  SharedDtor();
}

void Column::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locationid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_binding()) {
    clear_binding();
  }
}

void Column::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Column& Column::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Column_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto.base);
  return *internal_default_instance();
}


void Column::clear_binding() {
// @@protoc_insertion_point(one_of_clear_start:claros.operations.spreadsheet.Column)
  switch (binding_case()) {
    case kInstrumentMeasurementBinding: {
      delete binding_.instrumentmeasurementbinding_;
      break;
    }
    case kComputationBinding: {
      delete binding_.computationbinding_;
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BINDING_NOT_SET;
}


void Column::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.operations.spreadsheet.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  limits_.Clear();
  reportablequaliferdefinition_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&columnnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datasourcetype_) -
      reinterpret_cast<char*>(&columnnumber_)) + sizeof(datasourcetype_));
  clear_binding();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Column::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Column*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 columnNumber = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_columnnumber(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.operations.spreadsheet.Column.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string description = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.operations.spreadsheet.Column.description");
        object = msg->mutable_description();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 parameterId = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_parameterid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 displayUnitId = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_displayunitid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string locationId = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.operations.spreadsheet.Column.locationId");
        object = msg->mutable_locationid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool isActive = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_isactive(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .claros.common.core.Limit limits = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::core::Limit::_InternalParse;
          object = msg->add_limits();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 66 && (ptr += 1));
        break;
      }
      // .claros.common.core.DataSourceType dataSourceType = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_datasourcetype(static_cast<::claros::common::core::DataSourceType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .claros.instrument.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::instrument::InstrumentMeasurementBinding::_InternalParse;
        object = msg->mutable_instrumentmeasurementbinding();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .claros.common.computation.ComputationBinding computationBinding = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::computation::ComputationBinding::_InternalParse;
        object = msg->mutable_computationbinding();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::common::core::ReportableQualifierDefinition::_InternalParse;
          object = msg->add_reportablequaliferdefinition();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 98 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Column::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.operations.spreadsheet.Column)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 columnNumber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &columnnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.operations.spreadsheet.Column.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.operations.spreadsheet.Column.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parameterId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parameterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 displayUnitId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &displayunitid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locationId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locationid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locationid().data(), static_cast<int>(this->locationid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.operations.spreadsheet.Column.locationId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isActive = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.core.Limit limits = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.core.DataSourceType dataSourceType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_datasourcetype(static_cast< ::claros::common::core::DataSourceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.instrument.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instrumentmeasurementbinding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.computation.ComputationBinding computationBinding = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_computationbinding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_reportablequaliferdefinition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.operations.spreadsheet.Column)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.operations.spreadsheet.Column)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Column::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.operations.spreadsheet.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 columnNumber = 1;
  if (this->columnnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->columnnumber(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.operations.spreadsheet.Column.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.operations.spreadsheet.Column.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // uint32 parameterId = 4;
  if (this->parameterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->parameterid(), output);
  }

  // uint32 displayUnitId = 5;
  if (this->displayunitid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->displayunitid(), output);
  }

  // string locationId = 6;
  if (this->locationid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.operations.spreadsheet.Column.locationId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->locationid(), output);
  }

  // bool isActive = 7;
  if (this->isactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isactive(), output);
  }

  // repeated .claros.common.core.Limit limits = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limits_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->limits(static_cast<int>(i)),
      output);
  }

  // .claros.common.core.DataSourceType dataSourceType = 9;
  if (this->datasourcetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->datasourcetype(), output);
  }

  // .claros.instrument.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;
  if (has_instrumentmeasurementbinding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::instrumentmeasurementbinding(this), output);
  }

  // .claros.common.computation.ComputationBinding computationBinding = 11;
  if (has_computationbinding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::computationbinding(this), output);
  }

  // repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reportablequaliferdefinition_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->reportablequaliferdefinition(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.operations.spreadsheet.Column)
}

::google::protobuf::uint8* Column::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.operations.spreadsheet.Column)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 columnNumber = 1;
  if (this->columnnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->columnnumber(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.operations.spreadsheet.Column.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.operations.spreadsheet.Column.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // uint32 parameterId = 4;
  if (this->parameterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->parameterid(), target);
  }

  // uint32 displayUnitId = 5;
  if (this->displayunitid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->displayunitid(), target);
  }

  // string locationId = 6;
  if (this->locationid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locationid().data(), static_cast<int>(this->locationid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.operations.spreadsheet.Column.locationId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->locationid(), target);
  }

  // bool isActive = 7;
  if (this->isactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isactive(), target);
  }

  // repeated .claros.common.core.Limit limits = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->limits_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->limits(static_cast<int>(i)), target);
  }

  // .claros.common.core.DataSourceType dataSourceType = 9;
  if (this->datasourcetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->datasourcetype(), target);
  }

  // .claros.instrument.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;
  if (has_instrumentmeasurementbinding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::instrumentmeasurementbinding(this), target);
  }

  // .claros.common.computation.ComputationBinding computationBinding = 11;
  if (has_computationbinding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::computationbinding(this), target);
  }

  // repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reportablequaliferdefinition_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->reportablequaliferdefinition(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.operations.spreadsheet.Column)
  return target;
}

size_t Column::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.operations.spreadsheet.Column)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .claros.common.core.Limit limits = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->limits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->limits(static_cast<int>(i)));
    }
  }

  // repeated .claros.common.core.ReportableQualifierDefinition reportableQualiferDefinition = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->reportablequaliferdefinition_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reportablequaliferdefinition(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string locationId = 6;
  if (this->locationid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locationid());
  }

  // uint32 columnNumber = 1;
  if (this->columnnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->columnnumber());
  }

  // uint32 parameterId = 4;
  if (this->parameterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parameterid());
  }

  // uint32 displayUnitId = 5;
  if (this->displayunitid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->displayunitid());
  }

  // bool isActive = 7;
  if (this->isactive() != 0) {
    total_size += 1 + 1;
  }

  // .claros.common.core.DataSourceType dataSourceType = 9;
  if (this->datasourcetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->datasourcetype());
  }

  switch (binding_case()) {
    // .claros.instrument.InstrumentMeasurementBinding instrumentMeasurementBinding = 10;
    case kInstrumentMeasurementBinding: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *binding_.instrumentmeasurementbinding_);
      break;
    }
    // .claros.common.computation.ComputationBinding computationBinding = 11;
    case kComputationBinding: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *binding_.computationbinding_);
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Column::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.operations.spreadsheet.Column)
  GOOGLE_DCHECK_NE(&from, this);
  const Column* source =
      ::google::protobuf::DynamicCastToGenerated<Column>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.operations.spreadsheet.Column)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.operations.spreadsheet.Column)
    MergeFrom(*source);
  }
}

void Column::MergeFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.operations.spreadsheet.Column)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  limits_.MergeFrom(from.limits_);
  reportablequaliferdefinition_.MergeFrom(from.reportablequaliferdefinition_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.locationid().size() > 0) {

    locationid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locationid_);
  }
  if (from.columnnumber() != 0) {
    set_columnnumber(from.columnnumber());
  }
  if (from.parameterid() != 0) {
    set_parameterid(from.parameterid());
  }
  if (from.displayunitid() != 0) {
    set_displayunitid(from.displayunitid());
  }
  if (from.isactive() != 0) {
    set_isactive(from.isactive());
  }
  if (from.datasourcetype() != 0) {
    set_datasourcetype(from.datasourcetype());
  }
  switch (from.binding_case()) {
    case kInstrumentMeasurementBinding: {
      mutable_instrumentmeasurementbinding()->::claros::instrument::InstrumentMeasurementBinding::MergeFrom(from.instrumentmeasurementbinding());
      break;
    }
    case kComputationBinding: {
      mutable_computationbinding()->::claros::common::computation::ComputationBinding::MergeFrom(from.computationbinding());
      break;
    }
    case BINDING_NOT_SET: {
      break;
    }
  }
}

void Column::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.operations.spreadsheet.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Column::CopyFrom(const Column& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.operations.spreadsheet.Column)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Column::IsInitialized() const {
  return true;
}

void Column::Swap(Column* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Column::InternalSwap(Column* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&limits_)->InternalSwap(CastToBase(&other->limits_));
  CastToBase(&reportablequaliferdefinition_)->InternalSwap(CastToBase(&other->reportablequaliferdefinition_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  locationid_.Swap(&other->locationid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(columnnumber_, other->columnnumber_);
  swap(parameterid_, other->parameterid_);
  swap(displayunitid_, other->displayunitid_);
  swap(isactive_, other->isactive_);
  swap(datasourcetype_, other->datasourcetype_);
  swap(binding_, other->binding_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Column::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto);
  return ::file_level_metadata_claros_5foperations_5fspreadsheet_5fworksheet_5fcolumn_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace spreadsheet
}  // namespace operations
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::operations::spreadsheet::Column* Arena::CreateMaybeMessage< ::claros::operations::spreadsheet::Column >(Arena* arena) {
  return Arena::CreateInternal< ::claros::operations::spreadsheet::Column >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
