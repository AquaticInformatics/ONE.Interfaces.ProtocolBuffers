// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_core_mobiledatetime.proto

#include "claros_common_core_mobiledatetime.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fmobiledate_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MobileDate_claros_5fcommon_5fcore_5fmobiledate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fmobiletime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MobileTime_claros_5fcommon_5fcore_5fmobiletime_2eproto;
namespace claros {
namespace common {
namespace core {
class MobileDateTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MobileDateTime> _instance;
} _MobileDateTime_default_instance_;
}  // namespace core
}  // namespace common
}  // namespace claros
static void InitDefaultsMobileDateTime_claros_5fcommon_5fcore_5fmobiledatetime_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::common::core::_MobileDateTime_default_instance_;
    new (ptr) ::claros::common::core::MobileDateTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::common::core::MobileDateTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MobileDateTime_claros_5fcommon_5fcore_5fmobiledatetime_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMobileDateTime_claros_5fcommon_5fcore_5fmobiledatetime_2eproto}, {
      &scc_info_MobileDate_claros_5fcommon_5fcore_5fmobiledate_2eproto.base,
      &scc_info_MobileTime_claros_5fcommon_5fcore_5fmobiletime_2eproto.base,}};

void InitDefaults_claros_5fcommon_5fcore_5fmobiledatetime_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MobileDateTime_claros_5fcommon_5fcore_5fmobiledatetime_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5fcommon_5fcore_5fmobiledatetime_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5fcommon_5fcore_5fmobiledatetime_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5fcommon_5fcore_5fmobiledatetime_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5fcommon_5fcore_5fmobiledatetime_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::common::core::MobileDateTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::common::core::MobileDateTime, mobiledate_),
  PROTOBUF_FIELD_OFFSET(::claros::common::core::MobileDateTime, mobiletime_),
  PROTOBUF_FIELD_OFFSET(::claros::common::core::MobileDateTime, timezone_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::common::core::MobileDateTime)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::common::core::_MobileDateTime_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5fcommon_5fcore_5fmobiledatetime_2eproto = {
  {}, AddDescriptors_claros_5fcommon_5fcore_5fmobiledatetime_2eproto, "claros_common_core_mobiledatetime.proto", schemas,
  file_default_instances, TableStruct_claros_5fcommon_5fcore_5fmobiledatetime_2eproto::offsets,
  file_level_metadata_claros_5fcommon_5fcore_5fmobiledatetime_2eproto, 1, file_level_enum_descriptors_claros_5fcommon_5fcore_5fmobiledatetime_2eproto, file_level_service_descriptors_claros_5fcommon_5fcore_5fmobiledatetime_2eproto,
};

const char descriptor_table_protodef_claros_5fcommon_5fcore_5fmobiledatetime_2eproto[] =
  "\n\'claros_common_core_mobiledatetime.prot"
  "o\022\022claros.common.core\032#claros_common_cor"
  "e_mobiletime.proto\032#claros_common_core_m"
  "obiledate.proto\"\212\001\n\016MobileDateTime\0222\n\nmo"
  "bileDate\030\001 \001(\0132\036.claros.common.core.Mobi"
  "leDate\0222\n\nmobileTime\030\002 \001(\0132\036.claros.comm"
  "on.core.MobileTime\022\020\n\010timeZone\030\003 \001(\005b\006pr"
  "oto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5fcommon_5fcore_5fmobiledatetime_2eproto = {
  false, InitDefaults_claros_5fcommon_5fcore_5fmobiledatetime_2eproto, 
  descriptor_table_protodef_claros_5fcommon_5fcore_5fmobiledatetime_2eproto,
  "claros_common_core_mobiledatetime.proto", &assign_descriptors_table_claros_5fcommon_5fcore_5fmobiledatetime_2eproto, 284,
};

void AddDescriptors_claros_5fcommon_5fcore_5fmobiledatetime_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_claros_5fcommon_5fcore_5fmobiletime_2eproto,
    ::AddDescriptors_claros_5fcommon_5fcore_5fmobiledate_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5fcommon_5fcore_5fmobiledatetime_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5fcommon_5fcore_5fmobiledatetime_2eproto = []() { AddDescriptors_claros_5fcommon_5fcore_5fmobiledatetime_2eproto(); return true; }();
namespace claros {
namespace common {
namespace core {

// ===================================================================

void MobileDateTime::InitAsDefaultInstance() {
  ::claros::common::core::_MobileDateTime_default_instance_._instance.get_mutable()->mobiledate_ = const_cast< ::claros::common::core::MobileDate*>(
      ::claros::common::core::MobileDate::internal_default_instance());
  ::claros::common::core::_MobileDateTime_default_instance_._instance.get_mutable()->mobiletime_ = const_cast< ::claros::common::core::MobileTime*>(
      ::claros::common::core::MobileTime::internal_default_instance());
}
class MobileDateTime::HasBitSetters {
 public:
  static const ::claros::common::core::MobileDate& mobiledate(const MobileDateTime* msg);
  static const ::claros::common::core::MobileTime& mobiletime(const MobileDateTime* msg);
};

const ::claros::common::core::MobileDate&
MobileDateTime::HasBitSetters::mobiledate(const MobileDateTime* msg) {
  return *msg->mobiledate_;
}
const ::claros::common::core::MobileTime&
MobileDateTime::HasBitSetters::mobiletime(const MobileDateTime* msg) {
  return *msg->mobiletime_;
}
void MobileDateTime::clear_mobiledate() {
  if (GetArenaNoVirtual() == nullptr && mobiledate_ != nullptr) {
    delete mobiledate_;
  }
  mobiledate_ = nullptr;
}
void MobileDateTime::clear_mobiletime() {
  if (GetArenaNoVirtual() == nullptr && mobiletime_ != nullptr) {
    delete mobiletime_;
  }
  mobiletime_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobileDateTime::kMobileDateFieldNumber;
const int MobileDateTime::kMobileTimeFieldNumber;
const int MobileDateTime::kTimeZoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobileDateTime::MobileDateTime()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.common.core.MobileDateTime)
}
MobileDateTime::MobileDateTime(const MobileDateTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mobiledate()) {
    mobiledate_ = new ::claros::common::core::MobileDate(*from.mobiledate_);
  } else {
    mobiledate_ = nullptr;
  }
  if (from.has_mobiletime()) {
    mobiletime_ = new ::claros::common::core::MobileTime(*from.mobiletime_);
  } else {
    mobiletime_ = nullptr;
  }
  timezone_ = from.timezone_;
  // @@protoc_insertion_point(copy_constructor:claros.common.core.MobileDateTime)
}

void MobileDateTime::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MobileDateTime_claros_5fcommon_5fcore_5fmobiledatetime_2eproto.base);
  ::memset(&mobiledate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timezone_) -
      reinterpret_cast<char*>(&mobiledate_)) + sizeof(timezone_));
}

MobileDateTime::~MobileDateTime() {
  // @@protoc_insertion_point(destructor:claros.common.core.MobileDateTime)
  SharedDtor();
}

void MobileDateTime::SharedDtor() {
  if (this != internal_default_instance()) delete mobiledate_;
  if (this != internal_default_instance()) delete mobiletime_;
}

void MobileDateTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MobileDateTime& MobileDateTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MobileDateTime_claros_5fcommon_5fcore_5fmobiledatetime_2eproto.base);
  return *internal_default_instance();
}


void MobileDateTime::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.common.core.MobileDateTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && mobiledate_ != nullptr) {
    delete mobiledate_;
  }
  mobiledate_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && mobiletime_ != nullptr) {
    delete mobiletime_;
  }
  mobiletime_ = nullptr;
  timezone_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MobileDateTime::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MobileDateTime*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .claros.common.core.MobileDate mobileDate = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::core::MobileDate::_InternalParse;
        object = msg->mutable_mobiledate();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .claros.common.core.MobileTime mobileTime = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::core::MobileTime::_InternalParse;
        object = msg->mutable_mobiletime();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 timeZone = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_timezone(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MobileDateTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.common.core.MobileDateTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .claros.common.core.MobileDate mobileDate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mobiledate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.core.MobileTime mobileTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mobiletime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeZone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timezone_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.common.core.MobileDateTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.common.core.MobileDateTime)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MobileDateTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.common.core.MobileDateTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .claros.common.core.MobileDate mobileDate = 1;
  if (this->has_mobiledate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::mobiledate(this), output);
  }

  // .claros.common.core.MobileTime mobileTime = 2;
  if (this->has_mobiletime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::mobiletime(this), output);
  }

  // int32 timeZone = 3;
  if (this->timezone() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timezone(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.common.core.MobileDateTime)
}

::google::protobuf::uint8* MobileDateTime::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.common.core.MobileDateTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .claros.common.core.MobileDate mobileDate = 1;
  if (this->has_mobiledate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::mobiledate(this), target);
  }

  // .claros.common.core.MobileTime mobileTime = 2;
  if (this->has_mobiletime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::mobiletime(this), target);
  }

  // int32 timeZone = 3;
  if (this->timezone() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timezone(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.common.core.MobileDateTime)
  return target;
}

size_t MobileDateTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.common.core.MobileDateTime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .claros.common.core.MobileDate mobileDate = 1;
  if (this->has_mobiledate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mobiledate_);
  }

  // .claros.common.core.MobileTime mobileTime = 2;
  if (this->has_mobiletime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mobiletime_);
  }

  // int32 timeZone = 3;
  if (this->timezone() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timezone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MobileDateTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.common.core.MobileDateTime)
  GOOGLE_DCHECK_NE(&from, this);
  const MobileDateTime* source =
      ::google::protobuf::DynamicCastToGenerated<MobileDateTime>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.common.core.MobileDateTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.common.core.MobileDateTime)
    MergeFrom(*source);
  }
}

void MobileDateTime::MergeFrom(const MobileDateTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.common.core.MobileDateTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mobiledate()) {
    mutable_mobiledate()->::claros::common::core::MobileDate::MergeFrom(from.mobiledate());
  }
  if (from.has_mobiletime()) {
    mutable_mobiletime()->::claros::common::core::MobileTime::MergeFrom(from.mobiletime());
  }
  if (from.timezone() != 0) {
    set_timezone(from.timezone());
  }
}

void MobileDateTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.common.core.MobileDateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileDateTime::CopyFrom(const MobileDateTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.common.core.MobileDateTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileDateTime::IsInitialized() const {
  return true;
}

void MobileDateTime::Swap(MobileDateTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobileDateTime::InternalSwap(MobileDateTime* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mobiledate_, other->mobiledate_);
  swap(mobiletime_, other->mobiletime_);
  swap(timezone_, other->timezone_);
}

::google::protobuf::Metadata MobileDateTime::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fcore_5fmobiledatetime_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fcore_5fmobiledatetime_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::common::core::MobileDateTime* Arena::CreateMaybeMessage< ::claros::common::core::MobileDateTime >(Arena* arena) {
  return Arena::CreateInternal< ::claros::common::core::MobileDateTime >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
