// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_computation_expressionline.proto

#ifndef PROTOBUF_INCLUDED_claros_5fcommon_5fcomputation_5fexpressionline_2eproto
#define PROTOBUF_INCLUDED_claros_5fcommon_5fcomputation_5fexpressionline_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcomputation_5fexpressionline_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5fcommon_5fcomputation_5fexpressionline_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5fcommon_5fcomputation_5fexpressionline_2eproto();
namespace claros {
namespace common {
namespace computation {
class ExpressionLine;
class ExpressionLineDefaultTypeInternal;
extern ExpressionLineDefaultTypeInternal _ExpressionLine_default_instance_;
}  // namespace computation
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::common::computation::ExpressionLine* Arena::CreateMaybeMessage<::claros::common::computation::ExpressionLine>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace common {
namespace computation {

// ===================================================================

class ExpressionLine :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.common.computation.ExpressionLine) */ {
 public:
  ExpressionLine();
  virtual ~ExpressionLine();

  ExpressionLine(const ExpressionLine& from);

  inline ExpressionLine& operator=(const ExpressionLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExpressionLine(ExpressionLine&& from) noexcept
    : ExpressionLine() {
    *this = ::std::move(from);
  }

  inline ExpressionLine& operator=(ExpressionLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ExpressionLine& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpressionLine* internal_default_instance() {
    return reinterpret_cast<const ExpressionLine*>(
               &_ExpressionLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ExpressionLine* other);
  friend void swap(ExpressionLine& a, ExpressionLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExpressionLine* New() const final {
    return CreateMaybeMessage<ExpressionLine>(nullptr);
  }

  ExpressionLine* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExpressionLine>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExpressionLine& from);
  void MergeFrom(const ExpressionLine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpressionLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string i18nKey = 1;
  void clear_i18nkey();
  static const int kI18NKeyFieldNumber = 1;
  const ::std::string& i18nkey() const;
  void set_i18nkey(const ::std::string& value);
  #if LANG_CXX11
  void set_i18nkey(::std::string&& value);
  #endif
  void set_i18nkey(const char* value);
  void set_i18nkey(const char* value, size_t size);
  ::std::string* mutable_i18nkey();
  ::std::string* release_i18nkey();
  void set_allocated_i18nkey(::std::string* i18nkey);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string expression = 3;
  void clear_expression();
  static const int kExpressionFieldNumber = 3;
  const ::std::string& expression() const;
  void set_expression(const ::std::string& value);
  #if LANG_CXX11
  void set_expression(::std::string&& value);
  #endif
  void set_expression(const char* value);
  void set_expression(const char* value, size_t size);
  ::std::string* mutable_expression();
  ::std::string* release_expression();
  void set_allocated_expression(::std::string* expression);

  // string description = 4;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:claros.common.computation.ExpressionLine)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr i18nkey_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr expression_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5fcommon_5fcomputation_5fexpressionline_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ExpressionLine

// string i18nKey = 1;
inline void ExpressionLine::clear_i18nkey() {
  i18nkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpressionLine::i18nkey() const {
  // @@protoc_insertion_point(field_get:claros.common.computation.ExpressionLine.i18nKey)
  return i18nkey_.GetNoArena();
}
inline void ExpressionLine::set_i18nkey(const ::std::string& value) {
  
  i18nkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.computation.ExpressionLine.i18nKey)
}
#if LANG_CXX11
inline void ExpressionLine::set_i18nkey(::std::string&& value) {
  
  i18nkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.computation.ExpressionLine.i18nKey)
}
#endif
inline void ExpressionLine::set_i18nkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  i18nkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.computation.ExpressionLine.i18nKey)
}
inline void ExpressionLine::set_i18nkey(const char* value, size_t size) {
  
  i18nkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.computation.ExpressionLine.i18nKey)
}
inline ::std::string* ExpressionLine::mutable_i18nkey() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.computation.ExpressionLine.i18nKey)
  return i18nkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpressionLine::release_i18nkey() {
  // @@protoc_insertion_point(field_release:claros.common.computation.ExpressionLine.i18nKey)
  
  return i18nkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpressionLine::set_allocated_i18nkey(::std::string* i18nkey) {
  if (i18nkey != nullptr) {
    
  } else {
    
  }
  i18nkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), i18nkey);
  // @@protoc_insertion_point(field_set_allocated:claros.common.computation.ExpressionLine.i18nKey)
}

// string name = 2;
inline void ExpressionLine::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpressionLine::name() const {
  // @@protoc_insertion_point(field_get:claros.common.computation.ExpressionLine.name)
  return name_.GetNoArena();
}
inline void ExpressionLine::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.computation.ExpressionLine.name)
}
#if LANG_CXX11
inline void ExpressionLine::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.computation.ExpressionLine.name)
}
#endif
inline void ExpressionLine::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.computation.ExpressionLine.name)
}
inline void ExpressionLine::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.computation.ExpressionLine.name)
}
inline ::std::string* ExpressionLine::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.computation.ExpressionLine.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpressionLine::release_name() {
  // @@protoc_insertion_point(field_release:claros.common.computation.ExpressionLine.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpressionLine::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:claros.common.computation.ExpressionLine.name)
}

// string expression = 3;
inline void ExpressionLine::clear_expression() {
  expression_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpressionLine::expression() const {
  // @@protoc_insertion_point(field_get:claros.common.computation.ExpressionLine.expression)
  return expression_.GetNoArena();
}
inline void ExpressionLine::set_expression(const ::std::string& value) {
  
  expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.computation.ExpressionLine.expression)
}
#if LANG_CXX11
inline void ExpressionLine::set_expression(::std::string&& value) {
  
  expression_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.computation.ExpressionLine.expression)
}
#endif
inline void ExpressionLine::set_expression(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.computation.ExpressionLine.expression)
}
inline void ExpressionLine::set_expression(const char* value, size_t size) {
  
  expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.computation.ExpressionLine.expression)
}
inline ::std::string* ExpressionLine::mutable_expression() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.computation.ExpressionLine.expression)
  return expression_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpressionLine::release_expression() {
  // @@protoc_insertion_point(field_release:claros.common.computation.ExpressionLine.expression)
  
  return expression_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpressionLine::set_allocated_expression(::std::string* expression) {
  if (expression != nullptr) {
    
  } else {
    
  }
  expression_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expression);
  // @@protoc_insertion_point(field_set_allocated:claros.common.computation.ExpressionLine.expression)
}

// string description = 4;
inline void ExpressionLine::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpressionLine::description() const {
  // @@protoc_insertion_point(field_get:claros.common.computation.ExpressionLine.description)
  return description_.GetNoArena();
}
inline void ExpressionLine::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.common.computation.ExpressionLine.description)
}
#if LANG_CXX11
inline void ExpressionLine::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.common.computation.ExpressionLine.description)
}
#endif
inline void ExpressionLine::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.common.computation.ExpressionLine.description)
}
inline void ExpressionLine::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.common.computation.ExpressionLine.description)
}
inline ::std::string* ExpressionLine::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:claros.common.computation.ExpressionLine.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpressionLine::release_description() {
  // @@protoc_insertion_point(field_release:claros.common.computation.ExpressionLine.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpressionLine::set_allocated_description(::std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:claros.common.computation.ExpressionLine.description)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace computation
}  // namespace common
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5fcommon_5fcomputation_5fexpressionline_2eproto
