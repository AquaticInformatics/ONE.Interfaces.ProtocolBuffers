// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_form_formfield.proto

#include "claros_common_form_formfield.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5finstrument_5fdata_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_InstrumentData_claros_5finstrument_5fdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5foperations_5fspreadsheet_5fworksheet_5fcell_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Cell_claros_5foperations_5fspreadsheet_5fworksheet_5fcell_2eproto;
namespace claros {
namespace common {
namespace form {
class FormFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FormField> _instance;
  const ::claros::operations::spreadsheet::Cell* cell_;
} _FormField_default_instance_;
}  // namespace form
}  // namespace common
}  // namespace claros
static void InitDefaultsFormField_claros_5fcommon_5fform_5fformfield_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::common::form::_FormField_default_instance_;
    new (ptr) ::claros::common::form::FormField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::common::form::FormField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FormField_claros_5fcommon_5fform_5fformfield_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFormField_claros_5fcommon_5fform_5fformfield_2eproto}, {
      &scc_info_Cell_claros_5foperations_5fspreadsheet_5fworksheet_5fcell_2eproto.base,
      &scc_info_InstrumentData_claros_5finstrument_5fdata_2eproto.base,}};

void InitDefaults_claros_5fcommon_5fform_5fformfield_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_FormField_claros_5fcommon_5fform_5fformfield_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5fcommon_5fform_5fformfield_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5fcommon_5fform_5fformfield_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5fcommon_5fform_5fformfield_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5fcommon_5fform_5fformfield_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, guid_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, formfielddefinitionid_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, formdataentrytype_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, isdataentrytypelocked_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, name_),
  offsetof(::claros::common::form::FormFieldDefaultTypeInternal, cell_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, instrumentdata_),
  PROTOBUF_FIELD_OFFSET(::claros::common::form::FormField, FormFieldData_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::common::form::FormField)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::common::form::_FormField_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5fcommon_5fform_5fformfield_2eproto = {
  {}, AddDescriptors_claros_5fcommon_5fform_5fformfield_2eproto, "claros_common_form_formfield.proto", schemas,
  file_default_instances, TableStruct_claros_5fcommon_5fform_5fformfield_2eproto::offsets,
  file_level_metadata_claros_5fcommon_5fform_5fformfield_2eproto, 1, file_level_enum_descriptors_claros_5fcommon_5fform_5fformfield_2eproto, file_level_service_descriptors_claros_5fcommon_5fform_5fformfield_2eproto,
};

const char descriptor_table_protodef_claros_5fcommon_5fform_5fformfield_2eproto[] =
  "\n\"claros_common_form_formfield.proto\022\022cl"
  "aros.common.form\032+claros_common_form_for"
  "mdataentry_type.proto\0322claros_operations"
  "_spreadsheet_worksheet_cell.proto\032\034claro"
  "s_instrument_data.proto\"\250\002\n\tFormField\022\014\n"
  "\004guid\030\001 \001(\t\022\035\n\025formFieldDefinitionId\030\002 \001"
  "(\t\022@\n\021formDataEntryType\030\003 \001(\0162%.claros.c"
  "ommon.form.FormDataEntryType\022\035\n\025isDataEn"
  "tryTypeLocked\030\004 \001(\010\022\014\n\004name\030\005 \001(\t\0223\n\004cel"
  "l\030\006 \001(\0132#.claros.operations.spreadsheet."
  "CellH\000\0229\n\016instrumentData\030\007 \003(\0132!.claros."
  "instrument.InstrumentDataB\017\n\rFormFieldDa"
  "tab\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5fcommon_5fform_5fformfield_2eproto = {
  false, InitDefaults_claros_5fcommon_5fform_5fformfield_2eproto, 
  descriptor_table_protodef_claros_5fcommon_5fform_5fformfield_2eproto,
  "claros_common_form_formfield.proto", &assign_descriptors_table_claros_5fcommon_5fform_5fformfield_2eproto, 490,
};

void AddDescriptors_claros_5fcommon_5fform_5fformfield_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[3] =
  {
    ::AddDescriptors_claros_5fcommon_5fform_5fformdataentry_5ftype_2eproto,
    ::AddDescriptors_claros_5foperations_5fspreadsheet_5fworksheet_5fcell_2eproto,
    ::AddDescriptors_claros_5finstrument_5fdata_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5fcommon_5fform_5fformfield_2eproto, deps, 3);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5fcommon_5fform_5fformfield_2eproto = []() { AddDescriptors_claros_5fcommon_5fform_5fformfield_2eproto(); return true; }();
namespace claros {
namespace common {
namespace form {

// ===================================================================

void FormField::InitAsDefaultInstance() {
  ::claros::common::form::_FormField_default_instance_.cell_ = const_cast< ::claros::operations::spreadsheet::Cell*>(
      ::claros::operations::spreadsheet::Cell::internal_default_instance());
}
class FormField::HasBitSetters {
 public:
  static const ::claros::operations::spreadsheet::Cell& cell(const FormField* msg);
};

const ::claros::operations::spreadsheet::Cell&
FormField::HasBitSetters::cell(const FormField* msg) {
  return *msg->FormFieldData_.cell_;
}
void FormField::set_allocated_cell(::claros::operations::spreadsheet::Cell* cell) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_FormFieldData();
  if (cell) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cell = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cell, submessage_arena);
    }
    set_has_cell();
    FormFieldData_.cell_ = cell;
  }
  // @@protoc_insertion_point(field_set_allocated:claros.common.form.FormField.cell)
}
void FormField::clear_cell() {
  if (has_cell()) {
    delete FormFieldData_.cell_;
    clear_has_FormFieldData();
  }
}
void FormField::clear_instrumentdata() {
  instrumentdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FormField::kGuidFieldNumber;
const int FormField::kFormFieldDefinitionIdFieldNumber;
const int FormField::kFormDataEntryTypeFieldNumber;
const int FormField::kIsDataEntryTypeLockedFieldNumber;
const int FormField::kNameFieldNumber;
const int FormField::kCellFieldNumber;
const int FormField::kInstrumentDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FormField::FormField()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.common.form.FormField)
}
FormField::FormField(const FormField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      instrumentdata_(from.instrumentdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.guid().size() > 0) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  formfielddefinitionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.formfielddefinitionid().size() > 0) {
    formfielddefinitionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formfielddefinitionid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&formdataentrytype_, &from.formdataentrytype_,
    static_cast<size_t>(reinterpret_cast<char*>(&isdataentrytypelocked_) -
    reinterpret_cast<char*>(&formdataentrytype_)) + sizeof(isdataentrytypelocked_));
  clear_has_FormFieldData();
  switch (from.FormFieldData_case()) {
    case kCell: {
      mutable_cell()->::claros::operations::spreadsheet::Cell::MergeFrom(from.cell());
      break;
    }
    case FORMFIELDDATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:claros.common.form.FormField)
}

void FormField::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_FormField_claros_5fcommon_5fform_5fformfield_2eproto.base);
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  formfielddefinitionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&formdataentrytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isdataentrytypelocked_) -
      reinterpret_cast<char*>(&formdataentrytype_)) + sizeof(isdataentrytypelocked_));
  clear_has_FormFieldData();
}

FormField::~FormField() {
  // @@protoc_insertion_point(destructor:claros.common.form.FormField)
  SharedDtor();
}

void FormField::SharedDtor() {
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  formfielddefinitionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_FormFieldData()) {
    clear_FormFieldData();
  }
}

void FormField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FormField& FormField::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_FormField_claros_5fcommon_5fform_5fformfield_2eproto.base);
  return *internal_default_instance();
}


void FormField::clear_FormFieldData() {
// @@protoc_insertion_point(one_of_clear_start:claros.common.form.FormField)
  switch (FormFieldData_case()) {
    case kCell: {
      delete FormFieldData_.cell_;
      break;
    }
    case FORMFIELDDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FORMFIELDDATA_NOT_SET;
}


void FormField::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.common.form.FormField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  instrumentdata_.Clear();
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  formfielddefinitionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&formdataentrytype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isdataentrytypelocked_) -
      reinterpret_cast<char*>(&formdataentrytype_)) + sizeof(isdataentrytypelocked_));
  clear_FormFieldData();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FormField::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<FormField*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string guid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.form.FormField.guid");
        object = msg->mutable_guid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string formFieldDefinitionId = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.form.FormField.formFieldDefinitionId");
        object = msg->mutable_formfielddefinitionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .claros.common.form.FormDataEntryType formDataEntryType = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_formdataentrytype(static_cast<::claros::common::form::FormDataEntryType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool isDataEntryTypeLocked = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_isdataentrytypelocked(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.common.form.FormField.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .claros.operations.spreadsheet.Cell cell = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::operations::spreadsheet::Cell::_InternalParse;
        object = msg->mutable_cell();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .claros.instrument.InstrumentData instrumentData = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::claros::instrument::InstrumentData::_InternalParse;
          object = msg->add_instrumentdata();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FormField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.common.form.FormField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->guid().data(), static_cast<int>(this->guid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.form.FormField.guid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string formFieldDefinitionId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formfielddefinitionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->formfielddefinitionid().data(), static_cast<int>(this->formfielddefinitionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.form.FormField.formFieldDefinitionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.form.FormDataEntryType formDataEntryType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_formdataentrytype(static_cast< ::claros::common::form::FormDataEntryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isDataEntryTypeLocked = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdataentrytypelocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.common.form.FormField.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.operations.spreadsheet.Cell cell = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cell()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .claros.instrument.InstrumentData instrumentData = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_instrumentdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.common.form.FormField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.common.form.FormField)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FormField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.common.form.FormField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string guid = 1;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), static_cast<int>(this->guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.FormField.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->guid(), output);
  }

  // string formFieldDefinitionId = 2;
  if (this->formfielddefinitionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formfielddefinitionid().data(), static_cast<int>(this->formfielddefinitionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.FormField.formFieldDefinitionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->formfielddefinitionid(), output);
  }

  // .claros.common.form.FormDataEntryType formDataEntryType = 3;
  if (this->formdataentrytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->formdataentrytype(), output);
  }

  // bool isDataEntryTypeLocked = 4;
  if (this->isdataentrytypelocked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isdataentrytypelocked(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.FormField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // .claros.operations.spreadsheet.Cell cell = 6;
  if (has_cell()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::cell(this), output);
  }

  // repeated .claros.instrument.InstrumentData instrumentData = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instrumentdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->instrumentdata(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.common.form.FormField)
}

::google::protobuf::uint8* FormField::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.common.form.FormField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string guid = 1;
  if (this->guid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->guid().data(), static_cast<int>(this->guid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.FormField.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->guid(), target);
  }

  // string formFieldDefinitionId = 2;
  if (this->formfielddefinitionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->formfielddefinitionid().data(), static_cast<int>(this->formfielddefinitionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.FormField.formFieldDefinitionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->formfielddefinitionid(), target);
  }

  // .claros.common.form.FormDataEntryType formDataEntryType = 3;
  if (this->formdataentrytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->formdataentrytype(), target);
  }

  // bool isDataEntryTypeLocked = 4;
  if (this->isdataentrytypelocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isdataentrytypelocked(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.common.form.FormField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // .claros.operations.spreadsheet.Cell cell = 6;
  if (has_cell()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::cell(this), target);
  }

  // repeated .claros.instrument.InstrumentData instrumentData = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instrumentdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->instrumentdata(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.common.form.FormField)
  return target;
}

size_t FormField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.common.form.FormField)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .claros.instrument.InstrumentData instrumentData = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->instrumentdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->instrumentdata(static_cast<int>(i)));
    }
  }

  // string guid = 1;
  if (this->guid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  // string formFieldDefinitionId = 2;
  if (this->formfielddefinitionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->formfielddefinitionid());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .claros.common.form.FormDataEntryType formDataEntryType = 3;
  if (this->formdataentrytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->formdataentrytype());
  }

  // bool isDataEntryTypeLocked = 4;
  if (this->isdataentrytypelocked() != 0) {
    total_size += 1 + 1;
  }

  switch (FormFieldData_case()) {
    // .claros.operations.spreadsheet.Cell cell = 6;
    case kCell: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *FormFieldData_.cell_);
      break;
    }
    case FORMFIELDDATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FormField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.common.form.FormField)
  GOOGLE_DCHECK_NE(&from, this);
  const FormField* source =
      ::google::protobuf::DynamicCastToGenerated<FormField>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.common.form.FormField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.common.form.FormField)
    MergeFrom(*source);
  }
}

void FormField::MergeFrom(const FormField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.common.form.FormField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  instrumentdata_.MergeFrom(from.instrumentdata_);
  if (from.guid().size() > 0) {

    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  if (from.formfielddefinitionid().size() > 0) {

    formfielddefinitionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formfielddefinitionid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.formdataentrytype() != 0) {
    set_formdataentrytype(from.formdataentrytype());
  }
  if (from.isdataentrytypelocked() != 0) {
    set_isdataentrytypelocked(from.isdataentrytypelocked());
  }
  switch (from.FormFieldData_case()) {
    case kCell: {
      mutable_cell()->::claros::operations::spreadsheet::Cell::MergeFrom(from.cell());
      break;
    }
    case FORMFIELDDATA_NOT_SET: {
      break;
    }
  }
}

void FormField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.common.form.FormField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormField::CopyFrom(const FormField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.common.form.FormField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormField::IsInitialized() const {
  return true;
}

void FormField::Swap(FormField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FormField::InternalSwap(FormField* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&instrumentdata_)->InternalSwap(CastToBase(&other->instrumentdata_));
  guid_.Swap(&other->guid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  formfielddefinitionid_.Swap(&other->formfielddefinitionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(formdataentrytype_, other->formdataentrytype_);
  swap(isdataentrytypelocked_, other->isdataentrytypelocked_);
  swap(FormFieldData_, other->FormFieldData_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata FormField::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fform_5fformfield_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fform_5fformfield_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace form
}  // namespace common
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::common::form::FormField* Arena::CreateMaybeMessage< ::claros::common::form::FormField >(Arena* arena) {
  return Arena::CreateInternal< ::claros::common::form::FormField >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
