// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_common_sample.proto

#include "claros_common_sample.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fsample_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_sample_SampleMapEntry_DoNotUse_claros_5fcommon_5fsample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fsample_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_sample_customMessage_claros_5fcommon_5fsample_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fsample_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_sample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto;
class sample_SampleMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<sample_SampleMapEntry_DoNotUse> _instance;
} _sample_SampleMapEntry_DoNotUse_default_instance_;
class sample_customMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<sample_customMessage> _instance;
} _sample_customMessage_default_instance_;
class sample_RepeatableOneOfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<sample_RepeatableOneOf> _instance;
  ::google::protobuf::internal::ArenaStringPtr repeatableoneofstring_;
  ::google::protobuf::uint32 repeatableoneofuint32_;
  const ::sample_customMessage* repeatablecustommessage_;
} _sample_RepeatableOneOf_default_instance_;
class sampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<sample> _instance;
  ::google::protobuf::internal::ArenaStringPtr samplestring_;
  ::google::protobuf::uint32 sampleuint32_;
} _sample_default_instance_;
static void InitDefaultssample_SampleMapEntry_DoNotUse_claros_5fcommon_5fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_sample_SampleMapEntry_DoNotUse_default_instance_;
    new (ptr) ::sample_SampleMapEntry_DoNotUse();
  }
  ::sample_SampleMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_sample_SampleMapEntry_DoNotUse_claros_5fcommon_5fsample_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssample_SampleMapEntry_DoNotUse_claros_5fcommon_5fsample_2eproto}, {}};

static void InitDefaultssample_customMessage_claros_5fcommon_5fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_sample_customMessage_default_instance_;
    new (ptr) ::sample_customMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sample_customMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_sample_customMessage_claros_5fcommon_5fsample_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssample_customMessage_claros_5fcommon_5fsample_2eproto}, {}};

static void InitDefaultssample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_sample_RepeatableOneOf_default_instance_;
    new (ptr) ::sample_RepeatableOneOf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sample_RepeatableOneOf::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_sample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultssample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto}, {
      &scc_info_sample_customMessage_claros_5fcommon_5fsample_2eproto.base,}};

static void InitDefaultssample_claros_5fcommon_5fsample_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_sample_default_instance_;
    new (ptr) ::sample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_sample_claros_5fcommon_5fsample_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultssample_claros_5fcommon_5fsample_2eproto}, {
      &scc_info_sample_SampleMapEntry_DoNotUse_claros_5fcommon_5fsample_2eproto.base,
      &scc_info_sample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto.base,}};

void InitDefaults_claros_5fcommon_5fsample_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_sample_SampleMapEntry_DoNotUse_claros_5fcommon_5fsample_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_sample_customMessage_claros_5fcommon_5fsample_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_sample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_sample_claros_5fcommon_5fsample_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5fcommon_5fsample_2eproto[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_claros_5fcommon_5fsample_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5fcommon_5fsample_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5fcommon_5fsample_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::sample_SampleMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::sample_SampleMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sample_SampleMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::sample_SampleMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sample_customMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sample_customMessage, messagebody_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sample_RepeatableOneOf, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::sample_RepeatableOneOf, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::sample_RepeatableOneOfDefaultTypeInternal, repeatableoneofstring_),
  offsetof(::sample_RepeatableOneOfDefaultTypeInternal, repeatableoneofuint32_),
  offsetof(::sample_RepeatableOneOfDefaultTypeInternal, repeatablecustommessage_),
  PROTOBUF_FIELD_OFFSET(::sample_RepeatableOneOf, repeatableOneOf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sample, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::sample, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::sampleDefaultTypeInternal, samplestring_),
  offsetof(::sampleDefaultTypeInternal, sampleuint32_),
  PROTOBUF_FIELD_OFFSET(::sample, samplemap_),
  PROTOBUF_FIELD_OFFSET(::sample, samplerepeatedstring_),
  PROTOBUF_FIELD_OFFSET(::sample, sampleenumtype_),
  PROTOBUF_FIELD_OFFSET(::sample, repeatableoneof_),
  PROTOBUF_FIELD_OFFSET(::sample, oneof_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::sample_SampleMapEntry_DoNotUse)},
  { 9, -1, sizeof(::sample_customMessage)},
  { 15, -1, sizeof(::sample_RepeatableOneOf)},
  { 24, -1, sizeof(::sample)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_sample_SampleMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_sample_customMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_sample_RepeatableOneOf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_sample_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5fcommon_5fsample_2eproto = {
  {}, AddDescriptors_claros_5fcommon_5fsample_2eproto, "claros_common_sample.proto", schemas,
  file_default_instances, TableStruct_claros_5fcommon_5fsample_2eproto::offsets,
  file_level_metadata_claros_5fcommon_5fsample_2eproto, 4, file_level_enum_descriptors_claros_5fcommon_5fsample_2eproto, file_level_service_descriptors_claros_5fcommon_5fsample_2eproto,
};

const char descriptor_table_protodef_claros_5fcommon_5fsample_2eproto[] =
  "\n\032claros_common_sample.proto\"\215\004\n\006sample\022"
  "\026\n\014sampleString\030\001 \001(\tH\000\022\026\n\014sampleUint32\030"
  "\002 \001(\rH\000\022)\n\tsampleMap\030\003 \003(\0132\026.sample.Samp"
  "leMapEntry\022\034\n\024sampleRepeatedString\030\004 \003(\t"
  "\022(\n\016sampleEnumType\030\005 \001(\0162\020.sample.enumTy"
  "pe\0220\n\017repeatableOneOf\030\006 \003(\0132\027.sample.Rep"
  "eatableOneOf\0320\n\016SampleMapEntry\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032$\n\rcustomMessage\022"
  "\023\n\013messageBody\030\024 \001(\t\032\240\001\n\017RepeatableOneOf"
  "\022\037\n\025repeatableOneOfString\030\n \001(\tH\000\022\037\n\025rep"
  "eatableOneOfUint32\030\013 \001(\rH\000\0228\n\027repeatable"
  "CustomMessage\030\014 \001(\0132\025.sample.customMessa"
  "geH\000B\021\n\017repeatableOneOf\"*\n\010enumType\022\020\n\014E"
  "NUM_UNKNOWN\020\000\022\014\n\010ENUM_ONE\020\001B\007\n\005oneofb\006pr"
  "oto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5fcommon_5fsample_2eproto = {
  false, InitDefaults_claros_5fcommon_5fsample_2eproto, 
  descriptor_table_protodef_claros_5fcommon_5fsample_2eproto,
  "claros_common_sample.proto", &assign_descriptors_table_claros_5fcommon_5fsample_2eproto, 564,
};

void AddDescriptors_claros_5fcommon_5fsample_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5fcommon_5fsample_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5fcommon_5fsample_2eproto = []() { AddDescriptors_claros_5fcommon_5fsample_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* sample_enumType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_claros_5fcommon_5fsample_2eproto);
  return file_level_enum_descriptors_claros_5fcommon_5fsample_2eproto[0];
}
bool sample_enumType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const sample_enumType sample::ENUM_UNKNOWN;
const sample_enumType sample::ENUM_ONE;
const sample_enumType sample::enumType_MIN;
const sample_enumType sample::enumType_MAX;
const int sample::enumType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

sample_SampleMapEntry_DoNotUse::sample_SampleMapEntry_DoNotUse() {}
sample_SampleMapEntry_DoNotUse::sample_SampleMapEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void sample_SampleMapEntry_DoNotUse::MergeFrom(const sample_SampleMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata sample_SampleMapEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fsample_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fsample_2eproto[0];
}
void sample_SampleMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool sample_SampleMapEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      sample_SampleMapEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "sample.SampleMapEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "sample.SampleMapEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void sample_customMessage::InitAsDefaultInstance() {
}
class sample_customMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sample_customMessage::kMessageBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sample_customMessage::sample_customMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample.customMessage)
}
sample_customMessage::sample_customMessage(const sample_customMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messagebody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.messagebody().size() > 0) {
    messagebody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagebody_);
  }
  // @@protoc_insertion_point(copy_constructor:sample.customMessage)
}

void sample_customMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_sample_customMessage_claros_5fcommon_5fsample_2eproto.base);
  messagebody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

sample_customMessage::~sample_customMessage() {
  // @@protoc_insertion_point(destructor:sample.customMessage)
  SharedDtor();
}

void sample_customMessage::SharedDtor() {
  messagebody_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void sample_customMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const sample_customMessage& sample_customMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_sample_customMessage_claros_5fcommon_5fsample_2eproto.base);
  return *internal_default_instance();
}


void sample_customMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.customMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messagebody_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* sample_customMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<sample_customMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string messageBody = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sample.customMessage.messageBody");
        object = msg->mutable_messagebody();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool sample_customMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample.customMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string messageBody = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagebody()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->messagebody().data(), static_cast<int>(this->messagebody().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sample.customMessage.messageBody"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample.customMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample.customMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void sample_customMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample.customMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string messageBody = 20;
  if (this->messagebody().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagebody().data(), static_cast<int>(this->messagebody().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.customMessage.messageBody");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->messagebody(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample.customMessage)
}

::google::protobuf::uint8* sample_customMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample.customMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string messageBody = 20;
  if (this->messagebody().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->messagebody().data(), static_cast<int>(this->messagebody().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.customMessage.messageBody");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->messagebody(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.customMessage)
  return target;
}

size_t sample_customMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sample.customMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string messageBody = 20;
  if (this->messagebody().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->messagebody());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void sample_customMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sample.customMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const sample_customMessage* source =
      ::google::protobuf::DynamicCastToGenerated<sample_customMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sample.customMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sample.customMessage)
    MergeFrom(*source);
  }
}

void sample_customMessage::MergeFrom(const sample_customMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sample.customMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.messagebody().size() > 0) {

    messagebody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagebody_);
  }
}

void sample_customMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sample.customMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sample_customMessage::CopyFrom(const sample_customMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sample.customMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sample_customMessage::IsInitialized() const {
  return true;
}

void sample_customMessage::Swap(sample_customMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sample_customMessage::InternalSwap(sample_customMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  messagebody_.Swap(&other->messagebody_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata sample_customMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fsample_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fsample_2eproto[kIndexInFileMessages];
}


// ===================================================================

void sample_RepeatableOneOf::InitAsDefaultInstance() {
  ::_sample_RepeatableOneOf_default_instance_.repeatableoneofstring_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::_sample_RepeatableOneOf_default_instance_.repeatableoneofuint32_ = 0u;
  ::_sample_RepeatableOneOf_default_instance_.repeatablecustommessage_ = const_cast< ::sample_customMessage*>(
      ::sample_customMessage::internal_default_instance());
}
class sample_RepeatableOneOf::HasBitSetters {
 public:
  static const ::sample_customMessage& repeatablecustommessage(const sample_RepeatableOneOf* msg);
};

const ::sample_customMessage&
sample_RepeatableOneOf::HasBitSetters::repeatablecustommessage(const sample_RepeatableOneOf* msg) {
  return *msg->repeatableOneOf_.repeatablecustommessage_;
}
void sample_RepeatableOneOf::set_allocated_repeatablecustommessage(::sample_customMessage* repeatablecustommessage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_repeatableOneOf();
  if (repeatablecustommessage) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      repeatablecustommessage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, repeatablecustommessage, submessage_arena);
    }
    set_has_repeatablecustommessage();
    repeatableOneOf_.repeatablecustommessage_ = repeatablecustommessage;
  }
  // @@protoc_insertion_point(field_set_allocated:sample.RepeatableOneOf.repeatableCustomMessage)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sample_RepeatableOneOf::kRepeatableOneOfStringFieldNumber;
const int sample_RepeatableOneOf::kRepeatableOneOfUint32FieldNumber;
const int sample_RepeatableOneOf::kRepeatableCustomMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sample_RepeatableOneOf::sample_RepeatableOneOf()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample.RepeatableOneOf)
}
sample_RepeatableOneOf::sample_RepeatableOneOf(const sample_RepeatableOneOf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_repeatableOneOf();
  switch (from.repeatableOneOf_case()) {
    case kRepeatableOneOfString: {
      set_repeatableoneofstring(from.repeatableoneofstring());
      break;
    }
    case kRepeatableOneOfUint32: {
      set_repeatableoneofuint32(from.repeatableoneofuint32());
      break;
    }
    case kRepeatableCustomMessage: {
      mutable_repeatablecustommessage()->::sample_customMessage::MergeFrom(from.repeatablecustommessage());
      break;
    }
    case REPEATABLEONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sample.RepeatableOneOf)
}

void sample_RepeatableOneOf::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_sample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto.base);
  clear_has_repeatableOneOf();
}

sample_RepeatableOneOf::~sample_RepeatableOneOf() {
  // @@protoc_insertion_point(destructor:sample.RepeatableOneOf)
  SharedDtor();
}

void sample_RepeatableOneOf::SharedDtor() {
  if (has_repeatableOneOf()) {
    clear_repeatableOneOf();
  }
}

void sample_RepeatableOneOf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const sample_RepeatableOneOf& sample_RepeatableOneOf::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_sample_RepeatableOneOf_claros_5fcommon_5fsample_2eproto.base);
  return *internal_default_instance();
}


void sample_RepeatableOneOf::clear_repeatableOneOf() {
// @@protoc_insertion_point(one_of_clear_start:sample.RepeatableOneOf)
  switch (repeatableOneOf_case()) {
    case kRepeatableOneOfString: {
      repeatableOneOf_.repeatableoneofstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRepeatableOneOfUint32: {
      // No need to clear
      break;
    }
    case kRepeatableCustomMessage: {
      delete repeatableOneOf_.repeatablecustommessage_;
      break;
    }
    case REPEATABLEONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REPEATABLEONEOF_NOT_SET;
}


void sample_RepeatableOneOf::Clear() {
// @@protoc_insertion_point(message_clear_start:sample.RepeatableOneOf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_repeatableOneOf();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* sample_RepeatableOneOf::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<sample_RepeatableOneOf*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string repeatableOneOfString = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sample.RepeatableOneOf.repeatableOneOfString");
        object = msg->mutable_repeatableoneofstring();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 repeatableOneOfUint32 = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        msg->set_repeatableoneofuint32(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .sample.customMessage repeatableCustomMessage = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::sample_customMessage::_InternalParse;
        object = msg->mutable_repeatablecustommessage();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool sample_RepeatableOneOf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample.RepeatableOneOf)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string repeatableOneOfString = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_repeatableoneofstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repeatableoneofstring().data(), static_cast<int>(this->repeatableoneofstring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sample.RepeatableOneOf.repeatableOneOfString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 repeatableOneOfUint32 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          clear_repeatableOneOf();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &repeatableOneOf_.repeatableoneofuint32_)));
          set_has_repeatableoneofuint32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sample.customMessage repeatableCustomMessage = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_repeatablecustommessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample.RepeatableOneOf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample.RepeatableOneOf)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void sample_RepeatableOneOf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample.RepeatableOneOf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repeatableOneOfString = 10;
  if (has_repeatableoneofstring()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeatableoneofstring().data(), static_cast<int>(this->repeatableoneofstring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.RepeatableOneOf.repeatableOneOfString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->repeatableoneofstring(), output);
  }

  // uint32 repeatableOneOfUint32 = 11;
  if (has_repeatableoneofuint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->repeatableoneofuint32(), output);
  }

  // .sample.customMessage repeatableCustomMessage = 12;
  if (has_repeatablecustommessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::repeatablecustommessage(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample.RepeatableOneOf)
}

::google::protobuf::uint8* sample_RepeatableOneOf::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample.RepeatableOneOf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repeatableOneOfString = 10;
  if (has_repeatableoneofstring()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeatableoneofstring().data(), static_cast<int>(this->repeatableoneofstring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.RepeatableOneOf.repeatableOneOfString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->repeatableoneofstring(), target);
  }

  // uint32 repeatableOneOfUint32 = 11;
  if (has_repeatableoneofuint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->repeatableoneofuint32(), target);
  }

  // .sample.customMessage repeatableCustomMessage = 12;
  if (has_repeatablecustommessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::repeatablecustommessage(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample.RepeatableOneOf)
  return target;
}

size_t sample_RepeatableOneOf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sample.RepeatableOneOf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (repeatableOneOf_case()) {
    // string repeatableOneOfString = 10;
    case kRepeatableOneOfString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->repeatableoneofstring());
      break;
    }
    // uint32 repeatableOneOfUint32 = 11;
    case kRepeatableOneOfUint32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->repeatableoneofuint32());
      break;
    }
    // .sample.customMessage repeatableCustomMessage = 12;
    case kRepeatableCustomMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *repeatableOneOf_.repeatablecustommessage_);
      break;
    }
    case REPEATABLEONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void sample_RepeatableOneOf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sample.RepeatableOneOf)
  GOOGLE_DCHECK_NE(&from, this);
  const sample_RepeatableOneOf* source =
      ::google::protobuf::DynamicCastToGenerated<sample_RepeatableOneOf>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sample.RepeatableOneOf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sample.RepeatableOneOf)
    MergeFrom(*source);
  }
}

void sample_RepeatableOneOf::MergeFrom(const sample_RepeatableOneOf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sample.RepeatableOneOf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.repeatableOneOf_case()) {
    case kRepeatableOneOfString: {
      set_repeatableoneofstring(from.repeatableoneofstring());
      break;
    }
    case kRepeatableOneOfUint32: {
      set_repeatableoneofuint32(from.repeatableoneofuint32());
      break;
    }
    case kRepeatableCustomMessage: {
      mutable_repeatablecustommessage()->::sample_customMessage::MergeFrom(from.repeatablecustommessage());
      break;
    }
    case REPEATABLEONEOF_NOT_SET: {
      break;
    }
  }
}

void sample_RepeatableOneOf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sample.RepeatableOneOf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sample_RepeatableOneOf::CopyFrom(const sample_RepeatableOneOf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sample.RepeatableOneOf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sample_RepeatableOneOf::IsInitialized() const {
  return true;
}

void sample_RepeatableOneOf::Swap(sample_RepeatableOneOf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sample_RepeatableOneOf::InternalSwap(sample_RepeatableOneOf* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(repeatableOneOf_, other->repeatableOneOf_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata sample_RepeatableOneOf::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fsample_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fsample_2eproto[kIndexInFileMessages];
}


// ===================================================================

void sample::InitAsDefaultInstance() {
  ::_sample_default_instance_.samplestring_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::_sample_default_instance_.sampleuint32_ = 0u;
}
class sample::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sample::kSampleStringFieldNumber;
const int sample::kSampleUint32FieldNumber;
const int sample::kSampleMapFieldNumber;
const int sample::kSampleRepeatedStringFieldNumber;
const int sample::kSampleEnumTypeFieldNumber;
const int sample::kRepeatableOneOfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sample::sample()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample)
}
sample::sample(const sample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      samplerepeatedstring_(from.samplerepeatedstring_),
      repeatableoneof_(from.repeatableoneof_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  samplemap_.MergeFrom(from.samplemap_);
  sampleenumtype_ = from.sampleenumtype_;
  clear_has_oneof();
  switch (from.oneof_case()) {
    case kSampleString: {
      set_samplestring(from.samplestring());
      break;
    }
    case kSampleUint32: {
      set_sampleuint32(from.sampleuint32());
      break;
    }
    case ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:sample)
}

void sample::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_sample_claros_5fcommon_5fsample_2eproto.base);
  sampleenumtype_ = 0;
  clear_has_oneof();
}

sample::~sample() {
  // @@protoc_insertion_point(destructor:sample)
  SharedDtor();
}

void sample::SharedDtor() {
  if (has_oneof()) {
    clear_oneof();
  }
}

void sample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const sample& sample::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_sample_claros_5fcommon_5fsample_2eproto.base);
  return *internal_default_instance();
}


void sample::clear_oneof() {
// @@protoc_insertion_point(one_of_clear_start:sample)
  switch (oneof_case()) {
    case kSampleString: {
      oneof_.samplestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSampleUint32: {
      // No need to clear
      break;
    }
    case ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ONEOF_NOT_SET;
}


void sample::Clear() {
// @@protoc_insertion_point(message_clear_start:sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  samplemap_.Clear();
  samplerepeatedstring_.Clear();
  repeatableoneof_.Clear();
  sampleenumtype_ = 0;
  clear_oneof();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* sample::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<sample*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string sampleString = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("sample.sampleString");
        object = msg->mutable_samplestring();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 sampleUint32 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_sampleuint32(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // map<string, string> sampleMap = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::sample_SampleMapEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->samplemap_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // repeated string sampleRepeatedString = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("sample.sampleRepeatedString");
          object = msg->add_samplerepeatedstring();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // .sample.enumType sampleEnumType = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_sampleenumtype(static_cast<::sample_enumType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .sample.RepeatableOneOf repeatableOneOf = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::sample_RepeatableOneOf::_InternalParse;
          object = msg->add_repeatableoneof();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool sample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sampleString = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_samplestring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->samplestring().data(), static_cast<int>(this->samplestring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sample.sampleString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sampleUint32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          clear_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oneof_.sampleuint32_)));
          set_has_sampleuint32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> sampleMap = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          sample_SampleMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              sample_SampleMapEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&samplemap_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sample.SampleMapEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sample.SampleMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sampleRepeatedString = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_samplerepeatedstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->samplerepeatedstring(this->samplerepeatedstring_size() - 1).data(),
            static_cast<int>(this->samplerepeatedstring(this->samplerepeatedstring_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "sample.sampleRepeatedString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sample.enumType sampleEnumType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sampleenumtype(static_cast< ::sample_enumType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .sample.RepeatableOneOf repeatableOneOf = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_repeatableoneof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void sample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sampleString = 1;
  if (has_samplestring()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->samplestring().data(), static_cast<int>(this->samplestring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.sampleString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->samplestring(), output);
  }

  // uint32 sampleUint32 = 2;
  if (has_sampleuint32()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sampleuint32(), output);
  }

  // map<string, string> sampleMap = 3;
  if (!this->samplemap().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "sample.SampleMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "sample.SampleMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->samplemap().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->samplemap().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->samplemap().begin();
          it != this->samplemap().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<sample_SampleMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(samplemap_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<sample_SampleMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->samplemap().begin();
          it != this->samplemap().end(); ++it) {
        entry.reset(samplemap_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated string sampleRepeatedString = 4;
  for (int i = 0, n = this->samplerepeatedstring_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->samplerepeatedstring(i).data(), static_cast<int>(this->samplerepeatedstring(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.sampleRepeatedString");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->samplerepeatedstring(i), output);
  }

  // .sample.enumType sampleEnumType = 5;
  if (this->sampleenumtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->sampleenumtype(), output);
  }

  // repeated .sample.RepeatableOneOf repeatableOneOf = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeatableoneof_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->repeatableoneof(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample)
}

::google::protobuf::uint8* sample::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sampleString = 1;
  if (has_samplestring()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->samplestring().data(), static_cast<int>(this->samplestring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.sampleString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->samplestring(), target);
  }

  // uint32 sampleUint32 = 2;
  if (has_sampleuint32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sampleuint32(), target);
  }

  // map<string, string> sampleMap = 3;
  if (!this->samplemap().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "sample.SampleMapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "sample.SampleMapEntry.value");
      }
    };

    if (false &&
        this->samplemap().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->samplemap().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->samplemap().begin();
          it != this->samplemap().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<sample_SampleMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(samplemap_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<sample_SampleMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->samplemap().begin();
          it != this->samplemap().end(); ++it) {
        entry.reset(samplemap_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated string sampleRepeatedString = 4;
  for (int i = 0, n = this->samplerepeatedstring_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->samplerepeatedstring(i).data(), static_cast<int>(this->samplerepeatedstring(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "sample.sampleRepeatedString");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->samplerepeatedstring(i), target);
  }

  // .sample.enumType sampleEnumType = 5;
  if (this->sampleenumtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->sampleenumtype(), target);
  }

  // repeated .sample.RepeatableOneOf repeatableOneOf = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->repeatableoneof_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->repeatableoneof(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample)
  return target;
}

size_t sample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> sampleMap = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->samplemap_size());
  {
    ::std::unique_ptr<sample_SampleMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->samplemap().begin();
        it != this->samplemap().end(); ++it) {
      entry.reset(samplemap_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string sampleRepeatedString = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->samplerepeatedstring_size());
  for (int i = 0, n = this->samplerepeatedstring_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->samplerepeatedstring(i));
  }

  // repeated .sample.RepeatableOneOf repeatableOneOf = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->repeatableoneof_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->repeatableoneof(static_cast<int>(i)));
    }
  }

  // .sample.enumType sampleEnumType = 5;
  if (this->sampleenumtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sampleenumtype());
  }

  switch (oneof_case()) {
    // string sampleString = 1;
    case kSampleString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->samplestring());
      break;
    }
    // uint32 sampleUint32 = 2;
    case kSampleUint32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sampleuint32());
      break;
    }
    case ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void sample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sample)
  GOOGLE_DCHECK_NE(&from, this);
  const sample* source =
      ::google::protobuf::DynamicCastToGenerated<sample>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sample)
    MergeFrom(*source);
  }
}

void sample::MergeFrom(const sample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  samplemap_.MergeFrom(from.samplemap_);
  samplerepeatedstring_.MergeFrom(from.samplerepeatedstring_);
  repeatableoneof_.MergeFrom(from.repeatableoneof_);
  if (from.sampleenumtype() != 0) {
    set_sampleenumtype(from.sampleenumtype());
  }
  switch (from.oneof_case()) {
    case kSampleString: {
      set_samplestring(from.samplestring());
      break;
    }
    case kSampleUint32: {
      set_sampleuint32(from.sampleuint32());
      break;
    }
    case ONEOF_NOT_SET: {
      break;
    }
  }
}

void sample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sample::CopyFrom(const sample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sample::IsInitialized() const {
  return true;
}

void sample::Swap(sample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sample::InternalSwap(sample* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  samplemap_.Swap(&other->samplemap_);
  samplerepeatedstring_.InternalSwap(CastToBase(&other->samplerepeatedstring_));
  CastToBase(&repeatableoneof_)->InternalSwap(CastToBase(&other->repeatableoneof_));
  swap(sampleenumtype_, other->sampleenumtype_);
  swap(oneof_, other->oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata sample::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5fcommon_5fsample_2eproto);
  return ::file_level_metadata_claros_5fcommon_5fsample_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::sample_SampleMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::sample_SampleMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::sample_SampleMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::sample_customMessage* Arena::CreateMaybeMessage< ::sample_customMessage >(Arena* arena) {
  return Arena::CreateInternal< ::sample_customMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::sample_RepeatableOneOf* Arena::CreateMaybeMessage< ::sample_RepeatableOneOf >(Arena* arena) {
  return Arena::CreateInternal< ::sample_RepeatableOneOf >(arena);
}
template<> PROTOBUF_NOINLINE ::sample* Arena::CreateMaybeMessage< ::sample >(Arena* arena) {
  return Arena::CreateInternal< ::sample >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
