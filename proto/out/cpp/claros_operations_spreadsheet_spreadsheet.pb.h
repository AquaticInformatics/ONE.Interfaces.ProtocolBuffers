// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_operations_spreadsheet_spreadsheet.proto

#ifndef PROTOBUF_INCLUDED_claros_5foperations_5fspreadsheet_5fspreadsheet_2eproto
#define PROTOBUF_INCLUDED_claros_5foperations_5fspreadsheet_5fspreadsheet_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "claros_operations_spreadsheet_spreadsheet_definition.pb.h"
#include "claros_operations_spreadsheet_worksheet.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_claros_5foperations_5fspreadsheet_5fspreadsheet_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_claros_5foperations_5fspreadsheet_5fspreadsheet_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_claros_5foperations_5fspreadsheet_5fspreadsheet_2eproto();
namespace claros {
namespace operations {
namespace spreadsheet {
class Spreadsheet;
class SpreadsheetDefaultTypeInternal;
extern SpreadsheetDefaultTypeInternal _Spreadsheet_default_instance_;
}  // namespace spreadsheet
}  // namespace operations
}  // namespace claros
namespace google {
namespace protobuf {
template<> ::claros::operations::spreadsheet::Spreadsheet* Arena::CreateMaybeMessage<::claros::operations::spreadsheet::Spreadsheet>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace claros {
namespace operations {
namespace spreadsheet {

// ===================================================================

class Spreadsheet :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:claros.operations.spreadsheet.Spreadsheet) */ {
 public:
  Spreadsheet();
  virtual ~Spreadsheet();

  Spreadsheet(const Spreadsheet& from);

  inline Spreadsheet& operator=(const Spreadsheet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Spreadsheet(Spreadsheet&& from) noexcept
    : Spreadsheet() {
    *this = ::std::move(from);
  }

  inline Spreadsheet& operator=(Spreadsheet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Spreadsheet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Spreadsheet* internal_default_instance() {
    return reinterpret_cast<const Spreadsheet*>(
               &_Spreadsheet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Spreadsheet* other);
  friend void swap(Spreadsheet& a, Spreadsheet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Spreadsheet* New() const final {
    return CreateMaybeMessage<Spreadsheet>(nullptr);
  }

  Spreadsheet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Spreadsheet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Spreadsheet& from);
  void MergeFrom(const Spreadsheet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Spreadsheet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .claros.operations.spreadsheet.SpreadsheetDefinition timeDefinition = 3;
  int timedefinition_size() const;
  void clear_timedefinition();
  static const int kTimeDefinitionFieldNumber = 3;
  ::claros::operations::spreadsheet::SpreadsheetDefinition* mutable_timedefinition(int index);
  ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::SpreadsheetDefinition >*
      mutable_timedefinition();
  const ::claros::operations::spreadsheet::SpreadsheetDefinition& timedefinition(int index) const;
  ::claros::operations::spreadsheet::SpreadsheetDefinition* add_timedefinition();
  const ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::SpreadsheetDefinition >&
      timedefinition() const;

  // repeated .claros.operations.spreadsheet.Worksheet worksheet = 4;
  int worksheet_size() const;
  void clear_worksheet();
  static const int kWorksheetFieldNumber = 4;
  ::claros::operations::spreadsheet::Worksheet* mutable_worksheet(int index);
  ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Worksheet >*
      mutable_worksheet();
  const ::claros::operations::spreadsheet::Worksheet& worksheet(int index) const;
  ::claros::operations::spreadsheet::Worksheet* add_worksheet();
  const ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Worksheet >&
      worksheet() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string locationId = 2;
  void clear_locationid();
  static const int kLocationIdFieldNumber = 2;
  const ::std::string& locationid() const;
  void set_locationid(const ::std::string& value);
  #if LANG_CXX11
  void set_locationid(::std::string&& value);
  #endif
  void set_locationid(const char* value);
  void set_locationid(const char* value, size_t size);
  ::std::string* mutable_locationid();
  ::std::string* release_locationid();
  void set_allocated_locationid(::std::string* locationid);

  // @@protoc_insertion_point(class_scope:claros.operations.spreadsheet.Spreadsheet)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::SpreadsheetDefinition > timedefinition_;
  ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Worksheet > worksheet_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr locationid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_claros_5foperations_5fspreadsheet_5fspreadsheet_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Spreadsheet

// string name = 1;
inline void Spreadsheet::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Spreadsheet::name() const {
  // @@protoc_insertion_point(field_get:claros.operations.spreadsheet.Spreadsheet.name)
  return name_.GetNoArena();
}
inline void Spreadsheet::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.operations.spreadsheet.Spreadsheet.name)
}
#if LANG_CXX11
inline void Spreadsheet::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.operations.spreadsheet.Spreadsheet.name)
}
#endif
inline void Spreadsheet::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.operations.spreadsheet.Spreadsheet.name)
}
inline void Spreadsheet::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.operations.spreadsheet.Spreadsheet.name)
}
inline ::std::string* Spreadsheet::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:claros.operations.spreadsheet.Spreadsheet.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Spreadsheet::release_name() {
  // @@protoc_insertion_point(field_release:claros.operations.spreadsheet.Spreadsheet.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Spreadsheet::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:claros.operations.spreadsheet.Spreadsheet.name)
}

// string locationId = 2;
inline void Spreadsheet::clear_locationid() {
  locationid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Spreadsheet::locationid() const {
  // @@protoc_insertion_point(field_get:claros.operations.spreadsheet.Spreadsheet.locationId)
  return locationid_.GetNoArena();
}
inline void Spreadsheet::set_locationid(const ::std::string& value) {
  
  locationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:claros.operations.spreadsheet.Spreadsheet.locationId)
}
#if LANG_CXX11
inline void Spreadsheet::set_locationid(::std::string&& value) {
  
  locationid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:claros.operations.spreadsheet.Spreadsheet.locationId)
}
#endif
inline void Spreadsheet::set_locationid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  locationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:claros.operations.spreadsheet.Spreadsheet.locationId)
}
inline void Spreadsheet::set_locationid(const char* value, size_t size) {
  
  locationid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:claros.operations.spreadsheet.Spreadsheet.locationId)
}
inline ::std::string* Spreadsheet::mutable_locationid() {
  
  // @@protoc_insertion_point(field_mutable:claros.operations.spreadsheet.Spreadsheet.locationId)
  return locationid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Spreadsheet::release_locationid() {
  // @@protoc_insertion_point(field_release:claros.operations.spreadsheet.Spreadsheet.locationId)
  
  return locationid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Spreadsheet::set_allocated_locationid(::std::string* locationid) {
  if (locationid != nullptr) {
    
  } else {
    
  }
  locationid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locationid);
  // @@protoc_insertion_point(field_set_allocated:claros.operations.spreadsheet.Spreadsheet.locationId)
}

// repeated .claros.operations.spreadsheet.SpreadsheetDefinition timeDefinition = 3;
inline int Spreadsheet::timedefinition_size() const {
  return timedefinition_.size();
}
inline ::claros::operations::spreadsheet::SpreadsheetDefinition* Spreadsheet::mutable_timedefinition(int index) {
  // @@protoc_insertion_point(field_mutable:claros.operations.spreadsheet.Spreadsheet.timeDefinition)
  return timedefinition_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::SpreadsheetDefinition >*
Spreadsheet::mutable_timedefinition() {
  // @@protoc_insertion_point(field_mutable_list:claros.operations.spreadsheet.Spreadsheet.timeDefinition)
  return &timedefinition_;
}
inline const ::claros::operations::spreadsheet::SpreadsheetDefinition& Spreadsheet::timedefinition(int index) const {
  // @@protoc_insertion_point(field_get:claros.operations.spreadsheet.Spreadsheet.timeDefinition)
  return timedefinition_.Get(index);
}
inline ::claros::operations::spreadsheet::SpreadsheetDefinition* Spreadsheet::add_timedefinition() {
  // @@protoc_insertion_point(field_add:claros.operations.spreadsheet.Spreadsheet.timeDefinition)
  return timedefinition_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::SpreadsheetDefinition >&
Spreadsheet::timedefinition() const {
  // @@protoc_insertion_point(field_list:claros.operations.spreadsheet.Spreadsheet.timeDefinition)
  return timedefinition_;
}

// repeated .claros.operations.spreadsheet.Worksheet worksheet = 4;
inline int Spreadsheet::worksheet_size() const {
  return worksheet_.size();
}
inline ::claros::operations::spreadsheet::Worksheet* Spreadsheet::mutable_worksheet(int index) {
  // @@protoc_insertion_point(field_mutable:claros.operations.spreadsheet.Spreadsheet.worksheet)
  return worksheet_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Worksheet >*
Spreadsheet::mutable_worksheet() {
  // @@protoc_insertion_point(field_mutable_list:claros.operations.spreadsheet.Spreadsheet.worksheet)
  return &worksheet_;
}
inline const ::claros::operations::spreadsheet::Worksheet& Spreadsheet::worksheet(int index) const {
  // @@protoc_insertion_point(field_get:claros.operations.spreadsheet.Spreadsheet.worksheet)
  return worksheet_.Get(index);
}
inline ::claros::operations::spreadsheet::Worksheet* Spreadsheet::add_worksheet() {
  // @@protoc_insertion_point(field_add:claros.operations.spreadsheet.Spreadsheet.worksheet)
  return worksheet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::claros::operations::spreadsheet::Worksheet >&
Spreadsheet::worksheet() const {
  // @@protoc_insertion_point(field_list:claros.operations.spreadsheet.Spreadsheet.worksheet)
  return worksheet_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace spreadsheet
}  // namespace operations
}  // namespace claros

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_claros_5foperations_5fspreadsheet_5fspreadsheet_2eproto
