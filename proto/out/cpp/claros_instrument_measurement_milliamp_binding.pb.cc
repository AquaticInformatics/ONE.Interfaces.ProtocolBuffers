// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: claros_instrument_measurement_milliamp_binding.proto

#include "claros_instrument_measurement_milliamp_binding.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_claros_5fcommon_5fcore_5fclarosdatetime_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClarosDateTime_claros_5fcommon_5fcore_5fclarosdatetime_2eproto;
namespace claros {
namespace instrument {
class MilliAmpBindingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MilliAmpBinding> _instance;
} _MilliAmpBinding_default_instance_;
}  // namespace instrument
}  // namespace claros
static void InitDefaultsMilliAmpBinding_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::claros::instrument::_MilliAmpBinding_default_instance_;
    new (ptr) ::claros::instrument::MilliAmpBinding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::claros::instrument::MilliAmpBinding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MilliAmpBinding_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMilliAmpBinding_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto}, {
      &scc_info_ClarosDateTime_claros_5fcommon_5fcore_5fclarosdatetime_2eproto.base,}};

void InitDefaults_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MilliAmpBinding_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::claros::instrument::MilliAmpBinding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::claros::instrument::MilliAmpBinding, cardname_),
  PROTOBUF_FIELD_OFFSET(::claros::instrument::MilliAmpBinding, channel_),
  PROTOBUF_FIELD_OFFSET(::claros::instrument::MilliAmpBinding, validfrom_),
  PROTOBUF_FIELD_OFFSET(::claros::instrument::MilliAmpBinding, validto_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::claros::instrument::MilliAmpBinding)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::claros::instrument::_MilliAmpBinding_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto = {
  {}, AddDescriptors_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto, "claros_instrument_measurement_milliamp_binding.proto", schemas,
  file_default_instances, TableStruct_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto::offsets,
  file_level_metadata_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto, 1, file_level_enum_descriptors_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto, file_level_service_descriptors_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto,
};

const char descriptor_table_protodef_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto[] =
  "\n4claros_instrument_measurement_milliamp"
  "_binding.proto\022\021claros.instrument\032\'claro"
  "s_common_core_clarosdatetime.proto\"\240\001\n\017M"
  "illiAmpBinding\022\020\n\010cardName\030\001 \001(\t\022\017\n\007chan"
  "nel\030\002 \001(\r\0225\n\tvalidFrom\030\003 \001(\0132\".claros.co"
  "mmon.core.ClarosDateTime\0223\n\007validTo\030\004 \001("
  "\0132\".claros.common.core.ClarosDateTimeb\006p"
  "roto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto = {
  false, InitDefaults_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto, 
  descriptor_table_protodef_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto,
  "claros_instrument_measurement_milliamp_binding.proto", &assign_descriptors_table_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto, 285,
};

void AddDescriptors_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_claros_5fcommon_5fcore_5fclarosdatetime_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto = []() { AddDescriptors_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto(); return true; }();
namespace claros {
namespace instrument {

// ===================================================================

void MilliAmpBinding::InitAsDefaultInstance() {
  ::claros::instrument::_MilliAmpBinding_default_instance_._instance.get_mutable()->validfrom_ = const_cast< ::claros::common::core::ClarosDateTime*>(
      ::claros::common::core::ClarosDateTime::internal_default_instance());
  ::claros::instrument::_MilliAmpBinding_default_instance_._instance.get_mutable()->validto_ = const_cast< ::claros::common::core::ClarosDateTime*>(
      ::claros::common::core::ClarosDateTime::internal_default_instance());
}
class MilliAmpBinding::HasBitSetters {
 public:
  static const ::claros::common::core::ClarosDateTime& validfrom(const MilliAmpBinding* msg);
  static const ::claros::common::core::ClarosDateTime& validto(const MilliAmpBinding* msg);
};

const ::claros::common::core::ClarosDateTime&
MilliAmpBinding::HasBitSetters::validfrom(const MilliAmpBinding* msg) {
  return *msg->validfrom_;
}
const ::claros::common::core::ClarosDateTime&
MilliAmpBinding::HasBitSetters::validto(const MilliAmpBinding* msg) {
  return *msg->validto_;
}
void MilliAmpBinding::clear_validfrom() {
  if (GetArenaNoVirtual() == nullptr && validfrom_ != nullptr) {
    delete validfrom_;
  }
  validfrom_ = nullptr;
}
void MilliAmpBinding::clear_validto() {
  if (GetArenaNoVirtual() == nullptr && validto_ != nullptr) {
    delete validto_;
  }
  validto_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MilliAmpBinding::kCardNameFieldNumber;
const int MilliAmpBinding::kChannelFieldNumber;
const int MilliAmpBinding::kValidFromFieldNumber;
const int MilliAmpBinding::kValidToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MilliAmpBinding::MilliAmpBinding()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:claros.instrument.MilliAmpBinding)
}
MilliAmpBinding::MilliAmpBinding(const MilliAmpBinding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cardname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cardname().size() > 0) {
    cardname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardname_);
  }
  if (from.has_validfrom()) {
    validfrom_ = new ::claros::common::core::ClarosDateTime(*from.validfrom_);
  } else {
    validfrom_ = nullptr;
  }
  if (from.has_validto()) {
    validto_ = new ::claros::common::core::ClarosDateTime(*from.validto_);
  } else {
    validto_ = nullptr;
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:claros.instrument.MilliAmpBinding)
}

void MilliAmpBinding::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MilliAmpBinding_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto.base);
  cardname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&validfrom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&validfrom_)) + sizeof(channel_));
}

MilliAmpBinding::~MilliAmpBinding() {
  // @@protoc_insertion_point(destructor:claros.instrument.MilliAmpBinding)
  SharedDtor();
}

void MilliAmpBinding::SharedDtor() {
  cardname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete validfrom_;
  if (this != internal_default_instance()) delete validto_;
}

void MilliAmpBinding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MilliAmpBinding& MilliAmpBinding::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MilliAmpBinding_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto.base);
  return *internal_default_instance();
}


void MilliAmpBinding::Clear() {
// @@protoc_insertion_point(message_clear_start:claros.instrument.MilliAmpBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cardname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && validfrom_ != nullptr) {
    delete validfrom_;
  }
  validfrom_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && validto_ != nullptr) {
    delete validto_;
  }
  validto_ = nullptr;
  channel_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MilliAmpBinding::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MilliAmpBinding*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string cardName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("claros.instrument.MilliAmpBinding.cardName");
        object = msg->mutable_cardname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 channel = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_channel(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .claros.common.core.ClarosDateTime validFrom = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::core::ClarosDateTime::_InternalParse;
        object = msg->mutable_validfrom();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .claros.common.core.ClarosDateTime validTo = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::claros::common::core::ClarosDateTime::_InternalParse;
        object = msg->mutable_validto();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MilliAmpBinding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:claros.instrument.MilliAmpBinding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cardName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cardname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cardname().data(), static_cast<int>(this->cardname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "claros.instrument.MilliAmpBinding.cardName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.core.ClarosDateTime validFrom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validfrom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .claros.common.core.ClarosDateTime validTo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:claros.instrument.MilliAmpBinding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:claros.instrument.MilliAmpBinding)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MilliAmpBinding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:claros.instrument.MilliAmpBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cardName = 1;
  if (this->cardname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardname().data(), static_cast<int>(this->cardname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.instrument.MilliAmpBinding.cardName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cardname(), output);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->channel(), output);
  }

  // .claros.common.core.ClarosDateTime validFrom = 3;
  if (this->has_validfrom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::validfrom(this), output);
  }

  // .claros.common.core.ClarosDateTime validTo = 4;
  if (this->has_validto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::validto(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:claros.instrument.MilliAmpBinding)
}

::google::protobuf::uint8* MilliAmpBinding::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:claros.instrument.MilliAmpBinding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cardName = 1;
  if (this->cardname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cardname().data(), static_cast<int>(this->cardname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "claros.instrument.MilliAmpBinding.cardName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cardname(), target);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->channel(), target);
  }

  // .claros.common.core.ClarosDateTime validFrom = 3;
  if (this->has_validfrom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::validfrom(this), target);
  }

  // .claros.common.core.ClarosDateTime validTo = 4;
  if (this->has_validto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::validto(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:claros.instrument.MilliAmpBinding)
  return target;
}

size_t MilliAmpBinding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:claros.instrument.MilliAmpBinding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cardName = 1;
  if (this->cardname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cardname());
  }

  // .claros.common.core.ClarosDateTime validFrom = 3;
  if (this->has_validfrom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validfrom_);
  }

  // .claros.common.core.ClarosDateTime validTo = 4;
  if (this->has_validto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validto_);
  }

  // uint32 channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MilliAmpBinding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:claros.instrument.MilliAmpBinding)
  GOOGLE_DCHECK_NE(&from, this);
  const MilliAmpBinding* source =
      ::google::protobuf::DynamicCastToGenerated<MilliAmpBinding>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:claros.instrument.MilliAmpBinding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:claros.instrument.MilliAmpBinding)
    MergeFrom(*source);
  }
}

void MilliAmpBinding::MergeFrom(const MilliAmpBinding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:claros.instrument.MilliAmpBinding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cardname().size() > 0) {

    cardname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cardname_);
  }
  if (from.has_validfrom()) {
    mutable_validfrom()->::claros::common::core::ClarosDateTime::MergeFrom(from.validfrom());
  }
  if (from.has_validto()) {
    mutable_validto()->::claros::common::core::ClarosDateTime::MergeFrom(from.validto());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void MilliAmpBinding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:claros.instrument.MilliAmpBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MilliAmpBinding::CopyFrom(const MilliAmpBinding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:claros.instrument.MilliAmpBinding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MilliAmpBinding::IsInitialized() const {
  return true;
}

void MilliAmpBinding::Swap(MilliAmpBinding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MilliAmpBinding::InternalSwap(MilliAmpBinding* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  cardname_.Swap(&other->cardname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(validfrom_, other->validfrom_);
  swap(validto_, other->validto_);
  swap(channel_, other->channel_);
}

::google::protobuf::Metadata MilliAmpBinding::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto);
  return ::file_level_metadata_claros_5finstrument_5fmeasurement_5fmilliamp_5fbinding_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace instrument
}  // namespace claros
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::claros::instrument::MilliAmpBinding* Arena::CreateMaybeMessage< ::claros::instrument::MilliAmpBinding >(Arena* arena) {
  return Arena::CreateInternal< ::claros::instrument::MilliAmpBinding >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
