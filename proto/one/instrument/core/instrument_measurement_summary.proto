syntax = "proto3";
 
import "enum_instrument_data_attribute_priority.proto";
import "google/protobuf/wrappers.proto";
import "instrument_measurement_definition_summary.proto";
import "jsonTicksDateTime.proto";
 
option csharp_namespace = "One.Instrument.Core";

// Specifies the overflow status
enum EnumInstrumentMeasurementOverflowStatus {
    INSTRUMENT_MEASUREMENT_OVERFLOW_STATUS_NO = 0; // No Overflow
    INSTRUMENT_MEASUREMENT_OVERFLOW_STATUS_POSITIVE = 1; // Overflow positive
    INSTRUMENT_MEASUREMENT_OVERFLOW_STATUS_NEGATIVE = 2; // Overflow negative
}
 
message InstrumentMeasurementSummary {
      
  // Unique identifier of an instrument measurement - TwinRefId of a Telemetry DigitalTwin
  google.protobuf.StringValue telemetryId = 2; //TwinId
 
  // Represents the PropertyBag which contain - Instrument measurement definitions and most recent instrument measurements reported.
  InstrumentMeasurementDefinitionSummary instrumentMeasurementDefinitionSummary = 3; //TwinData

  double latestValue = 4; //InstrumentData

  JsonTicksDateTime latestTimestamp = 5; //InstrumentData

  EnumInstrumentDataAttributePriority displayPriority = 6; //Manifest

  google.protobuf.UInt32Value displaySortOrder = 7; //Manifest

  google.protobuf.UInt32Value displayDecimalPoints = 8; //Manifest
 
  // Represents a key-value pair of historical measurement data along with its reported timestamp (in UTC).
  map<string, double> historicalData = 9; //InstrumentData

  // The value represents the number of measurements taken into consideration for calculating the aggregated value
  uint32 aggregatedMeasurementCount = 10;

  // Determines if the measurement value is overflowed
  EnumInstrumentMeasurementOverflowStatus overflow = 11;
}
 
message InstrumentMeasurementSummaries {

  // Specifies whether the instrument is capable of providing measurements.
  google.protobuf.BoolValue enabled = 1;

  repeated InstrumentMeasurementSummary items = 2;
}